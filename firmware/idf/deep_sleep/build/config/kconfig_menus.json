[
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_BROWNOUT_RESET_SUPPORTED",
        "name": "SOC_BROWNOUT_RESET_SUPPORTED",
        "range": null,
        "title": null,
        "type": "string"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_TWAI_BRP_DIV_SUPPORTED",
        "name": "SOC_TWAI_BRP_DIV_SUPPORTED",
        "range": null,
        "title": null,
        "type": "string"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_DPORT_WORKAROUND",
        "name": "SOC_DPORT_WORKAROUND",
        "range": null,
        "title": null,
        "type": "string"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_CAPS_ECO_VER_MAX",
        "name": "SOC_CAPS_ECO_VER_MAX",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_ADC_SUPPORTED",
        "name": "SOC_ADC_SUPPORTED",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_DAC_SUPPORTED",
        "name": "SOC_DAC_SUPPORTED",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_UART_SUPPORTED",
        "name": "SOC_UART_SUPPORTED",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_MCPWM_SUPPORTED",
        "name": "SOC_MCPWM_SUPPORTED",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_GPTIMER_SUPPORTED",
        "name": "SOC_GPTIMER_SUPPORTED",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_SDMMC_HOST_SUPPORTED",
        "name": "SOC_SDMMC_HOST_SUPPORTED",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_BT_SUPPORTED",
        "name": "SOC_BT_SUPPORTED",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_PCNT_SUPPORTED",
        "name": "SOC_PCNT_SUPPORTED",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_PHY_SUPPORTED",
        "name": "SOC_PHY_SUPPORTED",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_WIFI_SUPPORTED",
        "name": "SOC_WIFI_SUPPORTED",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_SDIO_SLAVE_SUPPORTED",
        "name": "SOC_SDIO_SLAVE_SUPPORTED",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_TWAI_SUPPORTED",
        "name": "SOC_TWAI_SUPPORTED",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_EFUSE_SUPPORTED",
        "name": "SOC_EFUSE_SUPPORTED",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_EMAC_SUPPORTED",
        "name": "SOC_EMAC_SUPPORTED",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_ULP_SUPPORTED",
        "name": "SOC_ULP_SUPPORTED",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_CCOMP_TIMER_SUPPORTED",
        "name": "SOC_CCOMP_TIMER_SUPPORTED",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_RTC_FAST_MEM_SUPPORTED",
        "name": "SOC_RTC_FAST_MEM_SUPPORTED",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_RTC_SLOW_MEM_SUPPORTED",
        "name": "SOC_RTC_SLOW_MEM_SUPPORTED",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_RTC_MEM_SUPPORTED",
        "name": "SOC_RTC_MEM_SUPPORTED",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_I2S_SUPPORTED",
        "name": "SOC_I2S_SUPPORTED",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_RMT_SUPPORTED",
        "name": "SOC_RMT_SUPPORTED",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_SDM_SUPPORTED",
        "name": "SOC_SDM_SUPPORTED",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_GPSPI_SUPPORTED",
        "name": "SOC_GPSPI_SUPPORTED",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_LEDC_SUPPORTED",
        "name": "SOC_LEDC_SUPPORTED",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_I2C_SUPPORTED",
        "name": "SOC_I2C_SUPPORTED",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_SUPPORT_COEXISTENCE",
        "name": "SOC_SUPPORT_COEXISTENCE",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_AES_SUPPORTED",
        "name": "SOC_AES_SUPPORTED",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_MPI_SUPPORTED",
        "name": "SOC_MPI_SUPPORTED",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_SHA_SUPPORTED",
        "name": "SOC_SHA_SUPPORTED",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_FLASH_ENC_SUPPORTED",
        "name": "SOC_FLASH_ENC_SUPPORTED",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_SECURE_BOOT_SUPPORTED",
        "name": "SOC_SECURE_BOOT_SUPPORTED",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_TOUCH_SENSOR_SUPPORTED",
        "name": "SOC_TOUCH_SENSOR_SUPPORTED",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_BOD_SUPPORTED",
        "name": "SOC_BOD_SUPPORTED",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_ULP_FSM_SUPPORTED",
        "name": "SOC_ULP_FSM_SUPPORTED",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_CLK_TREE_SUPPORTED",
        "name": "SOC_CLK_TREE_SUPPORTED",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_MPU_SUPPORTED",
        "name": "SOC_MPU_SUPPORTED",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_WDT_SUPPORTED",
        "name": "SOC_WDT_SUPPORTED",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_SPI_FLASH_SUPPORTED",
        "name": "SOC_SPI_FLASH_SUPPORTED",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_RNG_SUPPORTED",
        "name": "SOC_RNG_SUPPORTED",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_LIGHT_SLEEP_SUPPORTED",
        "name": "SOC_LIGHT_SLEEP_SUPPORTED",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_DEEP_SLEEP_SUPPORTED",
        "name": "SOC_DEEP_SLEEP_SUPPORTED",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_LP_PERIPH_SHARE_INTERRUPT",
        "name": "SOC_LP_PERIPH_SHARE_INTERRUPT",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_PM_SUPPORTED",
        "name": "SOC_PM_SUPPORTED",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_DPORT_WORKAROUND_DIS_INTERRUPT_LVL",
        "name": "SOC_DPORT_WORKAROUND_DIS_INTERRUPT_LVL",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_XTAL_SUPPORT_26M",
        "name": "SOC_XTAL_SUPPORT_26M",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_XTAL_SUPPORT_40M",
        "name": "SOC_XTAL_SUPPORT_40M",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_XTAL_SUPPORT_AUTO_DETECT",
        "name": "SOC_XTAL_SUPPORT_AUTO_DETECT",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_ADC_RTC_CTRL_SUPPORTED",
        "name": "SOC_ADC_RTC_CTRL_SUPPORTED",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_ADC_DIG_CTRL_SUPPORTED",
        "name": "SOC_ADC_DIG_CTRL_SUPPORTED",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_ADC_DMA_SUPPORTED",
        "name": "SOC_ADC_DMA_SUPPORTED",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_ADC_PERIPH_NUM",
        "name": "SOC_ADC_PERIPH_NUM",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_ADC_MAX_CHANNEL_NUM",
        "name": "SOC_ADC_MAX_CHANNEL_NUM",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_ADC_ATTEN_NUM",
        "name": "SOC_ADC_ATTEN_NUM",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_ADC_DIGI_CONTROLLER_NUM",
        "name": "SOC_ADC_DIGI_CONTROLLER_NUM",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_ADC_PATT_LEN_MAX",
        "name": "SOC_ADC_PATT_LEN_MAX",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_ADC_DIGI_MIN_BITWIDTH",
        "name": "SOC_ADC_DIGI_MIN_BITWIDTH",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_ADC_DIGI_MAX_BITWIDTH",
        "name": "SOC_ADC_DIGI_MAX_BITWIDTH",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_ADC_DIGI_RESULT_BYTES",
        "name": "SOC_ADC_DIGI_RESULT_BYTES",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_ADC_DIGI_DATA_BYTES_PER_CONV",
        "name": "SOC_ADC_DIGI_DATA_BYTES_PER_CONV",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_ADC_DIGI_MONITOR_NUM",
        "name": "SOC_ADC_DIGI_MONITOR_NUM",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_ADC_SAMPLE_FREQ_THRES_HIGH",
        "name": "SOC_ADC_SAMPLE_FREQ_THRES_HIGH",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_ADC_SAMPLE_FREQ_THRES_LOW",
        "name": "SOC_ADC_SAMPLE_FREQ_THRES_LOW",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_ADC_RTC_MIN_BITWIDTH",
        "name": "SOC_ADC_RTC_MIN_BITWIDTH",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_ADC_RTC_MAX_BITWIDTH",
        "name": "SOC_ADC_RTC_MAX_BITWIDTH",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_ADC_SHARED_POWER",
        "name": "SOC_ADC_SHARED_POWER",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_SHARED_IDCACHE_SUPPORTED",
        "name": "SOC_SHARED_IDCACHE_SUPPORTED",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_IDCACHE_PER_CORE",
        "name": "SOC_IDCACHE_PER_CORE",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_CPU_CORES_NUM",
        "name": "SOC_CPU_CORES_NUM",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_CPU_INTR_NUM",
        "name": "SOC_CPU_INTR_NUM",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_CPU_HAS_FPU",
        "name": "SOC_CPU_HAS_FPU",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_HP_CPU_HAS_MULTIPLE_CORES",
        "name": "SOC_HP_CPU_HAS_MULTIPLE_CORES",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_CPU_BREAKPOINTS_NUM",
        "name": "SOC_CPU_BREAKPOINTS_NUM",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_CPU_WATCHPOINTS_NUM",
        "name": "SOC_CPU_WATCHPOINTS_NUM",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_CPU_WATCHPOINT_MAX_REGION_SIZE",
        "name": "SOC_CPU_WATCHPOINT_MAX_REGION_SIZE",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_DAC_CHAN_NUM",
        "name": "SOC_DAC_CHAN_NUM",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_DAC_RESOLUTION",
        "name": "SOC_DAC_RESOLUTION",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_DAC_DMA_16BIT_ALIGN",
        "name": "SOC_DAC_DMA_16BIT_ALIGN",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_GPIO_PORT",
        "name": "SOC_GPIO_PORT",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_GPIO_PIN_COUNT",
        "name": "SOC_GPIO_PIN_COUNT",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_GPIO_VALID_GPIO_MASK",
        "name": "SOC_GPIO_VALID_GPIO_MASK",
        "range": null,
        "title": null,
        "type": "hex"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_GPIO_IN_RANGE_MAX",
        "name": "SOC_GPIO_IN_RANGE_MAX",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_GPIO_OUT_RANGE_MAX",
        "name": "SOC_GPIO_OUT_RANGE_MAX",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_GPIO_VALID_DIGITAL_IO_PAD_MASK",
        "name": "SOC_GPIO_VALID_DIGITAL_IO_PAD_MASK",
        "range": null,
        "title": null,
        "type": "hex"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_GPIO_CLOCKOUT_BY_IO_MUX",
        "name": "SOC_GPIO_CLOCKOUT_BY_IO_MUX",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_GPIO_CLOCKOUT_CHANNEL_NUM",
        "name": "SOC_GPIO_CLOCKOUT_CHANNEL_NUM",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_GPIO_SUPPORT_HOLD_IO_IN_DSLP",
        "name": "SOC_GPIO_SUPPORT_HOLD_IO_IN_DSLP",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_I2C_NUM",
        "name": "SOC_I2C_NUM",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_HP_I2C_NUM",
        "name": "SOC_HP_I2C_NUM",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_I2C_FIFO_LEN",
        "name": "SOC_I2C_FIFO_LEN",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_I2C_CMD_REG_NUM",
        "name": "SOC_I2C_CMD_REG_NUM",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_I2C_SUPPORT_SLAVE",
        "name": "SOC_I2C_SUPPORT_SLAVE",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_I2C_SUPPORT_APB",
        "name": "SOC_I2C_SUPPORT_APB",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_I2C_SUPPORT_10BIT_ADDR",
        "name": "SOC_I2C_SUPPORT_10BIT_ADDR",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_I2C_STOP_INDEPENDENT",
        "name": "SOC_I2C_STOP_INDEPENDENT",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_I2S_NUM",
        "name": "SOC_I2S_NUM",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_I2S_HW_VERSION_1",
        "name": "SOC_I2S_HW_VERSION_1",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_I2S_SUPPORTS_APLL",
        "name": "SOC_I2S_SUPPORTS_APLL",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_I2S_SUPPORTS_PLL_F160M",
        "name": "SOC_I2S_SUPPORTS_PLL_F160M",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_I2S_SUPPORTS_PDM",
        "name": "SOC_I2S_SUPPORTS_PDM",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_I2S_SUPPORTS_PDM_TX",
        "name": "SOC_I2S_SUPPORTS_PDM_TX",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_I2S_SUPPORTS_PCM2PDM",
        "name": "SOC_I2S_SUPPORTS_PCM2PDM",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_I2S_SUPPORTS_PDM_RX",
        "name": "SOC_I2S_SUPPORTS_PDM_RX",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_I2S_SUPPORTS_PDM2PCM",
        "name": "SOC_I2S_SUPPORTS_PDM2PCM",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_I2S_PDM_MAX_TX_LINES",
        "name": "SOC_I2S_PDM_MAX_TX_LINES",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_I2S_PDM_MAX_RX_LINES",
        "name": "SOC_I2S_PDM_MAX_RX_LINES",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_I2S_SUPPORTS_ADC_DAC",
        "name": "SOC_I2S_SUPPORTS_ADC_DAC",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_I2S_SUPPORTS_ADC",
        "name": "SOC_I2S_SUPPORTS_ADC",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_I2S_SUPPORTS_DAC",
        "name": "SOC_I2S_SUPPORTS_DAC",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_I2S_SUPPORTS_LCD_CAMERA",
        "name": "SOC_I2S_SUPPORTS_LCD_CAMERA",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_I2S_MAX_DATA_WIDTH",
        "name": "SOC_I2S_MAX_DATA_WIDTH",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_I2S_TRANS_SIZE_ALIGN_WORD",
        "name": "SOC_I2S_TRANS_SIZE_ALIGN_WORD",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_I2S_LCD_I80_VARIANT",
        "name": "SOC_I2S_LCD_I80_VARIANT",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_LCD_I80_SUPPORTED",
        "name": "SOC_LCD_I80_SUPPORTED",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_LCD_I80_BUSES",
        "name": "SOC_LCD_I80_BUSES",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_LCD_I80_BUS_WIDTH",
        "name": "SOC_LCD_I80_BUS_WIDTH",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_LEDC_HAS_TIMER_SPECIFIC_MUX",
        "name": "SOC_LEDC_HAS_TIMER_SPECIFIC_MUX",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_LEDC_SUPPORT_APB_CLOCK",
        "name": "SOC_LEDC_SUPPORT_APB_CLOCK",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_LEDC_SUPPORT_REF_TICK",
        "name": "SOC_LEDC_SUPPORT_REF_TICK",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_LEDC_SUPPORT_HS_MODE",
        "name": "SOC_LEDC_SUPPORT_HS_MODE",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_LEDC_TIMER_NUM",
        "name": "SOC_LEDC_TIMER_NUM",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_LEDC_CHANNEL_NUM",
        "name": "SOC_LEDC_CHANNEL_NUM",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_LEDC_TIMER_BIT_WIDTH",
        "name": "SOC_LEDC_TIMER_BIT_WIDTH",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_MCPWM_GROUPS",
        "name": "SOC_MCPWM_GROUPS",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_MCPWM_TIMERS_PER_GROUP",
        "name": "SOC_MCPWM_TIMERS_PER_GROUP",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_MCPWM_OPERATORS_PER_GROUP",
        "name": "SOC_MCPWM_OPERATORS_PER_GROUP",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_MCPWM_COMPARATORS_PER_OPERATOR",
        "name": "SOC_MCPWM_COMPARATORS_PER_OPERATOR",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_MCPWM_GENERATORS_PER_OPERATOR",
        "name": "SOC_MCPWM_GENERATORS_PER_OPERATOR",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_MCPWM_TRIGGERS_PER_OPERATOR",
        "name": "SOC_MCPWM_TRIGGERS_PER_OPERATOR",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_MCPWM_GPIO_FAULTS_PER_GROUP",
        "name": "SOC_MCPWM_GPIO_FAULTS_PER_GROUP",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_MCPWM_CAPTURE_TIMERS_PER_GROUP",
        "name": "SOC_MCPWM_CAPTURE_TIMERS_PER_GROUP",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_MCPWM_CAPTURE_CHANNELS_PER_TIMER",
        "name": "SOC_MCPWM_CAPTURE_CHANNELS_PER_TIMER",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_MCPWM_GPIO_SYNCHROS_PER_GROUP",
        "name": "SOC_MCPWM_GPIO_SYNCHROS_PER_GROUP",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_MMU_PERIPH_NUM",
        "name": "SOC_MMU_PERIPH_NUM",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_MMU_LINEAR_ADDRESS_REGION_NUM",
        "name": "SOC_MMU_LINEAR_ADDRESS_REGION_NUM",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_MPU_CONFIGURABLE_REGIONS_SUPPORTED",
        "name": "SOC_MPU_CONFIGURABLE_REGIONS_SUPPORTED",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_MPU_MIN_REGION_SIZE",
        "name": "SOC_MPU_MIN_REGION_SIZE",
        "range": null,
        "title": null,
        "type": "hex"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_MPU_REGIONS_MAX_NUM",
        "name": "SOC_MPU_REGIONS_MAX_NUM",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_MPU_REGION_RO_SUPPORTED",
        "name": "SOC_MPU_REGION_RO_SUPPORTED",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_MPU_REGION_WO_SUPPORTED",
        "name": "SOC_MPU_REGION_WO_SUPPORTED",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_PCNT_GROUPS",
        "name": "SOC_PCNT_GROUPS",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_PCNT_UNITS_PER_GROUP",
        "name": "SOC_PCNT_UNITS_PER_GROUP",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_PCNT_CHANNELS_PER_UNIT",
        "name": "SOC_PCNT_CHANNELS_PER_UNIT",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_PCNT_THRES_POINT_PER_UNIT",
        "name": "SOC_PCNT_THRES_POINT_PER_UNIT",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_RMT_GROUPS",
        "name": "SOC_RMT_GROUPS",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_RMT_TX_CANDIDATES_PER_GROUP",
        "name": "SOC_RMT_TX_CANDIDATES_PER_GROUP",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_RMT_RX_CANDIDATES_PER_GROUP",
        "name": "SOC_RMT_RX_CANDIDATES_PER_GROUP",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_RMT_CHANNELS_PER_GROUP",
        "name": "SOC_RMT_CHANNELS_PER_GROUP",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_RMT_MEM_WORDS_PER_CHANNEL",
        "name": "SOC_RMT_MEM_WORDS_PER_CHANNEL",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_RMT_SUPPORT_REF_TICK",
        "name": "SOC_RMT_SUPPORT_REF_TICK",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_RMT_SUPPORT_APB",
        "name": "SOC_RMT_SUPPORT_APB",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_RMT_CHANNEL_CLK_INDEPENDENT",
        "name": "SOC_RMT_CHANNEL_CLK_INDEPENDENT",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_RTCIO_PIN_COUNT",
        "name": "SOC_RTCIO_PIN_COUNT",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_RTCIO_INPUT_OUTPUT_SUPPORTED",
        "name": "SOC_RTCIO_INPUT_OUTPUT_SUPPORTED",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_RTCIO_HOLD_SUPPORTED",
        "name": "SOC_RTCIO_HOLD_SUPPORTED",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_RTCIO_WAKE_SUPPORTED",
        "name": "SOC_RTCIO_WAKE_SUPPORTED",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_SDM_GROUPS",
        "name": "SOC_SDM_GROUPS",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_SDM_CHANNELS_PER_GROUP",
        "name": "SOC_SDM_CHANNELS_PER_GROUP",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_SDM_CLK_SUPPORT_APB",
        "name": "SOC_SDM_CLK_SUPPORT_APB",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_SPI_HD_BOTH_INOUT_SUPPORTED",
        "name": "SOC_SPI_HD_BOTH_INOUT_SUPPORTED",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_SPI_AS_CS_SUPPORTED",
        "name": "SOC_SPI_AS_CS_SUPPORTED",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_SPI_PERIPH_NUM",
        "name": "SOC_SPI_PERIPH_NUM",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_SPI_DMA_CHAN_NUM",
        "name": "SOC_SPI_DMA_CHAN_NUM",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_SPI_MAX_CS_NUM",
        "name": "SOC_SPI_MAX_CS_NUM",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_SPI_SUPPORT_CLK_APB",
        "name": "SOC_SPI_SUPPORT_CLK_APB",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_SPI_MAXIMUM_BUFFER_SIZE",
        "name": "SOC_SPI_MAXIMUM_BUFFER_SIZE",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_SPI_MAX_PRE_DIVIDER",
        "name": "SOC_SPI_MAX_PRE_DIVIDER",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_MEMSPI_SRC_FREQ_80M_SUPPORTED",
        "name": "SOC_MEMSPI_SRC_FREQ_80M_SUPPORTED",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_MEMSPI_SRC_FREQ_40M_SUPPORTED",
        "name": "SOC_MEMSPI_SRC_FREQ_40M_SUPPORTED",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_MEMSPI_SRC_FREQ_26M_SUPPORTED",
        "name": "SOC_MEMSPI_SRC_FREQ_26M_SUPPORTED",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_MEMSPI_SRC_FREQ_20M_SUPPORTED",
        "name": "SOC_MEMSPI_SRC_FREQ_20M_SUPPORTED",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_TIMER_GROUPS",
        "name": "SOC_TIMER_GROUPS",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_TIMER_GROUP_TIMERS_PER_GROUP",
        "name": "SOC_TIMER_GROUP_TIMERS_PER_GROUP",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_TIMER_GROUP_COUNTER_BIT_WIDTH",
        "name": "SOC_TIMER_GROUP_COUNTER_BIT_WIDTH",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_TIMER_GROUP_TOTAL_TIMERS",
        "name": "SOC_TIMER_GROUP_TOTAL_TIMERS",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_TIMER_GROUP_SUPPORT_APB",
        "name": "SOC_TIMER_GROUP_SUPPORT_APB",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_TOUCH_SENSOR_VERSION",
        "name": "SOC_TOUCH_SENSOR_VERSION",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_TOUCH_SENSOR_NUM",
        "name": "SOC_TOUCH_SENSOR_NUM",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_TOUCH_SUPPORT_SLEEP_WAKEUP",
        "name": "SOC_TOUCH_SUPPORT_SLEEP_WAKEUP",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_TOUCH_SAMPLE_CFG_NUM",
        "name": "SOC_TOUCH_SAMPLE_CFG_NUM",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_TWAI_CONTROLLER_NUM",
        "name": "SOC_TWAI_CONTROLLER_NUM",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_TWAI_BRP_MIN",
        "name": "SOC_TWAI_BRP_MIN",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_TWAI_CLK_SUPPORT_APB",
        "name": "SOC_TWAI_CLK_SUPPORT_APB",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_TWAI_SUPPORT_MULTI_ADDRESS_LAYOUT",
        "name": "SOC_TWAI_SUPPORT_MULTI_ADDRESS_LAYOUT",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_UART_NUM",
        "name": "SOC_UART_NUM",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_UART_HP_NUM",
        "name": "SOC_UART_HP_NUM",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_UART_SUPPORT_APB_CLK",
        "name": "SOC_UART_SUPPORT_APB_CLK",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_UART_SUPPORT_REF_TICK",
        "name": "SOC_UART_SUPPORT_REF_TICK",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_UART_FIFO_LEN",
        "name": "SOC_UART_FIFO_LEN",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_UART_BITRATE_MAX",
        "name": "SOC_UART_BITRATE_MAX",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_SPIRAM_SUPPORTED",
        "name": "SOC_SPIRAM_SUPPORTED",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_SPI_MEM_SUPPORT_CONFIG_GPIO_BY_EFUSE",
        "name": "SOC_SPI_MEM_SUPPORT_CONFIG_GPIO_BY_EFUSE",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_SHA_SUPPORT_PARALLEL_ENG",
        "name": "SOC_SHA_SUPPORT_PARALLEL_ENG",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_SHA_ENDIANNESS_BE",
        "name": "SOC_SHA_ENDIANNESS_BE",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_SHA_SUPPORT_SHA1",
        "name": "SOC_SHA_SUPPORT_SHA1",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_SHA_SUPPORT_SHA256",
        "name": "SOC_SHA_SUPPORT_SHA256",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_SHA_SUPPORT_SHA384",
        "name": "SOC_SHA_SUPPORT_SHA384",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_SHA_SUPPORT_SHA512",
        "name": "SOC_SHA_SUPPORT_SHA512",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_MPI_MEM_BLOCKS_NUM",
        "name": "SOC_MPI_MEM_BLOCKS_NUM",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_MPI_OPERATIONS_NUM",
        "name": "SOC_MPI_OPERATIONS_NUM",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_RSA_MAX_BIT_LEN",
        "name": "SOC_RSA_MAX_BIT_LEN",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_AES_SUPPORT_AES_128",
        "name": "SOC_AES_SUPPORT_AES_128",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_AES_SUPPORT_AES_192",
        "name": "SOC_AES_SUPPORT_AES_192",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_AES_SUPPORT_AES_256",
        "name": "SOC_AES_SUPPORT_AES_256",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_SECURE_BOOT_V1",
        "name": "SOC_SECURE_BOOT_V1",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_EFUSE_SECURE_BOOT_KEY_DIGESTS",
        "name": "SOC_EFUSE_SECURE_BOOT_KEY_DIGESTS",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_FLASH_ENCRYPTED_XTS_AES_BLOCK_MAX",
        "name": "SOC_FLASH_ENCRYPTED_XTS_AES_BLOCK_MAX",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_PHY_DIG_REGS_MEM_SIZE",
        "name": "SOC_PHY_DIG_REGS_MEM_SIZE",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_PM_SUPPORT_EXT0_WAKEUP",
        "name": "SOC_PM_SUPPORT_EXT0_WAKEUP",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_PM_SUPPORT_EXT1_WAKEUP",
        "name": "SOC_PM_SUPPORT_EXT1_WAKEUP",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_PM_SUPPORT_EXT_WAKEUP",
        "name": "SOC_PM_SUPPORT_EXT_WAKEUP",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_PM_SUPPORT_TOUCH_SENSOR_WAKEUP",
        "name": "SOC_PM_SUPPORT_TOUCH_SENSOR_WAKEUP",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_PM_SUPPORT_RTC_PERIPH_PD",
        "name": "SOC_PM_SUPPORT_RTC_PERIPH_PD",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_PM_SUPPORT_RTC_FAST_MEM_PD",
        "name": "SOC_PM_SUPPORT_RTC_FAST_MEM_PD",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_PM_SUPPORT_RTC_SLOW_MEM_PD",
        "name": "SOC_PM_SUPPORT_RTC_SLOW_MEM_PD",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_PM_SUPPORT_RC_FAST_PD",
        "name": "SOC_PM_SUPPORT_RC_FAST_PD",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_PM_SUPPORT_VDDSDIO_PD",
        "name": "SOC_PM_SUPPORT_VDDSDIO_PD",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_PM_SUPPORT_MODEM_PD",
        "name": "SOC_PM_SUPPORT_MODEM_PD",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_CONFIGURABLE_VDDSDIO_SUPPORTED",
        "name": "SOC_CONFIGURABLE_VDDSDIO_SUPPORTED",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_PM_MODEM_PD_BY_SW",
        "name": "SOC_PM_MODEM_PD_BY_SW",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_CLK_APLL_SUPPORTED",
        "name": "SOC_CLK_APLL_SUPPORTED",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_CLK_RC_FAST_D256_SUPPORTED",
        "name": "SOC_CLK_RC_FAST_D256_SUPPORTED",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_RTC_SLOW_CLK_SUPPORT_RC_FAST_D256",
        "name": "SOC_RTC_SLOW_CLK_SUPPORT_RC_FAST_D256",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_CLK_RC_FAST_SUPPORT_CALIBRATION",
        "name": "SOC_CLK_RC_FAST_SUPPORT_CALIBRATION",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_CLK_XTAL32K_SUPPORTED",
        "name": "SOC_CLK_XTAL32K_SUPPORTED",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_CLK_LP_FAST_SUPPORT_XTAL_D4",
        "name": "SOC_CLK_LP_FAST_SUPPORT_XTAL_D4",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_SDMMC_USE_IOMUX",
        "name": "SOC_SDMMC_USE_IOMUX",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_SDMMC_NUM_SLOTS",
        "name": "SOC_SDMMC_NUM_SLOTS",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_WIFI_WAPI_SUPPORT",
        "name": "SOC_WIFI_WAPI_SUPPORT",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_WIFI_CSI_SUPPORT",
        "name": "SOC_WIFI_CSI_SUPPORT",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_WIFI_MESH_SUPPORT",
        "name": "SOC_WIFI_MESH_SUPPORT",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_WIFI_SUPPORT_VARIABLE_BEACON_WINDOW",
        "name": "SOC_WIFI_SUPPORT_VARIABLE_BEACON_WINDOW",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_WIFI_NAN_SUPPORT",
        "name": "SOC_WIFI_NAN_SUPPORT",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_BLE_SUPPORTED",
        "name": "SOC_BLE_SUPPORTED",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_BLE_MESH_SUPPORTED",
        "name": "SOC_BLE_MESH_SUPPORTED",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_BT_CLASSIC_SUPPORTED",
        "name": "SOC_BT_CLASSIC_SUPPORTED",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_BLE_DEVICE_PRIVACY_SUPPORTED",
        "name": "SOC_BLE_DEVICE_PRIVACY_SUPPORTED",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_BLUFI_SUPPORTED",
        "name": "SOC_BLUFI_SUPPORTED",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_BT_H2C_ENC_KEY_CTRL_ENH_VSC_SUPPORTED",
        "name": "SOC_BT_H2C_ENC_KEY_CTRL_ENH_VSC_SUPPORTED",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_ULP_HAS_ADC",
        "name": "SOC_ULP_HAS_ADC",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_PHY_COMBO_MODULE",
        "name": "SOC_PHY_COMBO_MODULE",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "SOC_EMAC_RMII_CLK_OUT_INTERNAL_LOOPBACK",
        "name": "SOC_EMAC_RMII_CLK_OUT_INTERNAL_LOOPBACK",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "IDF_CMAKE",
        "name": "IDF_CMAKE",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": "- This option is for internal use only.\n- Enabling this option will help enable all FPGA support so as to\n  run ESP-IDF on an FPGA. This can help reproduce some issues that\n  only happens on FPGA condition, or when you have to burn some\n  efuses multiple times.",
        "id": "IDF_ENV_FPGA",
        "name": "IDF_ENV_FPGA",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": "- This option is ONLY used when doing new chip bringup.\n- This option will only enable necessary hw / sw settings for running\n  a hello_world application.",
        "id": "IDF_ENV_BRINGUP",
        "name": "IDF_ENV_BRINGUP",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "IDF_CI_BUILD",
        "name": "IDF_CI_BUILD",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "IDF_DOC_BUILD",
        "name": "IDF_DOC_BUILD",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "IDF_TOOLCHAIN",
        "name": "IDF_TOOLCHAIN",
        "range": null,
        "title": null,
        "type": "string"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "IDF_TOOLCHAIN_CLANG",
        "name": "IDF_TOOLCHAIN_CLANG",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "IDF_TOOLCHAIN_GCC",
        "name": "IDF_TOOLCHAIN_GCC",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "IDF_TARGET_ARCH_RISCV",
        "name": "IDF_TARGET_ARCH_RISCV",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "IDF_TARGET_ARCH_XTENSA",
        "name": "IDF_TARGET_ARCH_XTENSA",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "IDF_TARGET_ARCH",
        "name": "IDF_TARGET_ARCH",
        "range": null,
        "title": null,
        "type": "string"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "IDF_TARGET",
        "name": "IDF_TARGET",
        "range": null,
        "title": null,
        "type": "string"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "IDF_INIT_VERSION",
        "name": "IDF_INIT_VERSION",
        "range": null,
        "title": null,
        "type": "string"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "IDF_TARGET_ESP32",
        "name": "IDF_TARGET_ESP32",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "IDF_TARGET_ESP32S2",
        "name": "IDF_TARGET_ESP32S2",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "IDF_TARGET_ESP32S3",
        "name": "IDF_TARGET_ESP32S3",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "IDF_TARGET_ESP32C3",
        "name": "IDF_TARGET_ESP32C3",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "IDF_TARGET_ESP32C2",
        "name": "IDF_TARGET_ESP32C2",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "IDF_TARGET_ESP32C6",
        "name": "IDF_TARGET_ESP32C6",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "IDF_TARGET_ESP32C5",
        "name": "IDF_TARGET_ESP32C5",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "IDF_TARGET_ESP32P4",
        "name": "IDF_TARGET_ESP32P4",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "IDF_TARGET_ESP32H2",
        "name": "IDF_TARGET_ESP32H2",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "IDF_TARGET_ESP32C61",
        "name": "IDF_TARGET_ESP32C61",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "IDF_TARGET_ESP32H21",
        "name": "IDF_TARGET_ESP32H21",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "IDF_TARGET_LINUX",
        "name": "IDF_TARGET_LINUX",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "IDF_FIRMWARE_CHIP_ID",
        "name": "IDF_FIRMWARE_CHIP_ID",
        "range": null,
        "title": null,
        "type": "hex"
    },
    {
        "children": [
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "!IDF_TARGET_LINUX && <choice APP_BUILD_TYPE>",
                        "help": null,
                        "id": "APP_BUILD_TYPE_APP_2NDBOOT",
                        "name": "APP_BUILD_TYPE_APP_2NDBOOT",
                        "range": null,
                        "title": "Default (binary application + 2nd stage bootloader)",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice APP_BUILD_TYPE>",
                        "help": null,
                        "id": "APP_BUILD_TYPE_RAM",
                        "name": "APP_BUILD_TYPE_RAM",
                        "range": null,
                        "title": "Build app runs entirely in RAM (EXPERIMENTAL)",
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "help": "Select the way the application is built.\n\nBy default, the application is built as a binary file in a format compatible with\nthe ESP-IDF bootloader. In addition to this application, 2nd stage bootloader is\nalso built. Application and bootloader binaries can be written into flash and\nloaded/executed from there.\n\nAnother option, useful for only very small and limited applications, is to only link\nthe .elf file of the application, such that it can be loaded directly into RAM over\nJTAG or UART. Note that since IRAM and DRAM sizes are very limited, it is not possible\nto build any complex application this way. However for some kinds of testing and debugging,\nthis option may provide faster iterations, since the application does not need to be\nwritten into flash.\n\nNote: when APP_BUILD_TYPE_RAM is selected and loaded with JTAG, ESP-IDF does not contain\nall the startup code required to initialize the CPUs and ROM memory (data/bss).\nTherefore it is necessary to execute a bit of ROM code prior to executing the application.\nA gdbinit file may look as follows (for ESP32):\n\n    # Connect to a running instance of OpenOCD\n    target remote :3333\n    # Reset and halt the target\n    mon reset halt\n    # Run to a specific point in ROM code,\n    #  where most of initialization is complete.\n    thb *0x40007d54\n    c\n    # Load the application into RAM\n    load\n    # Run till app_main\n    tb app_main\n    c\n\nExecute this gdbinit file as follows:\n\n    xtensa-esp32-elf-gdb build/app-name.elf -x gdbinit\n\nExample gdbinit files for other targets can be found in tools/test_apps/system/gdb_loadable_elf/\n\nWhen loading the BIN with UART, the ROM will jump to ram and run the app after finishing the ROM\nstartup code, so there's no additional startup initialization required. You can use the\n`load_ram` in esptool.py to load the generated .bin file into ram and execute.\n\nExample:\n    esptool.py --chip {chip} -p {port} -b {baud} --no-stub load_ram {app.bin}\n\nRecommended sdkconfig.defaults for building loadable ELF files is as follows.\nCONFIG_APP_BUILD_TYPE_RAM is required, other options help reduce application\nmemory footprint.\n\n    CONFIG_APP_BUILD_TYPE_RAM=y\n    CONFIG_VFS_SUPPORT_TERMIOS=\n    CONFIG_NEWLIB_NANO_FORMAT=y\n    CONFIG_ESP_SYSTEM_PANIC_PRINT_HALT=y\n    CONFIG_ESP_DEBUG_STUBS_ENABLE=\n    CONFIG_ESP_ERR_TO_NAME_LOOKUP=",
                "id": "build-type-application-build-type",
                "name": "APP_BUILD_TYPE",
                "title": "Application build type",
                "type": "choice"
            },
            {
                "children": [],
                "depends_on": null,
                "help": null,
                "id": "APP_BUILD_GENERATE_BINARIES",
                "name": "APP_BUILD_GENERATE_BINARIES",
                "range": null,
                "title": null,
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": null,
                "help": null,
                "id": "APP_BUILD_BOOTLOADER",
                "name": "APP_BUILD_BOOTLOADER",
                "range": null,
                "title": null,
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": "APP_BUILD_TYPE_RAM",
                "help": "If this option is enabled, external memory and related peripherals, such as Cache, MMU,\nFlash and PSRAM, won't be initialized. Corresponding drivers won't be introduced either.\nComponents that depend on the spi_flash component will also be unavailable, such as\napp_update, etc. When this option is enabled, about 26KB of RAM space can be saved.",
                "id": "APP_BUILD_TYPE_PURE_RAM_APP",
                "name": "APP_BUILD_TYPE_PURE_RAM_APP",
                "range": null,
                "title": "Build app without SPI_FLASH/PSRAM support (saves ram)",
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": null,
                "help": null,
                "id": "APP_BUILD_USE_FLASH_SECTIONS",
                "name": "APP_BUILD_USE_FLASH_SECTIONS",
                "range": null,
                "title": null,
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": null,
                "help": "If enabled, all date, time, and path information would be eliminated. A .gdbinit file would be create\nautomatically. (or will be append if you have one already)",
                "id": "APP_REPRODUCIBLE_BUILD",
                "name": "APP_REPRODUCIBLE_BUILD",
                "range": null,
                "title": "Enable reproducible build",
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": null,
                "help": "If enabled, this disables the linking of binary libraries in the application build. Note\nthat after enabling this Wi-Fi/Bluetooth will not work.",
                "id": "APP_NO_BLOBS",
                "name": "APP_NO_BLOBS",
                "range": null,
                "title": "No Binary Blobs",
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": "IDF_TARGET_ESP32",
                "help": "Bootloaders before ESP-IDF v2.1 did less initialisation of the\nsystem clock. This setting needs to be enabled to build an app\nwhich can be booted by these older bootloaders.\n\nIf this setting is enabled, the app can be booted by any bootloader\nfrom IDF v1.0 up to the current version.\n\nIf this setting is disabled, the app can only be booted by bootloaders\nfrom IDF v2.1 or newer.\n\nEnabling this setting adds approximately 1KB to the app's IRAM usage.",
                "id": "APP_COMPATIBLE_PRE_V2_1_BOOTLOADERS",
                "name": "APP_COMPATIBLE_PRE_V2_1_BOOTLOADERS",
                "range": null,
                "title": "App compatible with bootloaders before ESP-IDF v2.1",
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": "IDF_TARGET_ESP32",
                "help": "Partition tables before ESP-IDF V3.1 do not contain an MD5 checksum\nfield, and the bootloader before ESP-IDF v3.1 cannot read a partition\ntable that contains an MD5 checksum field.\n\nEnable this option only if your app needs to boot on a bootloader and/or\npartition table that was generated from a version *before* ESP-IDF v3.1.\n\nIf this option and Flash Encryption are enabled at the same time, and any\ndata partitions in the partition table are marked Encrypted, then the\npartition encrypted flag should be manually verified in the app before accessing\nthe partition (see CVE-2021-27926).",
                "id": "APP_COMPATIBLE_PRE_V3_1_BOOTLOADERS",
                "name": "APP_COMPATIBLE_PRE_V3_1_BOOTLOADERS",
                "range": null,
                "title": "App compatible with bootloader and partition table before ESP-IDF v3.1",
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": "IDF_TARGET_ESP32",
                "help": null,
                "id": "APP_INIT_CLK",
                "name": "APP_INIT_CLK",
                "range": null,
                "title": null,
                "type": "bool"
            }
        ],
        "depends_on": null,
        "id": "build-type",
        "title": "Build type",
        "type": "menu"
    },
    {
        "children": [
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "!APP_REPRODUCIBLE_BUILD",
                        "help": "If set, then the bootloader will be built with the current time/date stamp.\nIt is stored in the bootloader description\nstructure. If not set, time/date stamp will be excluded from bootloader image.\nThis can be useful for getting the\nsame binary image files made from the same source, but at different times.",
                        "id": "BOOTLOADER_COMPILE_TIME_DATE",
                        "name": "BOOTLOADER_COMPILE_TIME_DATE",
                        "range": null,
                        "title": "Use time/date stamp for bootloader",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Project version. It is placed in \"version\" field of the esp_bootloader_desc structure.\nThe type of this field is \"uint32_t\".",
                        "id": "BOOTLOADER_PROJECT_VER",
                        "name": "BOOTLOADER_PROJECT_VER",
                        "range": [
                            0,
                            4294967295
                        ],
                        "title": "Project version",
                        "type": "int"
                    }
                ],
                "depends_on": null,
                "id": "bootloader-config-bootloader-manager",
                "title": "Bootloader manager",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": "BOOTLOADER_APP_ANTI_ROLLBACK",
                                        "help": "The secure version is the sequence number stored in the header of each firmware.\nThe security version is set in the bootloader, version is recorded in the eFuse field\nas the number of set ones. The allocated number of bits in the efuse field\nfor storing the security version is limited (see BOOTLOADER_APP_SEC_VER_SIZE_EFUSE_FIELD option).\n\nBootloader: When bootloader selects an app to boot, an app is selected that has\na security version greater or equal that recorded in eFuse field.\nThe app is booted with a higher (or equal) secure version.\n\nThe security version is worth increasing if in previous versions there is\na significant vulnerability and their use is not acceptable.\n\nYour partition table should has a scheme with ota_0 + ota_1 (without factory).",
                                        "id": "BOOTLOADER_APP_SECURE_VERSION",
                                        "name": "BOOTLOADER_APP_SECURE_VERSION",
                                        "range": null,
                                        "title": "eFuse secure version of app",
                                        "type": "int"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "BOOTLOADER_APP_ANTI_ROLLBACK",
                                        "help": "The size of the efuse secure version field.\nIts length is limited to 32 bits for ESP32 and 16 bits for ESP32-S2.\nThis determines how many times the security version can be increased.",
                                        "id": "BOOTLOADER_APP_SEC_VER_SIZE_EFUSE_FIELD",
                                        "name": "BOOTLOADER_APP_SEC_VER_SIZE_EFUSE_FIELD",
                                        "range": null,
                                        "title": "Size of the efuse secure version field",
                                        "type": "int"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "BOOTLOADER_APP_ANTI_ROLLBACK",
                                        "help": "This option allows to emulate read/write operations with all eFuses and efuse secure version.\nIt allows to test anti-rollback implementation without permanent write eFuse bits.\nThere should be an entry in partition table with following details: `emul_efuse, data, efuse, , 0x2000`.\n\nThis option enables: EFUSE_VIRTUAL and EFUSE_VIRTUAL_KEEP_IN_FLASH.",
                                        "id": "BOOTLOADER_EFUSE_SECURE_VERSION_EMULATE",
                                        "name": "BOOTLOADER_EFUSE_SECURE_VERSION_EMULATE",
                                        "range": null,
                                        "title": "Emulate operations with efuse secure version(only test)",
                                        "type": "bool"
                                    }
                                ],
                                "depends_on": "BOOTLOADER_APP_ROLLBACK_ENABLE",
                                "help": "This option prevents rollback to previous firmware/application image with lower security version.",
                                "id": "BOOTLOADER_APP_ANTI_ROLLBACK",
                                "name": "BOOTLOADER_APP_ANTI_ROLLBACK",
                                "range": null,
                                "title": "Enable app anti-rollback support",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "help": "After updating the app, the bootloader runs a new app with the \"ESP_OTA_IMG_PENDING_VERIFY\" state set.\nThis state prevents the re-run of this app. After the first boot of the new app in the user code, the\nfunction should be called to confirm the operability of the app or vice versa about its non-operability.\nIf the app is working, then it is marked as valid. Otherwise, it is marked as not valid and rolls back to\nthe previous working app. A reboot is performed, and the app is booted before the software update.\nNote: If during the first boot a new app the power goes out or the WDT works, then roll back will happen.\nRollback is possible only between the apps with the same security versions.",
                        "id": "BOOTLOADER_APP_ROLLBACK_ENABLE",
                        "name": "BOOTLOADER_APP_ROLLBACK_ENABLE",
                        "range": null,
                        "title": "Enable app rollback support",
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "id": "bootloader-config-application-rollback",
                "title": "Application Rollback",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "BOOTLOADER_ANTI_ROLLBACK_ENABLE",
                                "help": "The secure version is the sequence number stored in the header of each bootloader.\n\nThe ROM Bootloader which runs the 2nd stage bootloader (PRIMARY or RECOVERY) checks that\nthe security version is greater or equal that recorded in the eFuse field.\nBootloaders that have a secure version in the image < secure version in efuse will not boot.\n\nThe security version is worth increasing if in previous versions there is\na significant vulnerability and their use is not acceptable.",
                                "id": "BOOTLOADER_SECURE_VERSION",
                                "name": "BOOTLOADER_SECURE_VERSION",
                                "range": null,
                                "title": "Secure version of bootloader",
                                "type": "int"
                            }
                        ],
                        "depends_on": "SOC_RECOVERY_BOOTLOADER_SUPPORTED",
                        "help": "This option prevents rollback to previous bootloader image with lower security version.",
                        "id": "BOOTLOADER_ANTI_ROLLBACK_ENABLE",
                        "name": "BOOTLOADER_ANTI_ROLLBACK_ENABLE",
                        "range": null,
                        "title": "Enable bootloader rollback support",
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "id": "bootloader-config-bootloader-rollback",
                "title": "Bootloader Rollback",
                "type": "menu"
            },
            {
                "children": [],
                "depends_on": null,
                "help": "Offset address that 2nd bootloader will be flashed to.\nThe value is determined by the ROM bootloader.\nIt's not configurable in ESP-IDF.",
                "id": "BOOTLOADER_OFFSET_IN_FLASH",
                "name": "BOOTLOADER_OFFSET_IN_FLASH",
                "range": null,
                "title": null,
                "type": "hex"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "<choice BOOTLOADER_COMPILER_OPTIMIZATION>",
                        "help": null,
                        "id": "BOOTLOADER_COMPILER_OPTIMIZATION_SIZE",
                        "name": "BOOTLOADER_COMPILER_OPTIMIZATION_SIZE",
                        "range": null,
                        "title": "Size (-Os with GCC, -Oz with Clang)",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice BOOTLOADER_COMPILER_OPTIMIZATION>",
                        "help": null,
                        "id": "BOOTLOADER_COMPILER_OPTIMIZATION_DEBUG",
                        "name": "BOOTLOADER_COMPILER_OPTIMIZATION_DEBUG",
                        "range": null,
                        "title": "Debug (-Og)",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice BOOTLOADER_COMPILER_OPTIMIZATION>",
                        "help": null,
                        "id": "BOOTLOADER_COMPILER_OPTIMIZATION_PERF",
                        "name": "BOOTLOADER_COMPILER_OPTIMIZATION_PERF",
                        "range": null,
                        "title": "Optimize for performance (-O2)",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "(IDF_TARGET_ARCH_XTENSA || IDF_TARGET_ESP32C3 || IDF_TARGET_ESP32C2) && <choice BOOTLOADER_COMPILER_OPTIMIZATION>",
                        "help": null,
                        "id": "BOOTLOADER_COMPILER_OPTIMIZATION_NONE",
                        "name": "BOOTLOADER_COMPILER_OPTIMIZATION_NONE",
                        "range": null,
                        "title": "Debug without optimization (-O0) (Deprecated, will be removed in IDF v6.0)",
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "help": "This option sets compiler optimization level (gcc -O argument)\nfor the bootloader.\n\n- The default \"Size\" setting will add the -Os (-Oz with clang) flag to CFLAGS.\n- The \"Debug\" setting will add the -Og flag to CFLAGS.\n- The \"Performance\" setting will add the -O2 flag to CFLAGS.\n\nNote that custom optimization levels may be unsupported.",
                "id": "bootloader-config-bootloader-optimization-level",
                "name": "BOOTLOADER_COMPILER_OPTIMIZATION",
                "title": "Bootloader optimization Level",
                "type": "choice"
            },
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "<choice BOOTLOADER_LOG_VERSION>",
                                "help": null,
                                "id": "BOOTLOADER_LOG_VERSION_1",
                                "name": "BOOTLOADER_LOG_VERSION_1",
                                "range": null,
                                "title": "V1",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice BOOTLOADER_LOG_VERSION>",
                                "help": null,
                                "id": "BOOTLOADER_LOG_VERSION_2",
                                "name": "BOOTLOADER_LOG_VERSION_2",
                                "range": null,
                                "title": "V2",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "help": "Select the log version to be used by the ESP log component.\nThe app log version (CONFIG_LOG_VERSION) controls the version used in the bootloader,\npreventing the selection of different versions.\nFor description of V1 and V2 see CONFIG_LOG_VERSION.",
                        "id": "bootloader-config-log-log-version",
                        "name": "BOOTLOADER_LOG_VERSION",
                        "title": "Log version",
                        "type": "choice"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "This configuration sets the log version number based on the chosen log version.",
                        "id": "BOOTLOADER_LOG_VERSION",
                        "name": "BOOTLOADER_LOG_VERSION",
                        "range": null,
                        "title": null,
                        "type": "int"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "<choice BOOTLOADER_LOG_LEVEL>",
                                "help": null,
                                "id": "BOOTLOADER_LOG_LEVEL_NONE",
                                "name": "BOOTLOADER_LOG_LEVEL_NONE",
                                "range": null,
                                "title": "No output",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice BOOTLOADER_LOG_LEVEL>",
                                "help": null,
                                "id": "BOOTLOADER_LOG_LEVEL_ERROR",
                                "name": "BOOTLOADER_LOG_LEVEL_ERROR",
                                "range": null,
                                "title": "Error",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice BOOTLOADER_LOG_LEVEL>",
                                "help": null,
                                "id": "BOOTLOADER_LOG_LEVEL_WARN",
                                "name": "BOOTLOADER_LOG_LEVEL_WARN",
                                "range": null,
                                "title": "Warning",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice BOOTLOADER_LOG_LEVEL>",
                                "help": null,
                                "id": "BOOTLOADER_LOG_LEVEL_INFO",
                                "name": "BOOTLOADER_LOG_LEVEL_INFO",
                                "range": null,
                                "title": "Info",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice BOOTLOADER_LOG_LEVEL>",
                                "help": null,
                                "id": "BOOTLOADER_LOG_LEVEL_DEBUG",
                                "name": "BOOTLOADER_LOG_LEVEL_DEBUG",
                                "range": null,
                                "title": "Debug",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice BOOTLOADER_LOG_LEVEL>",
                                "help": null,
                                "id": "BOOTLOADER_LOG_LEVEL_VERBOSE",
                                "name": "BOOTLOADER_LOG_LEVEL_VERBOSE",
                                "range": null,
                                "title": "Verbose",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "help": "Specify how much output to see in bootloader logs.",
                        "id": "bootloader-config-log-bootloader-log-verbosity",
                        "name": "BOOTLOADER_LOG_LEVEL",
                        "title": "Bootloader log verbosity",
                        "type": "choice"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": null,
                        "id": "BOOTLOADER_LOG_LEVEL",
                        "name": "BOOTLOADER_LOG_LEVEL",
                        "range": null,
                        "title": null,
                        "type": "int"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "Enable ANSI terminal color codes. Logs (info, errors, warnings) will contain color codes.\nIn order to view these, your terminal program must support ANSI color codes.",
                                "id": "BOOTLOADER_LOG_COLORS",
                                "name": "BOOTLOADER_LOG_COLORS",
                                "range": null,
                                "title": "Color",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "BOOTLOADER_LOG_VERSION_2",
                                "help": "Enables support for color codes in the esp_log() function. If CONFIG_LOG_COLORS is enabled, this option\nis always active. If CONFIG_LOG_COLORS is disabled, this option allows you to still handle color codes\nin specific files by defining ESP_LOG_COLOR_DISABLED as 0 before including esp_log.h.\n\nNote that enabling this option may slightly increase RAM/FLASH usage due to additional color handling\nfunctionality. It provides flexibility to manage color output even when CONFIG_LOG_COLORS is turned off.",
                                "id": "BOOTLOADER_LOG_COLORS_SUPPORT",
                                "name": "BOOTLOADER_LOG_COLORS_SUPPORT",
                                "range": null,
                                "title": "Allow enabling color output at run time",
                                "type": "bool"
                            },
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": "BOOTLOADER_LOG_VERSION_2 && <choice BOOTLOADER_LOG_TIMESTAMP_SOURCE>",
                                        "help": null,
                                        "id": "BOOTLOADER_LOG_TIMESTAMP_SOURCE_NONE",
                                        "name": "BOOTLOADER_LOG_TIMESTAMP_SOURCE_NONE",
                                        "range": null,
                                        "title": "None",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "<choice BOOTLOADER_LOG_TIMESTAMP_SOURCE>",
                                        "help": null,
                                        "id": "BOOTLOADER_LOG_TIMESTAMP_SOURCE_CPU_TICKS",
                                        "name": "BOOTLOADER_LOG_TIMESTAMP_SOURCE_CPU_TICKS",
                                        "range": null,
                                        "title": "Milliseconds Since Boot",
                                        "type": "bool"
                                    }
                                ],
                                "depends_on": null,
                                "help": "Choose what sort of timestamp is displayed in the log output:\n\n- \"None\" - The log will only contain the actual log messages themselves\n  without any time-related information. Avoiding timestamps can help conserve\n  processing power and memory. It might useful when you\n  perform log analysis or debugging, sometimes it's more straightforward\n  to work with logs that lack timestamps, especially if the time of occurrence\n  is not critical for understanding the issues.\n  \"I log_test: info message\"\n\n- \"Milliseconds since boot\" is calculated from the RTOS tick count multiplied\n  by the tick period. This time will reset after a software reboot.\n  \"I (112500) log_test: info message\"",
                                "id": "bootloader-config-log-format-timestamp",
                                "name": "BOOTLOADER_LOG_TIMESTAMP_SOURCE",
                                "title": "Timestamp",
                                "type": "choice"
                            },
                            {
                                "children": [],
                                "depends_on": "BOOTLOADER_LOG_VERSION_2",
                                "help": "Enables support for timestamp in the esp_log() function.\nIf CONFIG_LOG_TIMESTAMP_SOURCE_NONE, this option allows you to still handle timestamp\nin specific files by defining ESP_LOG_TIMESTAMP_DISABLED as 0 before including esp_log.h.\n\nNote that enabling this option may slightly increase RAM/FLASH usage due to additional timestamp handling\nfunctionality. It provides flexibility to manage timestamp output even when\nCONFIG_LOG_TIMESTAMP_SOURCE_NONE.",
                                "id": "BOOTLOADER_LOG_TIMESTAMP_SUPPORT",
                                "name": "BOOTLOADER_LOG_TIMESTAMP_SUPPORT",
                                "range": null,
                                "title": "Allow enabling timestamp output at run time",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "id": "bootloader-config-log-format",
                        "title": "Format",
                        "type": "menu"
                    }
                ],
                "depends_on": null,
                "id": "bootloader-config-log",
                "title": "Log",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "IDF_TARGET_ESP32 && (ESPTOOLPY_FLASHMODE_QIO || ESPTOOLPY_FLASHMODE_QOUT)",
                        "help": "This setting is only used if the SPI flash pins have been overridden by setting the eFuses\nSPI_PAD_CONFIG_xxx, and the SPI flash mode is QIO or QOUT.\n\nWhen this is the case, the eFuse config only defines 3 of the 4 Quad I/O data pins. The WP pin (aka\nESP32 pin \"SD_DATA_3\" or SPI flash pin \"IO2\") is not specified in eFuse. The same pin is also used\nfor external SPIRAM if it is enabled.\n\nIf this config item is set to N (default), the correct WP pin will be automatically used for any\nEspressif chip or module with integrated flash. If a custom setting is needed, set this config item to\nY and specify the GPIO number connected to the WP.",
                        "id": "BOOTLOADER_SPI_CUSTOM_WP_PIN",
                        "name": "BOOTLOADER_SPI_CUSTOM_WP_PIN",
                        "range": null,
                        "title": "Use custom SPI Flash WP Pin when flash pins set in eFuse (read help)",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "IDF_TARGET_ESP32 && (ESPTOOLPY_FLASHMODE_QIO || ESPTOOLPY_FLASHMODE_QOUT)",
                        "help": "The option \"Use custom SPI Flash WP Pin\" must be set or this value is ignored\n\nIf burning a customized set of SPI flash pins in eFuse and using QIO or QOUT mode for flash, set this\nvalue to the GPIO number of the SPI flash WP pin.",
                        "id": "BOOTLOADER_SPI_WP_PIN",
                        "name": "BOOTLOADER_SPI_WP_PIN",
                        "range": null,
                        "title": "Custom SPI Flash WP Pin",
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "This will force 2nd bootloader to be loaded by DOUT mode, and will restore Dummy Cycle setting by\nresetting the Flash",
                        "id": "BOOTLOADER_FLASH_DC_AWARE",
                        "name": "BOOTLOADER_FLASH_DC_AWARE",
                        "range": null,
                        "title": "Allow app adjust Dummy Cycle bits in SPI Flash for higher frequency (READ HELP FIRST)",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Perform the startup flow recommended by XMC. Please consult XMC for the details of this flow.\nXMC chips will be forbidden to be used, when this option is disabled.\n\nDON'T DISABLE THIS UNLESS YOU KNOW WHAT YOU ARE DOING.\n\ncomment \"Features below require specific hardware (READ DOCS FIRST!)\"",
                        "id": "BOOTLOADER_FLASH_XMC_SUPPORT",
                        "name": "BOOTLOADER_FLASH_XMC_SUPPORT",
                        "range": null,
                        "title": "Enable the support for flash chips of XMC (READ DOCS FIRST)",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "This is a helper config for 32bits address flash. Invisible for users.",
                        "id": "BOOTLOADER_FLASH_32BIT_ADDR",
                        "name": "BOOTLOADER_FLASH_32BIT_ADDR",
                        "range": null,
                        "title": null,
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "This is a helper config for 32bits address flash. Invisible for users.",
                        "id": "BOOTLOADER_FLASH_NEEDS_32BIT_FEAT",
                        "name": "BOOTLOADER_FLASH_NEEDS_32BIT_FEAT",
                        "range": null,
                        "title": null,
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "This is a helper config for 32bits address quad flash. Invisible for users.",
                        "id": "BOOTLOADER_FLASH_NEEDS_32BIT_ADDR_QUAD_FLASH",
                        "name": "BOOTLOADER_FLASH_NEEDS_32BIT_ADDR_QUAD_FLASH",
                        "range": null,
                        "title": null,
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "BOOTLOADER_FLASH_NEEDS_32BIT_ADDR_QUAD_FLASH && IDF_EXPERIMENTAL_FEATURES",
                        "help": "Enabling this option allows the CPU to access 32-bit-address flash beyond 16M range.\n1. This option only valid for 4-line flash. Octal flash doesn't need this.\n2. This option is experimental, which means it can\u2019t use on all flash chips stable, for more\ninformation, please contact Espressif Business support.",
                        "id": "BOOTLOADER_CACHE_32BIT_ADDR_QUAD_FLASH",
                        "name": "BOOTLOADER_CACHE_32BIT_ADDR_QUAD_FLASH",
                        "range": null,
                        "title": "Enable cache access to 32-bit-address (over 16MB) range of SPI Flash (READ DOCS FIRST)",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": null,
                        "id": "BOOTLOADER_CACHE_32BIT_ADDR_OCTAL_FLASH",
                        "name": "BOOTLOADER_CACHE_32BIT_ADDR_OCTAL_FLASH",
                        "range": null,
                        "title": null,
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "id": "bootloader-config-serial-flash-configurations",
                "title": "Serial Flash Configurations",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "!ESPTOOLPY_FLASHFREQ_80M && <choice BOOTLOADER_VDDSDIO_BOOST>",
                        "help": null,
                        "id": "BOOTLOADER_VDDSDIO_BOOST_1_8V",
                        "name": "BOOTLOADER_VDDSDIO_BOOST_1_8V",
                        "range": null,
                        "title": "1.8V",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice BOOTLOADER_VDDSDIO_BOOST>",
                        "help": null,
                        "id": "BOOTLOADER_VDDSDIO_BOOST_1_9V",
                        "name": "BOOTLOADER_VDDSDIO_BOOST_1_9V",
                        "range": null,
                        "title": "1.9V",
                        "type": "bool"
                    }
                ],
                "depends_on": "SOC_CONFIGURABLE_VDDSDIO_SUPPORTED",
                "help": "If this option is enabled, and VDDSDIO LDO is set to 1.8V (using eFuse\nor MTDI bootstrapping pin), bootloader will change LDO settings to\noutput 1.9V instead. This helps prevent flash chip from browning out\nduring flash programming operations.\n\nThis option has no effect if VDDSDIO is set to 3.3V, or if the internal\nVDDSDIO regulator is disabled via eFuse.",
                "id": "bootloader-config-vddsdio-ldo-voltage",
                "name": "BOOTLOADER_VDDSDIO_BOOST",
                "title": "VDDSDIO LDO voltage",
                "type": "choice"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "BOOTLOADER_FACTORY_RESET",
                        "help": "The selected GPIO will be configured as an input with internal pull-up enabled. To trigger a factory\nreset, this GPIO must be held high or low (as configured) on startup.\n\nNote that on some SoCs not all pins have an internal pull-up and certain pins are already\nused by ROM bootloader as bootstrapping. Refer to the technical reference manual for further\ndetails on the selected SoC.",
                        "id": "BOOTLOADER_NUM_PIN_FACTORY_RESET",
                        "name": "BOOTLOADER_NUM_PIN_FACTORY_RESET",
                        "range": null,
                        "title": "Number of the GPIO input for factory reset",
                        "type": "int"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "<choice BOOTLOADER_FACTORY_RESET_PIN_LEVEL>",
                                "help": null,
                                "id": "BOOTLOADER_FACTORY_RESET_PIN_LOW",
                                "name": "BOOTLOADER_FACTORY_RESET_PIN_LOW",
                                "range": null,
                                "title": "Reset on GPIO low",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice BOOTLOADER_FACTORY_RESET_PIN_LEVEL>",
                                "help": null,
                                "id": "BOOTLOADER_FACTORY_RESET_PIN_HIGH",
                                "name": "BOOTLOADER_FACTORY_RESET_PIN_HIGH",
                                "range": null,
                                "title": "Reset on GPIO high",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "BOOTLOADER_FACTORY_RESET",
                        "help": "Pin level for factory reset, can be triggered on low or high.",
                        "id": "bootloader-config-gpio-triggers-factory-reset-factory-reset-gpio-level",
                        "name": "BOOTLOADER_FACTORY_RESET_PIN_LEVEL",
                        "title": "Factory reset GPIO level",
                        "type": "choice"
                    },
                    {
                        "children": [],
                        "depends_on": "BOOTLOADER_FACTORY_RESET",
                        "help": "The device will boot from \"factory\" partition (or OTA slot 0 if no factory partition is present) after a\nfactory reset.",
                        "id": "BOOTLOADER_OTA_DATA_ERASE",
                        "name": "BOOTLOADER_OTA_DATA_ERASE",
                        "range": null,
                        "title": "Clear OTA data on factory reset (select factory partition)",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "BOOTLOADER_FACTORY_RESET",
                        "help": "Allows customers to select which data partitions will be erased while factory reset.\n\nSpecify the names of partitions as a comma-delimited with optional spaces for readability. (Like this:\n\"nvs, phy_init, ...\")\nMake sure that the name specified in the partition table and here are the same.\nPartitions of type \"app\" cannot be specified here.",
                        "id": "BOOTLOADER_DATA_FACTORY_RESET",
                        "name": "BOOTLOADER_DATA_FACTORY_RESET",
                        "range": null,
                        "title": "Comma-separated names of partitions to clear on factory reset",
                        "type": "string"
                    }
                ],
                "depends_on": null,
                "help": "Allows to reset the device to factory settings:\n- clear one or more data partitions;\n- boot from \"factory\" partition.\nThe factory reset will occur if there is a GPIO input held at the configured level while\ndevice starts up. See settings below.",
                "id": "BOOTLOADER_FACTORY_RESET",
                "name": "BOOTLOADER_FACTORY_RESET",
                "range": null,
                "title": "GPIO triggers factory reset",
                "type": "bool"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "BOOTLOADER_APP_TEST",
                        "help": "The selected GPIO will be configured as an input with internal pull-up enabled.\nTo trigger a test app, this GPIO must be pulled low on reset.\nAfter the GPIO input is deactivated and the device reboots, the old application will boot.\n(factory or OTA[x]).\n\nNote that on some SoCs not all pins have an internal pull-up and certain pins are already\nused by ROM bootloader as bootstrapping. Refer to the technical reference manual for further\ndetails on the selected SoC.",
                        "id": "BOOTLOADER_NUM_PIN_APP_TEST",
                        "name": "BOOTLOADER_NUM_PIN_APP_TEST",
                        "range": null,
                        "title": "Number of the GPIO input to boot TEST partition",
                        "type": "int"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "<choice BOOTLOADER_APP_TEST_PIN_LEVEL>",
                                "help": null,
                                "id": "BOOTLOADER_APP_TEST_PIN_LOW",
                                "name": "BOOTLOADER_APP_TEST_PIN_LOW",
                                "range": null,
                                "title": "Enter test app on GPIO low",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice BOOTLOADER_APP_TEST_PIN_LEVEL>",
                                "help": null,
                                "id": "BOOTLOADER_APP_TEST_PIN_HIGH",
                                "name": "BOOTLOADER_APP_TEST_PIN_HIGH",
                                "range": null,
                                "title": "Enter test app on GPIO high",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "BOOTLOADER_APP_TEST",
                        "help": "Pin level for app test, can be triggered on low or high.",
                        "id": "bootloader-config-gpio-triggers-boot-from-test-app-partition-app-test-gpio-level",
                        "name": "BOOTLOADER_APP_TEST_PIN_LEVEL",
                        "title": "App test GPIO level",
                        "type": "choice"
                    }
                ],
                "depends_on": "!BOOTLOADER_APP_ANTI_ROLLBACK",
                "help": "Allows to run the test app from \"TEST\" partition.\nA boot from \"test\" partition will occur if there is a GPIO input pulled low while device starts up.\nSee settings below.",
                "id": "BOOTLOADER_APP_TEST",
                "name": "BOOTLOADER_APP_TEST",
                "range": null,
                "title": "GPIO triggers boot from test app partition",
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": "BOOTLOADER_FACTORY_RESET || BOOTLOADER_APP_TEST",
                "help": "The GPIO must be held low continuously for this period of time after reset\nbefore a factory reset or test partition boot (as applicable) is performed.",
                "id": "BOOTLOADER_HOLD_TIME_GPIO",
                "name": "BOOTLOADER_HOLD_TIME_GPIO",
                "range": null,
                "title": "Hold time of GPIO for reset/test mode (seconds)",
                "type": "int"
            },
            {
                "children": [],
                "depends_on": null,
                "help": "Protects the unmapped memory regions of the entire address space from unintended accesses.\nThis will ensure that an exception will be triggered whenever the CPU performs a memory\noperation on unmapped regions of the address space.\nNOTE: Disabling this config on some targets (ESP32-C6, ESP32-H2, ESP32-C5) would not generate\nan exception when reading from or writing to 0x0.",
                "id": "BOOTLOADER_REGION_PROTECTION_ENABLE",
                "name": "BOOTLOADER_REGION_PROTECTION_ENABLE",
                "range": null,
                "title": "Enable protection for unmapped memory regions",
                "type": "bool"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "BOOTLOADER_WDT_ENABLE",
                        "help": "If this option is set, the ESP-IDF app must explicitly reset, feed, or disable the rtc_wdt in\nthe app's own code.\nIf this option is not set (default), then rtc_wdt will be disabled by ESP-IDF before calling\nthe app_main() function.\n\nUse function wdt_hal_feed() for resetting counter of RTC_WDT.\nFor esp32/s2 you can also use rtc_wdt_feed().\n\nUse function wdt_hal_disable() for disabling RTC_WDT.\nFor esp32/s2 you can also use rtc_wdt_disable().",
                        "id": "BOOTLOADER_WDT_DISABLE_IN_USER_CODE",
                        "name": "BOOTLOADER_WDT_DISABLE_IN_USER_CODE",
                        "range": null,
                        "title": "Allows RTC watchdog disable in user code",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "BOOTLOADER_WDT_ENABLE",
                        "help": "Verify that this parameter is correct and more then the execution time.\nPay attention to options such as reset to factory, trigger test partition and encryption on boot\n- these options can increase the execution time.\nNote: RTC_WDT will reset while encryption operations will be performed.",
                        "id": "BOOTLOADER_WDT_TIME_MS",
                        "name": "BOOTLOADER_WDT_TIME_MS",
                        "range": [
                            0,
                            120000
                        ],
                        "title": "Timeout for RTC watchdog (ms)",
                        "type": "int"
                    }
                ],
                "depends_on": null,
                "help": "Tracks the execution time of startup code.\nIf the execution time is exceeded, the RTC_WDT will restart system.\nIt is also useful to prevent a lock up in start code caused by an unstable power source.\nNOTE: Tracks the execution time starts from the bootloader code - re-set timeout, while selecting the\nsource for slow_clk - and ends calling app_main.\nRe-set timeout is needed due to WDT uses a SLOW_CLK clock source. After changing a frequency slow_clk a\ntime of WDT needs to re-set for new frequency.\nslow_clk depends on RTC_CLK_SRC (INTERNAL_RC or EXTERNAL_CRYSTAL).",
                "id": "BOOTLOADER_WDT_ENABLE",
                "name": "BOOTLOADER_WDT_ENABLE",
                "range": null,
                "title": "Use RTC watchdog in start code",
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": "(SECURE_BOOT && SECURE_BOOT_INSECURE) || !SECURE_BOOT",
                "help": "This option disables the normal validation of an image coming out of\ndeep sleep (checksums, SHA256, and signature). This is a trade-off\nbetween wakeup performance from deep sleep, and image integrity checks.\n\nOnly enable this if you know what you are doing. It should not be used\nin conjunction with using deep_sleep() entry and changing the active OTA\npartition as this would skip the validation upon first load of the new\nOTA partition.\n\nIt is possible to enable this option with Secure Boot if \"allow insecure\noptions\" is enabled, however it's strongly recommended to NOT enable it as\nit may allow a Secure Boot bypass.",
                "id": "BOOTLOADER_SKIP_VALIDATE_IN_DEEP_SLEEP",
                "name": "BOOTLOADER_SKIP_VALIDATE_IN_DEEP_SLEEP",
                "range": null,
                "title": "Skip image validation when exiting deep sleep",
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": "!SECURE_SIGNED_ON_BOOT",
                "help": "Some applications need to boot very quickly from power on. By default, the entire app binary\nis read from flash and verified which takes up a significant portion of the boot time.\n\nEnabling this option will skip validation of the app when the SoC boots from power on.\nNote that in this case it's not possible for the bootloader to detect if an app image is\ncorrupted in the flash, therefore it's not possible to safely fall back to a different app\npartition. Flash corruption of this kind is unlikely but can happen if there is a serious\nfirmware bug or physical damage.\n\nFollowing other reset types, the bootloader will still validate the app image. This increases\nthe chances that flash corruption resulting in a crash can be detected following soft reset, and\nthe bootloader will fall back to a valid app image. To increase the chances of successfully recovering\nfrom a flash corruption event, keep the option BOOTLOADER_WDT_ENABLE enabled and consider also enabling\nBOOTLOADER_WDT_DISABLE_IN_USER_CODE - then manually disable the RTC Watchdog once the app is running.\nIn addition, enable both the Task and Interrupt watchdog timers with reset options set.",
                "id": "BOOTLOADER_SKIP_VALIDATE_ON_POWER_ON",
                "name": "BOOTLOADER_SKIP_VALIDATE_ON_POWER_ON",
                "range": null,
                "title": "Skip image validation from power on reset (READ HELP FIRST)",
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": "!SECURE_SIGNED_ON_BOOT",
                "help": "Selecting this option prevents the bootloader from ever validating the app image before\nbooting it. Any flash corruption of the selected app partition will make the entire SoC\nunbootable.\n\nAlthough flash corruption is a very rare case, it is not recommended to select this option.\nConsider selecting \"Skip image validation from power on reset\" instead. However, if boot time\nis the only important factor then it can be enabled.",
                "id": "BOOTLOADER_SKIP_VALIDATE_ALWAYS",
                "name": "BOOTLOADER_SKIP_VALIDATE_ALWAYS",
                "range": null,
                "title": "Skip image validation always (READ HELP FIRST)",
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": "SOC_RTC_FAST_MEM_SUPPORTED",
                "help": "Reserve RTC FAST memory for Skip image validation. This option in bytes.\nThis option reserves an area in the RTC FAST memory (access only PRO_CPU).\nUsed to save the addresses of the selected application.\nWhen a wakeup occurs (from Deep sleep), the bootloader retrieves it and\nloads the application without validation.",
                "id": "BOOTLOADER_RESERVE_RTC_SIZE",
                "name": "BOOTLOADER_RESERVE_RTC_SIZE",
                "range": null,
                "title": null,
                "type": "hex"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "BOOTLOADER_CUSTOM_RESERVE_RTC",
                        "help": "This option allows the customer to use the legacy bootloader behavior when the\nRTC FAST memory CRC calculation takes place. When this option is enabled, the\nallocated user custom data will be taken into account in the CRC calculation.\nThis means that any change to the custom data would need a CRC update to prevent\nthe bootloader from marking this data as corrupted.\nIf this option is disabled, the custom data will not be taken into account when\ncalculating the RTC FAST memory CRC. The user custom data can be changed freely,\nwithout the need to update the CRC.\nTHIS OPTION MUST BE THE SAME FOR BOTH THE BOOTLOADER AND THE APPLICATION BUILDS.",
                        "id": "BOOTLOADER_CUSTOM_RESERVE_RTC_IN_CRC",
                        "name": "BOOTLOADER_CUSTOM_RESERVE_RTC_IN_CRC",
                        "range": null,
                        "title": "Include custom memory in the CRC calculation",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "BOOTLOADER_CUSTOM_RESERVE_RTC",
                        "help": "This option reserves in RTC FAST memory the area for custom purposes.\nIf you want to create your own bootloader and save more information\nin this area of memory, you can increase it. It must be a multiple of 4 bytes.\nThis area (rtc_retain_mem_t) is reserved and has access from the bootloader and an application.",
                        "id": "BOOTLOADER_CUSTOM_RESERVE_RTC_SIZE",
                        "name": "BOOTLOADER_CUSTOM_RESERVE_RTC_SIZE",
                        "range": null,
                        "title": "Size in bytes for custom purposes",
                        "type": "hex"
                    }
                ],
                "depends_on": "SOC_RTC_FAST_MEM_SUPPORTED",
                "help": "This option allows the customer to place data in the RTC FAST memory,\nthis area remains valid when rebooted, except for power loss.\nThis memory is located at a fixed address and is available\nfor both the bootloader and the application.\n(The application and bootloader must be compiled with the same option).\nThe RTC FAST memory has access only through PRO_CPU.",
                "id": "BOOTLOADER_CUSTOM_RESERVE_RTC",
                "name": "BOOTLOADER_CUSTOM_RESERVE_RTC",
                "range": null,
                "title": "Reserve RTC FAST memory for custom purposes",
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": "SOC_RTC_FAST_MEM_SUPPORTED",
                "help": "This option reserves an area in RTC FAST memory for the following features:\n- \"Skip image validation when exiting deep sleep\"\n- \"Reserve RTC FAST memory for custom purposes\"\n- \"GPIO triggers factory reset\"",
                "id": "BOOTLOADER_RESERVE_RTC_MEM",
                "name": "BOOTLOADER_RESERVE_RTC_MEM",
                "range": null,
                "title": null,
                "type": "bool"
            }
        ],
        "depends_on": null,
        "id": "bootloader-config",
        "title": "Bootloader config",
        "type": "menu"
    },
    {
        "children": [
            {
                "children": [],
                "depends_on": "SECURE_BOOT || SECURE_SIGNED_ON_BOOT_NO_SECURE_BOOT",
                "help": null,
                "id": "SECURE_SIGNED_ON_BOOT",
                "name": "SECURE_SIGNED_ON_BOOT",
                "range": null,
                "title": null,
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": "SECURE_BOOT || SECURE_SIGNED_ON_UPDATE_NO_SECURE_BOOT",
                "help": null,
                "id": "SECURE_SIGNED_ON_UPDATE",
                "name": "SECURE_SIGNED_ON_UPDATE",
                "range": null,
                "title": null,
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": "SECURE_SIGNED_ON_BOOT || SECURE_SIGNED_ON_UPDATE",
                "help": null,
                "id": "SECURE_SIGNED_APPS",
                "name": "SECURE_SIGNED_APPS",
                "range": null,
                "title": null,
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": "(IDF_TARGET_ESP32 && ESP32_REV_MIN_FULL >= 300) || SOC_SECURE_BOOT_V2_RSA",
                "help": null,
                "id": "SECURE_BOOT_V2_RSA_SUPPORTED",
                "name": "SECURE_BOOT_V2_RSA_SUPPORTED",
                "range": null,
                "title": null,
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": "SOC_SECURE_BOOT_V2_ECC",
                "help": null,
                "id": "SECURE_BOOT_V2_ECC_SUPPORTED",
                "name": "SECURE_BOOT_V2_ECC_SUPPORTED",
                "range": null,
                "title": null,
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": "SOC_SECURE_BOOT_V1",
                "help": null,
                "id": "SECURE_BOOT_V1_SUPPORTED",
                "name": "SECURE_BOOT_V1_SUPPORTED",
                "range": null,
                "title": null,
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": "ESP32_REV_MIN_FULL >= 300",
                "help": null,
                "id": "SECURE_BOOT_V2_PREFERRED",
                "name": "SECURE_BOOT_V2_PREFERRED",
                "range": null,
                "title": null,
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": null,
                "help": null,
                "id": "SECURE_BOOT_V2_ECDSA_ENABLED",
                "name": "SECURE_BOOT_V2_ECDSA_ENABLED",
                "range": null,
                "title": null,
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": null,
                "help": null,
                "id": "SECURE_BOOT_V2_RSA_ENABLED",
                "name": "SECURE_BOOT_V2_RSA_ENABLED",
                "range": null,
                "title": null,
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": null,
                "help": null,
                "id": "SECURE_BOOT_FLASH_ENC_KEYS_BURN_TOGETHER",
                "name": "SECURE_BOOT_FLASH_ENC_KEYS_BURN_TOGETHER",
                "range": null,
                "title": null,
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": "!SECURE_BOOT",
                "help": "Require apps to be signed to verify their integrity.\n\nThis option uses the same app signature scheme as hardware secure boot, but unlike hardware secure boot it\ndoes not prevent the bootloader from being physically updated. This means that the device can be secured\nagainst remote network access, but not physical access. Compared to using hardware Secure Boot this option\nis much simpler to implement.",
                "id": "SECURE_SIGNED_APPS_NO_SECURE_BOOT",
                "name": "SECURE_SIGNED_APPS_NO_SECURE_BOOT",
                "range": null,
                "title": "Require signed app images",
                "type": "bool"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "SECURE_BOOT_V1_SUPPORTED && (SECURE_SIGNED_APPS_NO_SECURE_BOOT || SECURE_BOOT_V1_ENABLED) && <choice SECURE_SIGNED_APPS_SCHEME>",
                        "help": "Embeds the ECDSA public key in the bootloader and signs the application with an ECDSA key.\nRefer to the documentation before enabling.",
                        "id": "SECURE_SIGNED_APPS_ECDSA_SCHEME",
                        "name": "SECURE_SIGNED_APPS_ECDSA_SCHEME",
                        "range": null,
                        "title": "ECDSA",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "SECURE_BOOT_V2_RSA_SUPPORTED && (SECURE_SIGNED_APPS_NO_SECURE_BOOT || SECURE_BOOT_V2_ENABLED) && !(IDF_TARGET_ESP32C5 && ESP32C5_REV_MIN_FULL < 1) && <choice SECURE_SIGNED_APPS_SCHEME>",
                        "help": "Appends the RSA-3072 based Signature block to the application.\nRefer to <Secure Boot Version 2 documentation link> before enabling.",
                        "id": "SECURE_SIGNED_APPS_RSA_SCHEME",
                        "name": "SECURE_SIGNED_APPS_RSA_SCHEME",
                        "range": null,
                        "title": "RSA",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "SECURE_BOOT_V2_ECC_SUPPORTED && (SECURE_SIGNED_APPS_NO_SECURE_BOOT || SECURE_BOOT_V2_ENABLED) && <choice SECURE_SIGNED_APPS_SCHEME>",
                        "help": "For Secure boot V2 (e.g., ESP32-C2 SoC), appends ECDSA based signature block to the application.\nRefer to documentation before enabling.",
                        "id": "SECURE_SIGNED_APPS_ECDSA_V2_SCHEME",
                        "name": "SECURE_SIGNED_APPS_ECDSA_V2_SCHEME",
                        "range": null,
                        "title": "ECDSA (V2)",
                        "type": "bool"
                    }
                ],
                "depends_on": "SECURE_BOOT || SECURE_SIGNED_APPS_NO_SECURE_BOOT",
                "help": "Select the Secure App signing scheme. Depends on the Chip Revision.\nThere are two secure boot versions:\n\n1. Secure boot V1\n    - Legacy custom secure boot scheme. Supported in ESP32 SoC.\n\n2. Secure boot V2\n    - RSA based secure boot scheme.\n      Supported in ESP32-ECO3 (ESP32 Chip Revision 3 onwards), ESP32-S2, ESP32-C3, ESP32-S3 SoCs.\n\n    - ECDSA based secure boot scheme. Supported in ESP32-C2 SoC.",
                "id": "security-features-app-signing-scheme",
                "name": "SECURE_SIGNED_APPS_SCHEME",
                "title": "App Signing Scheme",
                "type": "choice"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "SECURE_SIGNED_APPS_ECDSA_V2_SCHEME && <choice SECURE_BOOT_ECDSA_KEY_LEN_SIZE>",
                        "help": null,
                        "id": "SECURE_BOOT_ECDSA_KEY_LEN_192_BITS",
                        "name": "SECURE_BOOT_ECDSA_KEY_LEN_192_BITS",
                        "range": null,
                        "title": "Using ECC curve NISTP192",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "SECURE_SIGNED_APPS_ECDSA_V2_SCHEME && <choice SECURE_BOOT_ECDSA_KEY_LEN_SIZE>",
                        "help": null,
                        "id": "SECURE_BOOT_ECDSA_KEY_LEN_256_BITS",
                        "name": "SECURE_BOOT_ECDSA_KEY_LEN_256_BITS",
                        "range": null,
                        "title": "Using ECC curve NISTP256 (Recommended)",
                        "type": "bool"
                    }
                ],
                "depends_on": "SECURE_SIGNED_APPS_ECDSA_V2_SCHEME",
                "help": "Select the ECDSA key size. Two key sizes are supported\n\n- 192 bit key using NISTP192 curve\n- 256 bit key using NISTP256 curve (Recommended)\n\nThe advantage of using 256 bit key is the extra randomness which makes it difficult to be\nbruteforced compared to 192 bit key.\nAt present, both key sizes are practically implausible to bruteforce.",
                "id": "security-features-ecdsa-key-size",
                "name": "SECURE_BOOT_ECDSA_KEY_LEN_SIZE",
                "title": "ECDSA key size",
                "type": "choice"
            },
            {
                "children": [],
                "depends_on": "SECURE_SIGNED_APPS_NO_SECURE_BOOT && SECURE_SIGNED_APPS_ECDSA_SCHEME",
                "help": "If this option is set, the bootloader will be compiled with code to verify that an app is signed before\nbooting it.\n\nIf hardware secure boot is enabled, this option is always enabled and cannot be disabled.\nIf hardware secure boot is not enabled, this option doesn't add significant security by itself so most\nusers will want to leave it disabled.",
                "id": "SECURE_SIGNED_ON_BOOT_NO_SECURE_BOOT",
                "name": "SECURE_SIGNED_ON_BOOT_NO_SECURE_BOOT",
                "range": null,
                "title": "Bootloader verifies app signatures",
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": "SECURE_SIGNED_APPS_NO_SECURE_BOOT",
                "help": "If this option is set, any OTA updated apps will have the signature verified before being considered valid.\n\nWhen enabled, the signature is automatically checked whenever the esp_ota_ops.h APIs are used for OTA\nupdates, or esp_image_format.h APIs are used to verify apps.\n\nIf hardware secure boot is enabled, this option is always enabled and cannot be disabled.\nIf hardware secure boot is not enabled, this option still adds significant security against network-based\nattackers by preventing spoofing of OTA updates.",
                "id": "SECURE_SIGNED_ON_UPDATE_NO_SECURE_BOOT",
                "name": "SECURE_SIGNED_ON_UPDATE_NO_SECURE_BOOT",
                "range": null,
                "title": "Verify app signature on update",
                "type": "bool"
            },
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "SECURE_BOOT_V1_SUPPORTED && <choice SECURE_BOOT_VERSION>",
                                "help": "Build a bootloader which enables secure boot version 1 on first boot.\nRefer to the Secure Boot section of the ESP-IDF Programmer's Guide for this version before enabling.",
                                "id": "SECURE_BOOT_V1_ENABLED",
                                "name": "SECURE_BOOT_V1_ENABLED",
                                "range": null,
                                "title": "Enable Secure Boot version 1",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "(SECURE_BOOT_V2_RSA_SUPPORTED || SECURE_BOOT_V2_ECC_SUPPORTED) && <choice SECURE_BOOT_VERSION>",
                                "help": "Build a bootloader which enables Secure Boot version 2 on first boot.\nRefer to Secure Boot V2 section of the ESP-IDF Programmer's Guide for this version before enabling.",
                                "id": "SECURE_BOOT_V2_ENABLED",
                                "name": "SECURE_BOOT_V2_ENABLED",
                                "range": null,
                                "title": "Enable Secure Boot version 2",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "SECURE_BOOT",
                        "help": "Select the Secure Boot Version. Depends on the Chip Revision.\nSecure Boot V2 is the new RSA / ECDSA based secure boot scheme.\n\n    - RSA based scheme is supported in ESP32 (Revision 3 onwards), ESP32-S2, ESP32-C3 (ECO3), ESP32-S3.\n    - ECDSA based scheme is supported in ESP32-C2 SoC.\n\nPlease note that, RSA or ECDSA secure boot is property of specific SoC based on its HW design, supported\ncrypto accelerators, die-size, cost and similar parameters. Please note that RSA scheme has requirement\nfor bigger key sizes but at the same time it is comparatively faster than ECDSA verification.\n\nSecure Boot V1 is the AES based (custom) secure boot scheme supported in ESP32 SoC.",
                        "id": "security-features-enable-hardware-secure-boot-in-bootloader-read-docs-first--select-secure-boot-version",
                        "name": "SECURE_BOOT_VERSION",
                        "title": "Select secure boot version",
                        "type": "choice"
                    }
                ],
                "depends_on": "SOC_SECURE_BOOT_SUPPORTED && !(IDF_TARGET_ESP32C3 && ESP32C3_REV_MIN_FULL < 3)",
                "help": "Build a bootloader which enables Secure Boot on first boot.\n\nOnce enabled, Secure Boot will not boot a modified bootloader. The bootloader will only load a partition\ntable or boot an app if the data has a verified digital signature. There are implications for reflashing\nupdated apps once secure boot is enabled.\n\nWhen enabling secure boot, JTAG and ROM BASIC Interpreter are permanently disabled by default.",
                "id": "SECURE_BOOT",
                "name": "SECURE_BOOT",
                "range": null,
                "title": "Enable hardware Secure Boot in bootloader (READ DOCS FIRST)",
                "type": "bool"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "<choice SECURE_BOOTLOADER_MODE>",
                        "help": "On first boot, the bootloader will generate a key which is not readable externally or by software. A\ndigest is generated from the bootloader image itself. This digest will be verified on each subsequent\nboot.\n\nEnabling this option means that the bootloader cannot be changed after the first time it is booted.",
                        "id": "SECURE_BOOTLOADER_ONE_TIME_FLASH",
                        "name": "SECURE_BOOTLOADER_ONE_TIME_FLASH",
                        "range": null,
                        "title": "One-time flash",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice SECURE_BOOTLOADER_MODE>",
                        "help": "Generate a reusable secure bootloader key, derived (via SHA-256) from the secure boot signing key.\n\nThis allows the secure bootloader to be re-flashed by anyone with access to the secure boot signing\nkey.\n\nThis option is less secure than one-time flash, because a leak of the digest key from one device\nallows reflashing of any device that uses it.",
                        "id": "SECURE_BOOTLOADER_REFLASHABLE",
                        "name": "SECURE_BOOTLOADER_REFLASHABLE",
                        "range": null,
                        "title": "Reflashable",
                        "type": "bool"
                    }
                ],
                "depends_on": "SECURE_BOOT_V1_ENABLED",
                "help": null,
                "id": "security-features-secure-bootloader-mode",
                "name": "SECURE_BOOTLOADER_MODE",
                "title": "Secure bootloader mode",
                "type": "choice"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "SECURE_BOOT_BUILD_SIGNED_BINARIES",
                        "help": "Path to the key file used to sign app images.\n\nKey file is an ECDSA private key (NIST256p curve) in PEM format for Secure Boot V1.\nKey file is an RSA private key in PEM format for Secure Boot V2.\n\nPath is evaluated relative to the project directory.\n\nYou can generate a new signing key by running the following command:\nespsecure.py generate_signing_key secure_boot_signing_key.pem\n\nSee the Secure Boot section of the ESP-IDF Programmer's Guide for this version for details.",
                        "id": "SECURE_BOOT_SIGNING_KEY",
                        "name": "SECURE_BOOT_SIGNING_KEY",
                        "range": null,
                        "title": "Secure boot private signing key",
                        "type": "string"
                    }
                ],
                "depends_on": "SECURE_SIGNED_APPS",
                "help": "Once secure boot or signed app requirement is enabled, app images are required to be signed.\n\nIf enabled (default), these binary files are signed as part of the build process. The file named in\n\"Secure boot private signing key\" will be used to sign the image.\n\nIf disabled, unsigned app/partition data will be built. They must be signed manually using espsecure.py.\nVersion 1 to enable ECDSA Based Secure Boot and Version 2 to enable RSA based Secure Boot.\n(for example, on a remote signing server.)",
                "id": "SECURE_BOOT_BUILD_SIGNED_BINARIES",
                "name": "SECURE_BOOT_BUILD_SIGNED_BINARIES",
                "range": null,
                "title": "Sign binaries during build",
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": "SECURE_SIGNED_APPS && SECURE_SIGNED_APPS_ECDSA_SCHEME && !SECURE_BOOT_BUILD_SIGNED_BINARIES",
                "help": "Path to a public key file used to verify signed images.\nSecure Boot V1: This ECDSA public key is compiled into the bootloader and/or\napp, to verify app images.\n\nKey file is in raw binary format, and can be extracted from a\nPEM formatted private key using the espsecure.py\nextract_public_key command.\n\nRefer to the Secure Boot section of the ESP-IDF Programmer's Guide for this version before enabling.",
                "id": "SECURE_BOOT_VERIFICATION_KEY",
                "name": "SECURE_BOOT_VERIFICATION_KEY",
                "range": null,
                "title": "Secure boot public signature verification key",
                "type": "string"
            },
            {
                "children": [],
                "depends_on": "SECURE_BOOT && SOC_SUPPORT_SECURE_BOOT_REVOKE_KEY",
                "help": "If this option is set, ROM bootloader will revoke the public key digest burned in efuse block\nif it fails to verify the signature of software bootloader with it.\nRevocation of keys does not happen when enabling secure boot. Once secure boot is enabled,\nkey revocation checks will be done on subsequent boot-up, while verifying the software bootloader\n\nThis feature provides a strong resistance against physical attacks on the device.\n\nNOTE: Once a digest slot is revoked, it can never be used again to verify an image\nThis can lead to permanent bricking of the device, in case all keys are revoked\nbecause of signature verification failure.",
                "id": "SECURE_BOOT_ENABLE_AGGRESSIVE_KEY_REVOKE",
                "name": "SECURE_BOOT_ENABLE_AGGRESSIVE_KEY_REVOKE",
                "range": null,
                "title": "Enable Aggressive key revoke strategy",
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": "SECURE_BOOT_V2_ENABLED",
                "help": "If not set (default, recommended), on first boot the bootloader will burn the WR_DIS_RD_DIS\nefuse when Secure Boot is enabled. This prevents any more efuses from being read protected.\n\nIf this option is set, it will remain possible to write the EFUSE_RD_DIS efuse field after Secure\nBoot is enabled. This may allow an attacker to read-protect the BLK2 efuse (for ESP32) and\nBLOCK4-BLOCK10 (i.e. BLOCK_KEY0-BLOCK_KEY5)(for other chips) holding the secure boot public key digest,\ncausing an immediate denial of service and possibly allowing an additional fault injection attack to\nbypass the signature protection.\n\nThe option must be set when you need to program any read-protected key type into the efuses,\ne.g., HMAC, ECDSA etc. after secure boot has already been enabled on the device.\nPlease refer to secure boot V2 documentation guide for more details.\n\nNOTE: Once a BLOCK is read-protected, the application will read all zeros from that block\n\nNOTE: If \"UART ROM download mode (Permanently disabled (recommended))\" or\n\"UART ROM download mode (Permanently switch to Secure mode (recommended))\" is set,\nthen it is __NOT__ possible to read/write efuses using espefuse.py utility.\nHowever, efuse can be read/written from the application\n\nPlease refer to the Secure Boot V2 documentation guide for more information.",
                "id": "SECURE_BOOT_V2_ALLOW_EFUSE_RD_DIS",
                "name": "SECURE_BOOT_V2_ALLOW_EFUSE_RD_DIS",
                "range": null,
                "title": "Do not disable the ability to further read protect eFuses",
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": "SECURE_BOOT_V2_ENABLED && SECURE_BOOT_BUILD_SIGNED_BINARIES",
                "help": "When Secure Boot V2 is enabled, by default the bootloader is not flashed along with other artifacts\nlike the application and the partition table images, i.e. bootloader has to be separately flashed\nusing the command `idf.py bootloader flash`, whereas, the application and partition table can be flashed\nusing the command `idf.py flash` itself.\nEnabling this option allows flashing the bootloader along with the other artifacts\nby invocation of the command `idf.py flash`.\n\nIf this option is enabled make sure that even the bootloader is signed using the correct secure boot key,\notherwise the bootloader signature verification would fail, as hash of the public key which is present in\nthe bootloader signature would not match with the digest stored into the efuses\nand thus the device will not be able to boot up.",
                "id": "SECURE_BOOT_FLASH_BOOTLOADER_DEFAULT",
                "name": "SECURE_BOOT_FLASH_BOOTLOADER_DEFAULT",
                "range": null,
                "title": "Flash bootloader along with other artifacts when using the default flash command",
                "type": "bool"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "<choice SECURE_BOOTLOADER_KEY_ENCODING>",
                        "help": null,
                        "id": "SECURE_BOOTLOADER_KEY_ENCODING_256BIT",
                        "name": "SECURE_BOOTLOADER_KEY_ENCODING_256BIT",
                        "range": null,
                        "title": "No encoding (256 bit key)",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice SECURE_BOOTLOADER_KEY_ENCODING>",
                        "help": null,
                        "id": "SECURE_BOOTLOADER_KEY_ENCODING_192BIT",
                        "name": "SECURE_BOOTLOADER_KEY_ENCODING_192BIT",
                        "range": null,
                        "title": "3/4 encoding (192 bit key)",
                        "type": "bool"
                    }
                ],
                "depends_on": "SECURE_BOOTLOADER_REFLASHABLE",
                "help": "In reflashable secure bootloader mode, a hardware key is derived from the signing key (with SHA-256) and\ncan be written to eFuse with espefuse.py.\n\nNormally this is a 256-bit key, but if 3/4 Coding Scheme is used on the device then the eFuse key is\ntruncated to 192 bits.\n\nThis configuration item doesn't change any firmware code, it only changes the size of key binary which is\ngenerated at build time.",
                "id": "security-features-hardware-key-encoding",
                "name": "SECURE_BOOTLOADER_KEY_ENCODING",
                "title": "Hardware Key Encoding",
                "type": "choice"
            },
            {
                "children": [],
                "depends_on": "SECURE_BOOT",
                "help": "You can disable some of the default protections offered by secure boot, in order to enable testing or a\ncustom combination of security features.\n\nOnly enable these options if you are very sure.\n\nRefer to the Secure Boot section of the ESP-IDF Programmer's Guide for this version before enabling.",
                "id": "SECURE_BOOT_INSECURE",
                "name": "SECURE_BOOT_INSECURE",
                "range": null,
                "title": "Allow potentially insecure options",
                "type": "bool"
            },
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "SOC_FLASH_ENCRYPTION_XTS_AES_128_DERIVED && <choice SECURE_FLASH_ENCRYPTION_KEYSIZE>",
                                "help": null,
                                "id": "SECURE_FLASH_ENCRYPTION_AES128_DERIVED",
                                "name": "SECURE_FLASH_ENCRYPTION_AES128_DERIVED",
                                "range": null,
                                "title": "AES-128 key derived from 128 bits (SHA256(128 bits))",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "SOC_FLASH_ENCRYPTION_XTS_AES_128 && !(IDF_TARGET_ESP32C2 && SECURE_BOOT) && <choice SECURE_FLASH_ENCRYPTION_KEYSIZE>",
                                "help": null,
                                "id": "SECURE_FLASH_ENCRYPTION_AES128",
                                "name": "SECURE_FLASH_ENCRYPTION_AES128",
                                "range": null,
                                "title": "AES-128 (256-bit key)",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "SOC_FLASH_ENCRYPTION_XTS_AES_256 && <choice SECURE_FLASH_ENCRYPTION_KEYSIZE>",
                                "help": null,
                                "id": "SECURE_FLASH_ENCRYPTION_AES256",
                                "name": "SECURE_FLASH_ENCRYPTION_AES256",
                                "range": null,
                                "title": "AES-256 (512-bit key)",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "SOC_FLASH_ENCRYPTION_XTS_AES_OPTIONS && SECURE_FLASH_ENC_ENABLED",
                        "help": "Size of generated XTS-AES key.\n\n- AES-128 uses a 256-bit key (32 bytes) derived from 128 bits (16 bytes) burned in half Efuse key block.\n  Internally, it calculates SHA256(128 bits)\n- AES-128 uses a 256-bit key (32 bytes) which occupies one Efuse key block.\n- AES-256 uses a 512-bit key (64 bytes) which occupies two Efuse key blocks.\n\nThis setting is ignored if either type of key is already burned to Efuse before the first boot.\nIn this case, the pre-burned key is used and no new key is generated.",
                        "id": "security-features-enable-flash-encryption-on-boot-read-docs-first--size-of-generated-xts-aes-key",
                        "name": "SECURE_FLASH_ENCRYPTION_KEYSIZE",
                        "title": "Size of generated XTS-AES key",
                        "type": "choice"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "<choice SECURE_FLASH_ENCRYPTION_MODE>",
                                "help": null,
                                "id": "SECURE_FLASH_ENCRYPTION_MODE_DEVELOPMENT",
                                "name": "SECURE_FLASH_ENCRYPTION_MODE_DEVELOPMENT",
                                "range": null,
                                "title": "Development (NOT SECURE)",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "(!EFUSE_VIRTUAL || IDF_CI_BUILD) && <choice SECURE_FLASH_ENCRYPTION_MODE>",
                                "help": null,
                                "id": "SECURE_FLASH_ENCRYPTION_MODE_RELEASE",
                                "name": "SECURE_FLASH_ENCRYPTION_MODE_RELEASE",
                                "range": null,
                                "title": "Release",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "SECURE_FLASH_ENC_ENABLED",
                        "help": "By default Development mode is enabled which allows ROM download mode to perform flash encryption\noperations (plaintext is sent to the device, and it encrypts it internally and writes ciphertext\nto flash.) This mode is not secure, it's possible for an attacker to write their own chosen plaintext\nto flash.\n\nRelease mode should always be selected for production or manufacturing. Once enabled it's no longer\npossible for the device in ROM Download Mode to use the flash encryption hardware.\n\nWhen EFUSE_VIRTUAL is enabled, SECURE_FLASH_ENCRYPTION_MODE_RELEASE is not available.\nFor CI tests we use IDF_CI_BUILD to bypass it (\"export IDF_CI_BUILD=1\").\nWe do not recommend bypassing it for other purposes.\n\nRefer to the Flash Encryption section of the ESP-IDF Programmer's Guide for details.",
                        "id": "security-features-enable-flash-encryption-on-boot-read-docs-first--enable-usage-mode",
                        "name": "SECURE_FLASH_ENCRYPTION_MODE",
                        "title": "Enable usage mode",
                        "type": "choice"
                    }
                ],
                "depends_on": null,
                "help": "If this option is set, flash contents will be encrypted by the bootloader on first boot.\n\nNote: After first boot, the system will be permanently encrypted. Re-flashing an encrypted\nsystem is complicated and not always possible.\n\nRead https://docs.espressif.com/projects/esp-idf/en/latest/security/flash-encryption.html\nbefore enabling.",
                "id": "SECURE_FLASH_ENC_ENABLED",
                "name": "SECURE_FLASH_ENC_ENABLED",
                "range": null,
                "title": "Enable flash encryption on boot (READ DOCS FIRST)",
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": null,
                "help": null,
                "id": "SECURE_FLASH_HAS_WRITE_PROTECTION_CACHE",
                "name": "SECURE_FLASH_HAS_WRITE_PROTECTION_CACHE",
                "range": null,
                "title": null,
                "type": "bool"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "(SECURE_BOOT_INSECURE || SECURE_FLASH_ENCRYPTION_MODE_DEVELOPMENT) && IDF_TARGET_ESP32",
                        "help": "By default, the BASIC ROM Console starts on reset if no valid bootloader is\nread from the flash.\n\nWhen either flash encryption or secure boot are enabled, the default is to\ndisable this BASIC fallback mode permanently via eFuse.\n\nIf this option is set, this eFuse is not burned and the BASIC ROM Console may\nremain accessible.  Only set this option in testing environments.",
                        "id": "SECURE_BOOT_ALLOW_ROM_BASIC",
                        "name": "SECURE_BOOT_ALLOW_ROM_BASIC",
                        "range": null,
                        "title": "Leave ROM BASIC Interpreter available on reset",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "SECURE_BOOT_INSECURE || SECURE_FLASH_ENCRYPTION_MODE_DEVELOPMENT",
                        "help": "If not set (default), the bootloader will permanently disable JTAG (across entire chip) on first boot\nwhen either secure boot or flash encryption is enabled.\n\nSetting this option leaves JTAG on for debugging, which negates all protections of flash encryption\nand some of the protections of secure boot.\n\nOnly set this option in testing environments.",
                        "id": "SECURE_BOOT_ALLOW_JTAG",
                        "name": "SECURE_BOOT_ALLOW_JTAG",
                        "range": null,
                        "title": "Allow JTAG Debugging",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "SECURE_BOOT_INSECURE || SECURE_SIGNED_ON_UPDATE_NO_SECURE_BOOT",
                        "help": "If not set (default), app partition size must be a multiple of 64KB. App images are padded to 64KB\nlength, and the bootloader checks any trailing bytes after the signature (before the next 64KB\nboundary) have not been written. This is because flash cache maps entire 64KB pages into the address\nspace. This prevents an attacker from appending unverified data after the app image in the flash,\ncausing it to be mapped into the address space.\n\nSetting this option allows the app partition length to be unaligned, and disables padding of the app\nimage to this length. It is generally not recommended to set this option, unless you have a legacy\npartitioning scheme which doesn't support 64KB aligned partition lengths.",
                        "id": "SECURE_BOOT_ALLOW_SHORT_APP_PARTITION",
                        "name": "SECURE_BOOT_ALLOW_SHORT_APP_PARTITION",
                        "range": null,
                        "title": "Allow app partition length not 64KB aligned",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "SECURE_BOOT_INSECURE && SOC_EFUSE_REVOKE_BOOT_KEY_DIGESTS",
                        "help": "If not set (default), during startup in the app all unused digest slots will be revoked.\nTo revoke unused slot will be called esp_efuse_set_digest_revoke(num_digest) for each digest.\nRevoking unused digest slots makes ensures that no trusted keys can be added later by an attacker.\nIf set, it means that you have a plan to use unused digests slots later.\n\nNote that if you plan to enable secure boot during the first boot up, the bootloader will intentionally\nrevoke the unused digest slots while enabling secure boot, even if the above config is enabled because\nkeeping the unused key slots un-revoked would a security hazard.\nIn case for any development workflow if you need to avoid this revocation, you should enable\nsecure boot externally (host based mechanism) rather than enabling it during the boot up,\nso that the bootloader would not need to enable secure boot and thus you could avoid its revocation\nstrategy.",
                        "id": "SECURE_BOOT_ALLOW_UNUSED_DIGEST_SLOTS",
                        "name": "SECURE_BOOT_ALLOW_UNUSED_DIGEST_SLOTS",
                        "range": null,
                        "title": "Leave unused digest slots available (not revoke)",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "SECURE_FLASH_ENCRYPTION_MODE_DEVELOPMENT",
                        "help": "If not set (default), the bootloader will permanently disable UART bootloader encryption access on\nfirst boot. If set, the UART bootloader will still be able to access hardware encryption.\n\nIt is recommended to only set this option in testing environments.",
                        "id": "SECURE_FLASH_UART_BOOTLOADER_ALLOW_ENC",
                        "name": "SECURE_FLASH_UART_BOOTLOADER_ALLOW_ENC",
                        "range": null,
                        "title": "Leave UART bootloader encryption enabled",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "SECURE_FLASH_ENCRYPTION_MODE_DEVELOPMENT && IDF_TARGET_ESP32",
                        "help": "If not set (default), the bootloader will permanently disable UART bootloader decryption access on\nfirst boot. If set, the UART bootloader will still be able to access hardware decryption.\n\nOnly set this option in testing environments. Setting this option allows complete bypass of flash\nencryption.",
                        "id": "SECURE_FLASH_UART_BOOTLOADER_ALLOW_DEC",
                        "name": "SECURE_FLASH_UART_BOOTLOADER_ALLOW_DEC",
                        "range": null,
                        "title": "Leave UART bootloader decryption enabled",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "SECURE_FLASH_ENCRYPTION_MODE_DEVELOPMENT && (IDF_TARGET_ESP32 || SOC_EFUSE_DIS_DOWNLOAD_ICACHE || SOC_EFUSE_DIS_DOWNLOAD_DCACHE)",
                        "help": "If not set (default), the bootloader will permanently disable UART bootloader flash cache access on\nfirst boot. If set, the UART bootloader will still be able to access the flash cache.\n\nOnly set this option in testing environments.",
                        "id": "SECURE_FLASH_UART_BOOTLOADER_ALLOW_CACHE",
                        "name": "SECURE_FLASH_UART_BOOTLOADER_ALLOW_CACHE",
                        "range": null,
                        "title": "Leave UART bootloader flash cache enabled",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "SECURE_FLASH_ENCRYPTION_MODE_DEVELOPMENT",
                        "help": "If not set (default), and flash encryption is not yet enabled in eFuses, the 2nd stage bootloader\nwill enable flash encryption: generate the flash encryption key and program eFuses.\nIf this option is set, and flash encryption is not yet enabled, the bootloader will error out and\nreboot.\nIf flash encryption is enabled in eFuses, this option does not change the bootloader behavior.\n\nOnly use this option in testing environments, to avoid accidentally enabling flash encryption on\nthe wrong device. The device needs to have flash encryption already enabled using espefuse.py.",
                        "id": "SECURE_FLASH_REQUIRE_ALREADY_ENABLED",
                        "name": "SECURE_FLASH_REQUIRE_ALREADY_ENABLED",
                        "range": null,
                        "title": "Require flash encryption to be already enabled",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "SECURE_FLASH_HAS_WRITE_PROTECTION_CACHE",
                        "help": "If not set (default, recommended), on the first boot the bootloader will burn the write-protection of\nDIS_CACHE(for ESP32) or DIS_ICACHE/DIS_DCACHE(for other chips) eFuse when Flash Encryption is enabled.\nWrite protection for cache disable efuse prevents the chip from being blocked if it is set by accident.\nApp and bootloader use cache so disabling it makes the chip useless for IDF.\nDue to other eFuses are linked with the same write protection bit (see the list below) then\nwrite-protection will not be done if these SECURE_FLASH_UART_BOOTLOADER_ALLOW_ENC,\nSECURE_BOOT_ALLOW_JTAG or SECURE_FLASH_UART_BOOTLOADER_ALLOW_CACHE options are selected\nto give a chance to turn on the chip into the release mode later.\n\nList of eFuses with the same write protection bit:\nESP32: MAC, MAC_CRC, DISABLE_APP_CPU, DISABLE_BT, DIS_CACHE, VOL_LEVEL_HP_INV.\n\nESP32-C3: DIS_ICACHE, DIS_USB_JTAG, DIS_DOWNLOAD_ICACHE, DIS_USB_SERIAL_JTAG,\nDIS_FORCE_DOWNLOAD, DIS_TWAI, JTAG_SEL_ENABLE, DIS_PAD_JTAG, DIS_DOWNLOAD_MANUAL_ENCRYPT.\n\nESP32-C6: SWAP_UART_SDIO_EN, DIS_ICACHE, DIS_USB_JTAG, DIS_DOWNLOAD_ICACHE,\nDIS_USB_SERIAL_JTAG, DIS_FORCE_DOWNLOAD, DIS_TWAI, JTAG_SEL_ENABLE,\nDIS_PAD_JTAG, DIS_DOWNLOAD_MANUAL_ENCRYPT.\n\nESP32-H2: DIS_ICACHE, DIS_USB_JTAG, POWERGLITCH_EN, DIS_FORCE_DOWNLOAD, SPI_DOWNLOAD_MSPI_DIS,\nDIS_TWAI, JTAG_SEL_ENABLE, DIS_PAD_JTAG, DIS_DOWNLOAD_MANUAL_ENCRYPT.\n\nESP32-S2: DIS_ICACHE, DIS_DCACHE, DIS_DOWNLOAD_ICACHE, DIS_DOWNLOAD_DCACHE,\nDIS_FORCE_DOWNLOAD, DIS_USB, DIS_TWAI, DIS_BOOT_REMAP, SOFT_DIS_JTAG,\nHARD_DIS_JTAG, DIS_DOWNLOAD_MANUAL_ENCRYPT.\n\nESP32-S3: DIS_ICACHE, DIS_DCACHE, DIS_DOWNLOAD_ICACHE, DIS_DOWNLOAD_DCACHE,\nDIS_FORCE_DOWNLOAD, DIS_USB_OTG, DIS_TWAI, DIS_APP_CPU, DIS_PAD_JTAG,\nDIS_DOWNLOAD_MANUAL_ENCRYPT, DIS_USB_JTAG, DIS_USB_SERIAL_JTAG, STRAP_JTAG_SEL, USB_PHY_SEL.",
                        "id": "SECURE_FLASH_SKIP_WRITE_PROTECTION_CACHE",
                        "name": "SECURE_FLASH_SKIP_WRITE_PROTECTION_CACHE",
                        "range": null,
                        "title": "Skip write-protection of DIS_CACHE (DIS_ICACHE, DIS_DCACHE)",
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "id": "security-features-potentially-insecure-options",
                "title": "Potentially insecure options",
                "type": "menu"
            },
            {
                "children": [],
                "depends_on": "SECURE_FLASH_ENC_ENABLED && !SECURE_FLASH_REQUIRE_ALREADY_ENABLED",
                "help": "If set (default), optimise encryption time for the partition of type APP,\nby only encrypting the app image that is present in the partition,\ninstead of the whole partition.\nThe image length used for encryption is derived from the image metadata, which\nincludes the size of the app image, checksum, hash and also the signature sector\nwhen secure boot is enabled.\n\nIf not set, the whole partition of type APP would be encrypted,\nwhich increases the encryption time but might be useful if there\nis any custom data appended to the firmware image.",
                "id": "SECURE_FLASH_ENCRYPT_ONLY_IMAGE_LEN_IN_APP_PART",
                "name": "SECURE_FLASH_ENCRYPT_ONLY_IMAGE_LEN_IN_APP_PART",
                "range": null,
                "title": "Encrypt only the app image that is present in the partition of type app",
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": "SECURE_FLASH_ENC_ENABLED",
                "help": "If set (default), in an app during startup code,\nthere is a check of the flash encryption eFuse bit is on\n(as the bootloader should already have set it).\nThe app requires this bit is on to continue work otherwise abort.\n\nIf not set, the app does not care if the flash encryption eFuse bit is set or not.",
                "id": "SECURE_FLASH_CHECK_ENC_EN_IN_APP",
                "name": "SECURE_FLASH_CHECK_ENC_EN_IN_APP",
                "range": null,
                "title": "Check Flash Encryption enabled on app startup",
                "type": "bool"
            },
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "<choice SECURE_FLASH_PSEUDO_ROUND_FUNC_STRENGTH>",
                                "help": null,
                                "id": "SECURE_FLASH_PSEUDO_ROUND_FUNC_STRENGTH_LOW",
                                "name": "SECURE_FLASH_PSEUDO_ROUND_FUNC_STRENGTH_LOW",
                                "range": null,
                                "title": "Low",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice SECURE_FLASH_PSEUDO_ROUND_FUNC_STRENGTH>",
                                "help": null,
                                "id": "SECURE_FLASH_PSEUDO_ROUND_FUNC_STRENGTH_MEDIUM",
                                "name": "SECURE_FLASH_PSEUDO_ROUND_FUNC_STRENGTH_MEDIUM",
                                "range": null,
                                "title": "Medium",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice SECURE_FLASH_PSEUDO_ROUND_FUNC_STRENGTH>",
                                "help": null,
                                "id": "SECURE_FLASH_PSEUDO_ROUND_FUNC_STRENGTH_HIGH",
                                "name": "SECURE_FLASH_PSEUDO_ROUND_FUNC_STRENGTH_HIGH",
                                "range": null,
                                "title": "High",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "SECURE_FLASH_PSEUDO_ROUND_FUNC",
                        "help": "The strength of the pseudo rounds functions can be configured to low, medium and high,\neach denoting the values that would be stored in the efuses field.\nBy default the value to set to low.\nYou can configure the strength of the pseudo rounds functions according to your use cases,\nfor example, increasing the strength would provide higher security but would slow down the\nflash encryption/decryption operations.\nFor more info regarding the performance impact, please checkout the pseudo round function section of the\nsecurity guide documentation.",
                        "id": "security-features-permanently-enable-xts-aes-s-pseudo-rounds-function-strength-of-the-pseudo-rounds-function",
                        "name": "SECURE_FLASH_PSEUDO_ROUND_FUNC_STRENGTH",
                        "title": "Strength of the pseudo rounds function",
                        "type": "choice"
                    }
                ],
                "depends_on": "SECURE_FLASH_ENCRYPTION_MODE_RELEASE && SOC_FLASH_ENCRYPTION_XTS_AES_SUPPORT_PSEUDO_ROUND",
                "help": "If set (default), the bootloader will permanently enable the XTS-AES peripheral's pseudo rounds function.\nNote: Enabling this config would burn an efuse.",
                "id": "SECURE_FLASH_PSEUDO_ROUND_FUNC",
                "name": "SECURE_FLASH_PSEUDO_ROUND_FUNC",
                "range": null,
                "title": "Permanently enable XTS-AES's pseudo rounds function",
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": null,
                "help": null,
                "id": "SECURE_FLASH_PSEUDO_ROUND_FUNC_STRENGTH",
                "name": "SECURE_FLASH_PSEUDO_ROUND_FUNC_STRENGTH",
                "range": null,
                "title": null,
                "type": "int"
            },
            {
                "children": [],
                "depends_on": null,
                "help": null,
                "id": "SECURE_ROM_DL_MODE_ENABLED",
                "name": "SECURE_ROM_DL_MODE_ENABLED",
                "range": null,
                "title": null,
                "type": "bool"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "<choice SECURE_UART_ROM_DL_MODE>",
                        "help": "If set, during startup the app will burn an eFuse bit to permanently disable the UART ROM\nDownload Mode. This prevents any future use of esptool.py, espefuse.py and similar tools.\n\nOnce disabled, if the SoC is booted with strapping pins set for ROM Download Mode\nthen an error is printed instead.\n\nIt is recommended to enable this option in any production application where Flash\nEncryption and/or Secure Boot is enabled and access to Download Mode is not required.\n\nIt is also possible to permanently disable Download Mode by calling\nesp_efuse_disable_rom_download_mode() at runtime.",
                        "id": "SECURE_DISABLE_ROM_DL_MODE",
                        "name": "SECURE_DISABLE_ROM_DL_MODE",
                        "range": null,
                        "title": "UART ROM download mode (Permanently disabled (recommended))",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "SOC_SUPPORTS_SECURE_DL_MODE && <choice SECURE_UART_ROM_DL_MODE>",
                        "help": "If set, during startup the app will burn an eFuse bit to permanently switch the UART ROM\nDownload Mode into a separate Secure Download mode. This option can only work if\nDownload Mode is not already disabled by eFuse.\n\nSecure Download mode limits the use of Download Mode functions to update SPI config,\nchanging baud rate, basic flash write and a command to return a summary of currently\nenabled security features (`get_security_info`).\n\nSecure Download mode is not compatible with the esptool.py flasher stub feature,\nespefuse.py, read/writing memory or registers, encrypted download, or any other\nfeatures that interact with unsupported Download Mode commands.\n\nSecure Download mode should be enabled in any application where Flash Encryption\nand/or Secure Boot is enabled. Disabling this option does not immediately cancel\nthe benefits of the security features, but it increases the potential \"attack\nsurface\" for an attacker to try and bypass them with a successful physical attack.\n\nIt is also possible to enable secure download mode at runtime by calling\nesp_efuse_enable_rom_secure_download_mode()\n\nNote: Secure Download mode is not available for ESP32 (includes revisions till ECO3).",
                        "id": "SECURE_ENABLE_SECURE_ROM_DL_MODE",
                        "name": "SECURE_ENABLE_SECURE_ROM_DL_MODE",
                        "range": null,
                        "title": "UART ROM download mode (Permanently switch to Secure mode (recommended))",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice SECURE_UART_ROM_DL_MODE>",
                        "help": "This is a potentially insecure option.\nEnabling this option will allow the full UART download mode to stay enabled.\nThis option SHOULD NOT BE ENABLED for production use cases.",
                        "id": "SECURE_INSECURE_ALLOW_DL_MODE",
                        "name": "SECURE_INSECURE_ALLOW_DL_MODE",
                        "range": null,
                        "title": "UART ROM download mode (Enabled (not recommended))",
                        "type": "bool"
                    }
                ],
                "depends_on": "(SECURE_BOOT_V2_ENABLED || SECURE_FLASH_ENC_ENABLED) && !(IDF_TARGET_ESP32 && ESP32_REV_MIN_FULL < 300)",
                "help": null,
                "id": "security-features-uart-rom-download-mode",
                "name": "SECURE_UART_ROM_DL_MODE",
                "title": "UART ROM download mode",
                "type": "choice"
            }
        ],
        "depends_on": null,
        "id": "security-features",
        "title": "Security features",
        "type": "menu"
    },
    {
        "children": [
            {
                "children": [],
                "depends_on": "!APP_REPRODUCIBLE_BUILD",
                "help": "If set, then the app will be built with the current time/date stamp. It is stored in the app description\nstructure. If not set, time/date stamp will be excluded from app image. This can be useful for getting the\nsame binary image files made from the same source, but at different times.",
                "id": "APP_COMPILE_TIME_DATE",
                "name": "APP_COMPILE_TIME_DATE",
                "range": null,
                "title": "Use time/date stamp for app",
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": null,
                "help": "The PROJECT_VER variable from the build system will not affect the firmware image.\nThis value will not be contained in the esp_app_desc structure.",
                "id": "APP_EXCLUDE_PROJECT_VER_VAR",
                "name": "APP_EXCLUDE_PROJECT_VER_VAR",
                "range": null,
                "title": "Exclude PROJECT_VER from firmware image",
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": null,
                "help": "The PROJECT_NAME variable from the build system will not affect the firmware image.\nThis value will not be contained in the esp_app_desc structure.",
                "id": "APP_EXCLUDE_PROJECT_NAME_VAR",
                "name": "APP_EXCLUDE_PROJECT_NAME_VAR",
                "range": null,
                "title": "Exclude PROJECT_NAME from firmware image",
                "type": "bool"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "APP_PROJECT_VER_FROM_CONFIG",
                        "help": "Project version",
                        "id": "APP_PROJECT_VER",
                        "name": "APP_PROJECT_VER",
                        "range": null,
                        "title": "Project version",
                        "type": "string"
                    }
                ],
                "depends_on": null,
                "help": "If this is enabled, then config item APP_PROJECT_VER will be used for the variable PROJECT_VER.\nOther ways to set PROJECT_VER will be ignored.",
                "id": "APP_PROJECT_VER_FROM_CONFIG",
                "name": "APP_PROJECT_VER_FROM_CONFIG",
                "range": null,
                "title": "Get the project version from Kconfig",
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": null,
                "help": "At startup, the app will read the embedded APP ELF SHA-256 hash value from flash\nand convert it into a string and store it in a RAM buffer.\nThis ensures the panic handler and core dump will be able to print this string\neven when cache is disabled.\nThe size of the buffer is APP_RETRIEVE_LEN_ELF_SHA plus the null terminator.\nChanging this value will change the size of this buffer, in bytes.",
                "id": "APP_RETRIEVE_LEN_ELF_SHA",
                "name": "APP_RETRIEVE_LEN_ELF_SHA",
                "range": [
                    8,
                    64
                ],
                "title": "The length of APP ELF SHA is stored in RAM(chars)",
                "type": "int"
            }
        ],
        "depends_on": null,
        "id": "application-manager",
        "title": "Application manager",
        "type": "menu"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "ESP_ROM_HAS_CRC_LE",
        "name": "ESP_ROM_HAS_CRC_LE",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "ESP_ROM_HAS_CRC_BE",
        "name": "ESP_ROM_HAS_CRC_BE",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "ESP_ROM_HAS_MZ_CRC32",
        "name": "ESP_ROM_HAS_MZ_CRC32",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "ESP_ROM_HAS_JPEG_DECODE",
        "name": "ESP_ROM_HAS_JPEG_DECODE",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "ESP_ROM_HAS_UART_BUF_SWITCH",
        "name": "ESP_ROM_HAS_UART_BUF_SWITCH",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "ESP_ROM_NEEDS_SWSETUP_WORKAROUND",
        "name": "ESP_ROM_NEEDS_SWSETUP_WORKAROUND",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "ESP_ROM_HAS_NEWLIB",
        "name": "ESP_ROM_HAS_NEWLIB",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "ESP_ROM_HAS_NEWLIB_NANO_FORMAT",
        "name": "ESP_ROM_HAS_NEWLIB_NANO_FORMAT",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "ESP_ROM_HAS_NEWLIB_32BIT_TIME",
        "name": "ESP_ROM_HAS_NEWLIB_32BIT_TIME",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "ESP_ROM_HAS_SW_FLOAT",
        "name": "ESP_ROM_HAS_SW_FLOAT",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "ESP_ROM_USB_OTG_NUM",
        "name": "ESP_ROM_USB_OTG_NUM",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "ESP_ROM_USB_SERIAL_DEVICE_NUM",
        "name": "ESP_ROM_USB_SERIAL_DEVICE_NUM",
        "range": null,
        "title": null,
        "type": "int"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "ESP_ROM_SUPPORT_DEEP_SLEEP_WAKEUP_STUB",
        "name": "ESP_ROM_SUPPORT_DEEP_SLEEP_WAKEUP_STUB",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "ESP_ROM_HAS_OUTPUT_PUTC_FUNC",
        "name": "ESP_ROM_HAS_OUTPUT_PUTC_FUNC",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "<choice BOOT_ROM_LOG_SCHEME>",
                        "help": "Always print ROM logs, this is the default behavior.",
                        "id": "BOOT_ROM_LOG_ALWAYS_ON",
                        "name": "BOOT_ROM_LOG_ALWAYS_ON",
                        "range": null,
                        "title": "Always Log",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice BOOT_ROM_LOG_SCHEME>",
                        "help": "Don't print ROM logs.",
                        "id": "BOOT_ROM_LOG_ALWAYS_OFF",
                        "name": "BOOT_ROM_LOG_ALWAYS_OFF",
                        "range": null,
                        "title": "Permanently disable logging",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice BOOT_ROM_LOG_SCHEME>",
                        "help": "Print ROM logs when GPIO level is high during start up.\nThe GPIO number is chip dependent,\ne.g. on ESP32-S2, the control GPIO is GPIO46.",
                        "id": "BOOT_ROM_LOG_ON_GPIO_HIGH",
                        "name": "BOOT_ROM_LOG_ON_GPIO_HIGH",
                        "range": null,
                        "title": "Log on GPIO High",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice BOOT_ROM_LOG_SCHEME>",
                        "help": "Print ROM logs when GPIO level is low during start up.\nThe GPIO number is chip dependent,\ne.g. on ESP32-S2, the control GPIO is GPIO46.",
                        "id": "BOOT_ROM_LOG_ON_GPIO_LOW",
                        "name": "BOOT_ROM_LOG_ON_GPIO_LOW",
                        "range": null,
                        "title": "Log on GPIO Low",
                        "type": "bool"
                    }
                ],
                "depends_on": "!IDF_TARGET_ESP32",
                "help": "Controls the Boot ROM log behavior.\nThe rom log behavior can only be changed for once,\nspecific eFuse bit(s) will be burned at app boot stage.",
                "id": "boot-rom-behavior-permanently-change-boot-rom-output",
                "name": "BOOT_ROM_LOG_SCHEME",
                "title": "Permanently change Boot ROM output",
                "type": "choice"
            }
        ],
        "depends_on": null,
        "id": "boot-rom-behavior",
        "title": "Boot ROM Behavior",
        "type": "menu"
    },
    {
        "children": [
            {
                "children": [],
                "depends_on": "!APP_BUILD_TYPE_PURE_RAM_APP",
                "help": "The flasher tool sends a precompiled download stub first by default. That stub allows things\nlike compressed downloads and more. Usually you should not need to disable that feature",
                "id": "ESPTOOLPY_NO_STUB",
                "name": "ESPTOOLPY_NO_STUB",
                "range": null,
                "title": "Disable download stub",
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": "IDF_TARGET_ESP32S3 && !APP_BUILD_TYPE_PURE_RAM_APP",
                "help": null,
                "id": "ESPTOOLPY_OCT_FLASH",
                "name": "ESPTOOLPY_OCT_FLASH",
                "range": null,
                "title": "Enable Octal Flash",
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": "IDF_TARGET_ESP32S3 && !APP_BUILD_TYPE_PURE_RAM_APP",
                "help": "This config option helps decide whether flash is Quad or Octal, but please note some limitations:\n\n1. If the flash chip is an Octal one, even if one of \"QIO\", \"QOUT\", \"DIO\", \"DOUT\" options is\n   selected in `ESPTOOLPY_FLASHMODE`, our code will automatically change the\n   mode to \"OPI\" and the sample mode will be STR.\n2. If the flash chip is a Quad one, even if \"OPI\" is selected in `ESPTOOLPY_FLASHMODE`, our code will\n   automatically change the mode to \"DIO\".\n3. This option is mainly to improve the out-of-box experience of developers. It doesn't guarantee\n   the feature-complete. Some code still rely on `ESPTOOLPY_OCT_FLASH`. Please do not rely on this option\n   when you are pretty sure that you are using Octal flash.\n   In this case, please enable `ESPTOOLPY_OCT_FLASH` option, then you can choose `DTR` sample mode\n   in `ESPTOOLPY_FLASH_SAMPLE_MODE`. Otherwise, only `STR` mode is available.\n4. Enabling this feature reduces available internal RAM size (around 900 bytes).\n   If your IRAM space is insufficient and you're aware of your flash type,\n   disable this option and select corresponding flash type options.",
                "id": "ESPTOOLPY_FLASH_MODE_AUTO_DETECT",
                "name": "ESPTOOLPY_FLASH_MODE_AUTO_DETECT",
                "range": null,
                "title": "Choose flash mode automatically (please read help)",
                "type": "bool"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "!ESPTOOLPY_OCT_FLASH && <choice ESPTOOLPY_FLASHMODE>",
                        "help": null,
                        "id": "ESPTOOLPY_FLASHMODE_QIO",
                        "name": "ESPTOOLPY_FLASHMODE_QIO",
                        "range": null,
                        "title": "QIO",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "!ESPTOOLPY_OCT_FLASH && <choice ESPTOOLPY_FLASHMODE>",
                        "help": null,
                        "id": "ESPTOOLPY_FLASHMODE_QOUT",
                        "name": "ESPTOOLPY_FLASHMODE_QOUT",
                        "range": null,
                        "title": "QOUT",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "!ESPTOOLPY_OCT_FLASH && <choice ESPTOOLPY_FLASHMODE>",
                        "help": null,
                        "id": "ESPTOOLPY_FLASHMODE_DIO",
                        "name": "ESPTOOLPY_FLASHMODE_DIO",
                        "range": null,
                        "title": "DIO",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "!ESPTOOLPY_OCT_FLASH && <choice ESPTOOLPY_FLASHMODE>",
                        "help": null,
                        "id": "ESPTOOLPY_FLASHMODE_DOUT",
                        "name": "ESPTOOLPY_FLASHMODE_DOUT",
                        "range": null,
                        "title": "DOUT",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "ESPTOOLPY_OCT_FLASH && <choice ESPTOOLPY_FLASHMODE>",
                        "help": null,
                        "id": "ESPTOOLPY_FLASHMODE_OPI",
                        "name": "ESPTOOLPY_FLASHMODE_OPI",
                        "range": null,
                        "title": "OPI",
                        "type": "bool"
                    }
                ],
                "depends_on": "!APP_BUILD_TYPE_PURE_RAM_APP",
                "help": "Mode the flash chip is flashed in, as well as the default mode for the\nbinary to run in.",
                "id": "serial-flasher-config-flash-spi-mode",
                "name": "ESPTOOLPY_FLASHMODE",
                "title": "Flash SPI mode",
                "type": "choice"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "<choice ESPTOOLPY_FLASH_SAMPLE_MODE>",
                        "help": null,
                        "id": "ESPTOOLPY_FLASH_SAMPLE_MODE_STR",
                        "name": "ESPTOOLPY_FLASH_SAMPLE_MODE_STR",
                        "range": null,
                        "title": "STR Mode",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "ESPTOOLPY_OCT_FLASH && <choice ESPTOOLPY_FLASH_SAMPLE_MODE>",
                        "help": null,
                        "id": "ESPTOOLPY_FLASH_SAMPLE_MODE_DTR",
                        "name": "ESPTOOLPY_FLASH_SAMPLE_MODE_DTR",
                        "range": null,
                        "title": "DTR Mode",
                        "type": "bool"
                    }
                ],
                "depends_on": "!APP_BUILD_TYPE_PURE_RAM_APP",
                "help": null,
                "id": "serial-flasher-config-flash-sampling-mode",
                "name": "ESPTOOLPY_FLASH_SAMPLE_MODE",
                "title": "Flash Sampling Mode",
                "type": "choice"
            },
            {
                "children": [],
                "depends_on": "!APP_BUILD_TYPE_PURE_RAM_APP",
                "help": null,
                "id": "ESPTOOLPY_FLASHMODE",
                "name": "ESPTOOLPY_FLASHMODE",
                "range": null,
                "title": null,
                "type": "string"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "<choice ESPTOOLPY_FLASHFREQ>",
                        "help": null,
                        "id": "ESPTOOLPY_FLASHFREQ_80M",
                        "name": "ESPTOOLPY_FLASHFREQ_80M",
                        "range": null,
                        "title": "80 MHz",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice ESPTOOLPY_FLASHFREQ>",
                        "help": null,
                        "id": "ESPTOOLPY_FLASHFREQ_40M",
                        "name": "ESPTOOLPY_FLASHFREQ_40M",
                        "range": null,
                        "title": "40 MHz",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice ESPTOOLPY_FLASHFREQ>",
                        "help": null,
                        "id": "ESPTOOLPY_FLASHFREQ_26M",
                        "name": "ESPTOOLPY_FLASHFREQ_26M",
                        "range": null,
                        "title": "26 MHz",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice ESPTOOLPY_FLASHFREQ>",
                        "help": null,
                        "id": "ESPTOOLPY_FLASHFREQ_20M",
                        "name": "ESPTOOLPY_FLASHFREQ_20M",
                        "range": null,
                        "title": "20 MHz",
                        "type": "bool"
                    }
                ],
                "depends_on": "!APP_BUILD_TYPE_PURE_RAM_APP",
                "help": null,
                "id": "serial-flasher-config-flash-spi-speed",
                "name": "ESPTOOLPY_FLASHFREQ",
                "title": "Flash SPI speed",
                "type": "choice"
            },
            {
                "children": [],
                "depends_on": "!APP_BUILD_TYPE_PURE_RAM_APP",
                "help": null,
                "id": "ESPTOOLPY_FLASHFREQ",
                "name": "ESPTOOLPY_FLASHFREQ",
                "range": null,
                "title": null,
                "type": "string"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "<choice ESPTOOLPY_FLASHSIZE>",
                        "help": null,
                        "id": "ESPTOOLPY_FLASHSIZE_1MB",
                        "name": "ESPTOOLPY_FLASHSIZE_1MB",
                        "range": null,
                        "title": "1 MB",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice ESPTOOLPY_FLASHSIZE>",
                        "help": null,
                        "id": "ESPTOOLPY_FLASHSIZE_2MB",
                        "name": "ESPTOOLPY_FLASHSIZE_2MB",
                        "range": null,
                        "title": "2 MB",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice ESPTOOLPY_FLASHSIZE>",
                        "help": null,
                        "id": "ESPTOOLPY_FLASHSIZE_4MB",
                        "name": "ESPTOOLPY_FLASHSIZE_4MB",
                        "range": null,
                        "title": "4 MB",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice ESPTOOLPY_FLASHSIZE>",
                        "help": null,
                        "id": "ESPTOOLPY_FLASHSIZE_8MB",
                        "name": "ESPTOOLPY_FLASHSIZE_8MB",
                        "range": null,
                        "title": "8 MB",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice ESPTOOLPY_FLASHSIZE>",
                        "help": null,
                        "id": "ESPTOOLPY_FLASHSIZE_16MB",
                        "name": "ESPTOOLPY_FLASHSIZE_16MB",
                        "range": null,
                        "title": "16 MB",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice ESPTOOLPY_FLASHSIZE>",
                        "help": null,
                        "id": "ESPTOOLPY_FLASHSIZE_32MB",
                        "name": "ESPTOOLPY_FLASHSIZE_32MB",
                        "range": null,
                        "title": "32 MB",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice ESPTOOLPY_FLASHSIZE>",
                        "help": null,
                        "id": "ESPTOOLPY_FLASHSIZE_64MB",
                        "name": "ESPTOOLPY_FLASHSIZE_64MB",
                        "range": null,
                        "title": "64 MB",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice ESPTOOLPY_FLASHSIZE>",
                        "help": null,
                        "id": "ESPTOOLPY_FLASHSIZE_128MB",
                        "name": "ESPTOOLPY_FLASHSIZE_128MB",
                        "range": null,
                        "title": "128 MB",
                        "type": "bool"
                    }
                ],
                "depends_on": "!APP_BUILD_TYPE_PURE_RAM_APP",
                "help": "SPI flash size, in megabytes",
                "id": "serial-flasher-config-flash-size",
                "name": "ESPTOOLPY_FLASHSIZE",
                "title": "Flash size",
                "type": "choice"
            },
            {
                "children": [],
                "depends_on": "!APP_BUILD_TYPE_PURE_RAM_APP",
                "help": null,
                "id": "ESPTOOLPY_FLASHSIZE",
                "name": "ESPTOOLPY_FLASHSIZE",
                "range": null,
                "title": null,
                "type": "string"
            },
            {
                "children": [],
                "depends_on": "!APP_BUILD_TYPE_PURE_RAM_APP",
                "help": "If this option is set, flashing the project will automatically detect\nthe flash size of the target chip and update the bootloader image\nbefore it is flashed.\n\nEnabling this option turns off the image protection against corruption\nby a SHA256 digest. Updating the bootloader image before flashing would\ninvalidate the digest.",
                "id": "ESPTOOLPY_HEADER_FLASHSIZE_UPDATE",
                "name": "ESPTOOLPY_HEADER_FLASHSIZE_UPDATE",
                "range": null,
                "title": "Detect flash size when flashing bootloader",
                "type": "bool"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "<choice ESPTOOLPY_BEFORE>",
                        "help": null,
                        "id": "ESPTOOLPY_BEFORE_RESET",
                        "name": "ESPTOOLPY_BEFORE_RESET",
                        "range": null,
                        "title": "Reset to bootloader",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice ESPTOOLPY_BEFORE>",
                        "help": null,
                        "id": "ESPTOOLPY_BEFORE_NORESET",
                        "name": "ESPTOOLPY_BEFORE_NORESET",
                        "range": null,
                        "title": "No reset",
                        "type": "bool"
                    }
                ],
                "depends_on": "!APP_BUILD_TYPE_PURE_RAM_APP",
                "help": "Configure whether esptool.py should reset the ESP32 before flashing.\n\nAutomatic resetting depends on the RTS & DTR signals being\nwired from the serial port to the ESP32. Most USB development\nboards do this internally.",
                "id": "serial-flasher-config-before-flashing",
                "name": "ESPTOOLPY_BEFORE",
                "title": "Before flashing",
                "type": "choice"
            },
            {
                "children": [],
                "depends_on": "!APP_BUILD_TYPE_PURE_RAM_APP",
                "help": null,
                "id": "ESPTOOLPY_BEFORE",
                "name": "ESPTOOLPY_BEFORE",
                "range": null,
                "title": null,
                "type": "string"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "<choice ESPTOOLPY_AFTER>",
                        "help": null,
                        "id": "ESPTOOLPY_AFTER_RESET",
                        "name": "ESPTOOLPY_AFTER_RESET",
                        "range": null,
                        "title": "Reset after flashing",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice ESPTOOLPY_AFTER>",
                        "help": null,
                        "id": "ESPTOOLPY_AFTER_NORESET",
                        "name": "ESPTOOLPY_AFTER_NORESET",
                        "range": null,
                        "title": "Stay in bootloader",
                        "type": "bool"
                    }
                ],
                "depends_on": "!APP_BUILD_TYPE_PURE_RAM_APP",
                "help": "Configure whether esptool.py should reset the ESP32 after flashing.\n\nAutomatic resetting depends on the RTS & DTR signals being\nwired from the serial port to the ESP32. Most USB development\nboards do this internally.",
                "id": "serial-flasher-config-after-flashing",
                "name": "ESPTOOLPY_AFTER",
                "title": "After flashing",
                "type": "choice"
            },
            {
                "children": [],
                "depends_on": "!APP_BUILD_TYPE_PURE_RAM_APP",
                "help": null,
                "id": "ESPTOOLPY_AFTER",
                "name": "ESPTOOLPY_AFTER",
                "range": null,
                "title": null,
                "type": "string"
            },
            {
                "children": [],
                "depends_on": "!APP_BUILD_TYPE_PURE_RAM_APP",
                "help": null,
                "id": "ESPTOOLPY_MONITOR_BAUD",
                "name": "ESPTOOLPY_MONITOR_BAUD",
                "range": null,
                "title": null,
                "type": "int"
            }
        ],
        "depends_on": "!APP_BUILD_TYPE_PURE_RAM_APP",
        "id": "serial-flasher-config",
        "title": "Serial flasher config",
        "type": "menu"
    },
    {
        "children": [
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "<choice PARTITION_TABLE_TYPE>",
                        "help": "This is the default partition table, designed to fit into a 2MB or\nlarger flash with a single 1MB app partition.\n\nThe corresponding CSV file in the IDF directory is\ncomponents/partition_table/partitions_singleapp.csv\n\nThis partition table is not suitable for an app that needs OTA\n(over the air update) capability.",
                        "id": "PARTITION_TABLE_SINGLE_APP",
                        "name": "PARTITION_TABLE_SINGLE_APP",
                        "range": null,
                        "title": "Single factory app, no OTA",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice PARTITION_TABLE_TYPE>",
                        "help": "This is a variation of the default partition table, that expands\nthe 1MB app partition size to 1.5MB to fit more code.\n\nThe corresponding CSV file in the IDF directory is\ncomponents/partition_table/partitions_singleapp_large.csv\n\nThis partition table is not suitable for an app that needs OTA\n(over the air update) capability.",
                        "id": "PARTITION_TABLE_SINGLE_APP_LARGE",
                        "name": "PARTITION_TABLE_SINGLE_APP_LARGE",
                        "range": null,
                        "title": "Single factory app (large), no OTA",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice PARTITION_TABLE_TYPE>",
                        "help": "This is a basic OTA-enabled partition table with a factory app\npartition plus two OTA app partitions. All are 1MB, so this\npartition table requires 4MB or larger flash size.\n\nThe corresponding CSV file in the IDF directory is\ncomponents/partition_table/partitions_two_ota.csv",
                        "id": "PARTITION_TABLE_TWO_OTA",
                        "name": "PARTITION_TABLE_TWO_OTA",
                        "range": null,
                        "title": "Factory app, two OTA definitions",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice PARTITION_TABLE_TYPE>",
                        "help": "This is a basic OTA-enabled partition table with\ntwo OTA app partitions. Both app partition sizes are 1700K,\nso this partition table requires 4MB or larger flash size.\n\nThe corresponding CSV file in the IDF directory is\ncomponents/partition_table/partitions_two_ota_large.csv",
                        "id": "PARTITION_TABLE_TWO_OTA_LARGE",
                        "name": "PARTITION_TABLE_TWO_OTA_LARGE",
                        "range": null,
                        "title": "Two large size OTA partitions",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice PARTITION_TABLE_TYPE>",
                        "help": "Specify the path to the partition table CSV to use for your project.\n\nConsult the Partition Table section in the ESP-IDF Programmers Guide\nfor more information.",
                        "id": "PARTITION_TABLE_CUSTOM",
                        "name": "PARTITION_TABLE_CUSTOM",
                        "range": null,
                        "title": "Custom partition table CSV",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "!ESP32_COREDUMP_ENABLE_TO_FLASH && NVS_SEC_KEY_PROTECT_USING_FLASH_ENC && <choice PARTITION_TABLE_TYPE>",
                        "help": "This is a variation of the default \"Single factory app, no OTA\" partition table\nthat supports encrypted NVS when using flash encryption. See the Flash Encryption section\nin the ESP-IDF Programmers Guide for more information.\n\nThe corresponding CSV file in the IDF directory is\ncomponents/partition_table/partitions_singleapp_encr_nvs.csv",
                        "id": "PARTITION_TABLE_SINGLE_APP_ENCRYPTED_NVS",
                        "name": "PARTITION_TABLE_SINGLE_APP_ENCRYPTED_NVS",
                        "range": null,
                        "title": "Single factory app, no OTA, encrypted NVS",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "!ESP32_COREDUMP_ENABLE_TO_FLASH && NVS_SEC_KEY_PROTECT_USING_FLASH_ENC && <choice PARTITION_TABLE_TYPE>",
                        "help": "This is a variation of the \"Single factory app (large), no OTA\" partition table\nthat supports encrypted NVS when using flash encryption. See the Flash Encryption section\nin the ESP-IDF Programmers Guide for more information.\n\nThe corresponding CSV file in the IDF directory is\ncomponents/partition_table/partitions_singleapp_large_encr_nvs.csv",
                        "id": "PARTITION_TABLE_SINGLE_APP_LARGE_ENC_NVS",
                        "name": "PARTITION_TABLE_SINGLE_APP_LARGE_ENC_NVS",
                        "range": null,
                        "title": "Single factory app (large), no OTA, encrypted NVS",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "!ESP_COREDUMP_ENABLE_TO_FLASH && NVS_SEC_KEY_PROTECT_USING_FLASH_ENC && <choice PARTITION_TABLE_TYPE>",
                        "help": "This is a variation of the \"Factory app, two OTA definitions\" partition table\nthat supports encrypted NVS when using flash encryption. See the Flash Encryption section\nin the ESP-IDF Programmers Guide for more information.\n\nThe corresponding CSV file in the IDF directory is\ncomponents/partition_table/partitions_two_ota_encr_nvs.csv",
                        "id": "PARTITION_TABLE_TWO_OTA_ENCRYPTED_NVS",
                        "name": "PARTITION_TABLE_TWO_OTA_ENCRYPTED_NVS",
                        "range": null,
                        "title": "Factory app, two OTA definitions, encrypted NVS",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "SECURE_ENABLE_TEE && <choice PARTITION_TABLE_TYPE>",
                        "help": "This is a variation of the default \"Single factory app, no OTA\" partition table\nthat supports the ESP-TEE framework. See the Trusted Execution Environment (TEE) section\nin the ESP-IDF Programmers Guide for more information.\n\nThe corresponding CSV file in the IDF directory is\ncomponents/partition_table/partitions_singleapp_tee.csv",
                        "id": "PARTITION_TABLE_SINGLE_APP_TEE",
                        "name": "PARTITION_TABLE_SINGLE_APP_TEE",
                        "range": null,
                        "title": "Single factory app, no OTA, TEE",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "SECURE_ENABLE_TEE && <choice PARTITION_TABLE_TYPE>",
                        "help": "This is a basic OTA-enabled partition table with two OTA app partitions each\nfor the TEE and the user (REE) application. The user app partition sizes are 1536K,\nso this partition table requires 4MB or larger flash size. See the\nTrusted Execution Environment (TEE) section in the ESP-IDF Programmers Guide\nfor more information.\n\nThe corresponding CSV file in the IDF directory is\ncomponents/partition_table/partitions_two_ota_tee.csv",
                        "id": "PARTITION_TABLE_TWO_OTA_TEE",
                        "name": "PARTITION_TABLE_TWO_OTA_TEE",
                        "range": null,
                        "title": "Two OTA definitions, TEE",
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "help": "The partition table to flash to the ESP32. The partition table\ndetermines where apps, data and other resources are expected to\nbe found.\n\nThe predefined partition table CSV descriptions can be found\nin the components/partition_table directory. These are mostly intended\nfor example and development use, it's expect that for production use you\nwill copy one of these CSV files and create a custom partition CSV for\nyour application.",
                "id": "partition-table-partition-table",
                "name": "PARTITION_TABLE_TYPE",
                "title": "Partition Table",
                "type": "choice"
            },
            {
                "children": [],
                "depends_on": null,
                "help": "Name of the custom partition CSV filename.\nThis path is evaluated relative to the project root directory by default.\nHowever, if the absolute path for the CSV file is provided, then the absolute path is configured.",
                "id": "PARTITION_TABLE_CUSTOM_FILENAME",
                "name": "PARTITION_TABLE_CUSTOM_FILENAME",
                "range": null,
                "title": "Custom partition CSV file",
                "type": "string"
            },
            {
                "children": [],
                "depends_on": null,
                "help": null,
                "id": "PARTITION_TABLE_FILENAME",
                "name": "PARTITION_TABLE_FILENAME",
                "range": null,
                "title": null,
                "type": "string"
            },
            {
                "children": [],
                "depends_on": null,
                "help": "The address of partition table (by default 0x8000).\nAllows you to move the partition table, it gives more space for the bootloader.\nNote that the bootloader and app will both need to be compiled with the same PARTITION_TABLE_OFFSET value.\n\nThis number should be a multiple of 0x1000.\n\nNote that partition offsets in the partition table CSV file may need to be changed if this value is set to\na higher value. To have each partition offset adapt to the configured partition table offset, leave all\npartition offsets blank in the CSV file.",
                "id": "PARTITION_TABLE_OFFSET",
                "name": "PARTITION_TABLE_OFFSET",
                "range": null,
                "title": "Offset of partition table",
                "type": "hex"
            },
            {
                "children": [],
                "depends_on": "!APP_COMPATIBLE_PRE_V3_1_BOOTLOADERS && !IDF_TARGET_LINUX",
                "help": "Generate an MD5 checksum for the partition table for protecting the\nintegrity of the table. The generation should be turned off for legacy\nbootloaders which cannot recognize the MD5 checksum in the partition\ntable.",
                "id": "PARTITION_TABLE_MD5",
                "name": "PARTITION_TABLE_MD5",
                "range": null,
                "title": "Generate an MD5 checksum for the partition table",
                "type": "bool"
            }
        ],
        "depends_on": null,
        "id": "partition-table",
        "title": "Partition Table",
        "type": "menu"
    },
    {
        "children": [
            {
                "children": [],
                "depends_on": "SOC_PM_SUPPORT_TOUCH_SENSOR_WAKEUP && SOC_TOUCH_SENSOR_SUPPORTED",
                "help": "This option enables wake up from deep sleep using touch pads.\nESP32 - TOUCH8 and TOUCH9, which correspond to GPIO33 and GPIO32.\nESP32S2/S3 - TOUCH9, which corresponds to GPIO9.\nESP32P4 - TOUCH2, which corresponds to GPIO4.\n\nNote: On ESP32, touch wakeup source can not be used together with ext0 wakeup source.",
                "id": "EXAMPLE_TOUCH_WAKEUP",
                "name": "EXAMPLE_TOUCH_WAKEUP",
                "range": null,
                "title": "Enable touch wake up",
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": "SOC_PM_SUPPORT_EXT0_WAKEUP",
                "help": "This option enables wake up from deep sleep from GPIO25(ESP32)/GPIO3(ESP32S2,S3). The pin should be\nconnected to LOW to avoid being in a floating state. When triggering a wake up, connect the pin to HIGH.\nNote that floating pins may trigger a wake up.\n\nNote: On ESP32, ext0 wakeup source can not be used together with touch wakeup source.",
                "id": "EXAMPLE_EXT0_WAKEUP",
                "name": "EXAMPLE_EXT0_WAKEUP",
                "range": null,
                "title": "Enable wakeup from GPIO (ext0)",
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": "SOC_PM_SUPPORT_EXT1_WAKEUP",
                "help": "This option enables wake up from deep sleep from GPIO2 and GPIO4. They should be connected to LOW to avoid\nfloating pins. When triggering a wake up, connect one or both of the pins to HIGH. Note that floating\npins may trigger a wake up.",
                "id": "EXAMPLE_EXT1_WAKEUP",
                "name": "EXAMPLE_EXT1_WAKEUP",
                "range": null,
                "title": "Enable wakeup from GPIO (ext1)",
                "type": "bool"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "!IDF_TARGET_ESP32",
                        "help": null,
                        "id": "EXAMPLE_EXT1_WAKEUP_PIN_1",
                        "name": "EXAMPLE_EXT1_WAKEUP_PIN_1",
                        "range": null,
                        "title": "Enable wakeup from PIN_1",
                        "type": "int"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "<choice EXAMPLE_EXT1_WAKEUP_PIN_1_SEL>",
                                "help": null,
                                "id": "EXAMPLE_EXT1_WAKEUP_PIN_1_SEL_0",
                                "name": "EXAMPLE_EXT1_WAKEUP_PIN_1_SEL_0",
                                "range": null,
                                "title": "GPIO 0",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice EXAMPLE_EXT1_WAKEUP_PIN_1_SEL>",
                                "help": null,
                                "id": "EXAMPLE_EXT1_WAKEUP_PIN_1_SEL_2",
                                "name": "EXAMPLE_EXT1_WAKEUP_PIN_1_SEL_2",
                                "range": null,
                                "title": "GPIO 2",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice EXAMPLE_EXT1_WAKEUP_PIN_1_SEL>",
                                "help": null,
                                "id": "EXAMPLE_EXT1_WAKEUP_PIN_1_SEL_4",
                                "name": "EXAMPLE_EXT1_WAKEUP_PIN_1_SEL_4",
                                "range": null,
                                "title": "GPIO 4",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice EXAMPLE_EXT1_WAKEUP_PIN_1_SEL>",
                                "help": null,
                                "id": "EXAMPLE_EXT1_WAKEUP_PIN_1_SEL_12",
                                "name": "EXAMPLE_EXT1_WAKEUP_PIN_1_SEL_12",
                                "range": null,
                                "title": "GPIO 12",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice EXAMPLE_EXT1_WAKEUP_PIN_1_SEL>",
                                "help": null,
                                "id": "EXAMPLE_EXT1_WAKEUP_PIN_1_SEL_13",
                                "name": "EXAMPLE_EXT1_WAKEUP_PIN_1_SEL_13",
                                "range": null,
                                "title": "GPIO 13",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice EXAMPLE_EXT1_WAKEUP_PIN_1_SEL>",
                                "help": null,
                                "id": "EXAMPLE_EXT1_WAKEUP_PIN_1_SEL_14",
                                "name": "EXAMPLE_EXT1_WAKEUP_PIN_1_SEL_14",
                                "range": null,
                                "title": "GPIO 14",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice EXAMPLE_EXT1_WAKEUP_PIN_1_SEL>",
                                "help": null,
                                "id": "EXAMPLE_EXT1_WAKEUP_PIN_1_SEL_15",
                                "name": "EXAMPLE_EXT1_WAKEUP_PIN_1_SEL_15",
                                "range": null,
                                "title": "GPIO 15",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice EXAMPLE_EXT1_WAKEUP_PIN_1_SEL>",
                                "help": null,
                                "id": "EXAMPLE_EXT1_WAKEUP_PIN_1_SEL_25",
                                "name": "EXAMPLE_EXT1_WAKEUP_PIN_1_SEL_25",
                                "range": null,
                                "title": "GPIO 25",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice EXAMPLE_EXT1_WAKEUP_PIN_1_SEL>",
                                "help": null,
                                "id": "EXAMPLE_EXT1_WAKEUP_PIN_1_SEL_26",
                                "name": "EXAMPLE_EXT1_WAKEUP_PIN_1_SEL_26",
                                "range": null,
                                "title": "GPIO 26",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice EXAMPLE_EXT1_WAKEUP_PIN_1_SEL>",
                                "help": null,
                                "id": "EXAMPLE_EXT1_WAKEUP_PIN_1_SEL_27",
                                "name": "EXAMPLE_EXT1_WAKEUP_PIN_1_SEL_27",
                                "range": null,
                                "title": "GPIO 27",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice EXAMPLE_EXT1_WAKEUP_PIN_1_SEL>",
                                "help": null,
                                "id": "EXAMPLE_EXT1_WAKEUP_PIN_1_SEL_32",
                                "name": "EXAMPLE_EXT1_WAKEUP_PIN_1_SEL_32",
                                "range": null,
                                "title": "GPIO 32",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice EXAMPLE_EXT1_WAKEUP_PIN_1_SEL>",
                                "help": null,
                                "id": "EXAMPLE_EXT1_WAKEUP_PIN_1_SEL_33",
                                "name": "EXAMPLE_EXT1_WAKEUP_PIN_1_SEL_33",
                                "range": null,
                                "title": "GPIO 33",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice EXAMPLE_EXT1_WAKEUP_PIN_1_SEL>",
                                "help": null,
                                "id": "EXAMPLE_EXT1_WAKEUP_PIN_1_SEL_34",
                                "name": "EXAMPLE_EXT1_WAKEUP_PIN_1_SEL_34",
                                "range": null,
                                "title": "GPIO 34",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice EXAMPLE_EXT1_WAKEUP_PIN_1_SEL>",
                                "help": null,
                                "id": "EXAMPLE_EXT1_WAKEUP_PIN_1_SEL_35",
                                "name": "EXAMPLE_EXT1_WAKEUP_PIN_1_SEL_35",
                                "range": null,
                                "title": "GPIO 35",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice EXAMPLE_EXT1_WAKEUP_PIN_1_SEL>",
                                "help": null,
                                "id": "EXAMPLE_EXT1_WAKEUP_PIN_1_SEL_36",
                                "name": "EXAMPLE_EXT1_WAKEUP_PIN_1_SEL_36",
                                "range": null,
                                "title": "GPIO 36",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice EXAMPLE_EXT1_WAKEUP_PIN_1_SEL>",
                                "help": null,
                                "id": "EXAMPLE_EXT1_WAKEUP_PIN_1_SEL_37",
                                "name": "EXAMPLE_EXT1_WAKEUP_PIN_1_SEL_37",
                                "range": null,
                                "title": "GPIO 37",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice EXAMPLE_EXT1_WAKEUP_PIN_1_SEL>",
                                "help": null,
                                "id": "EXAMPLE_EXT1_WAKEUP_PIN_1_SEL_38",
                                "name": "EXAMPLE_EXT1_WAKEUP_PIN_1_SEL_38",
                                "range": null,
                                "title": "GPIO 38",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice EXAMPLE_EXT1_WAKEUP_PIN_1_SEL>",
                                "help": null,
                                "id": "EXAMPLE_EXT1_WAKEUP_PIN_1_SEL_39",
                                "name": "EXAMPLE_EXT1_WAKEUP_PIN_1_SEL_39",
                                "range": null,
                                "title": "GPIO 39",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "IDF_TARGET_ESP32",
                        "help": null,
                        "id": "example-configuration-ext1-wakeup-configuration-enable-wakeup-from-pin_1",
                        "name": "EXAMPLE_EXT1_WAKEUP_PIN_1_SEL",
                        "title": "Enable wakeup from PIN_1",
                        "type": "choice"
                    },
                    {
                        "children": [],
                        "depends_on": "IDF_TARGET_ESP32",
                        "help": null,
                        "id": "EXAMPLE_EXT1_WAKEUP_PIN_1",
                        "name": "EXAMPLE_EXT1_WAKEUP_PIN_1",
                        "range": null,
                        "title": null,
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": "!IDF_TARGET_ESP32",
                        "help": null,
                        "id": "EXAMPLE_EXT1_WAKEUP_PIN_2",
                        "name": "EXAMPLE_EXT1_WAKEUP_PIN_2",
                        "range": null,
                        "title": "Enable wakeup from PIN_2",
                        "type": "int"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "<choice EXAMPLE_EXT1_WAKEUP_PIN_2_SEL>",
                                "help": null,
                                "id": "EXAMPLE_EXT1_WAKEUP_PIN_2_SEL_0",
                                "name": "EXAMPLE_EXT1_WAKEUP_PIN_2_SEL_0",
                                "range": null,
                                "title": "GPIO 0",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice EXAMPLE_EXT1_WAKEUP_PIN_2_SEL>",
                                "help": null,
                                "id": "EXAMPLE_EXT1_WAKEUP_PIN_2_SEL_2",
                                "name": "EXAMPLE_EXT1_WAKEUP_PIN_2_SEL_2",
                                "range": null,
                                "title": "GPIO 2",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice EXAMPLE_EXT1_WAKEUP_PIN_2_SEL>",
                                "help": null,
                                "id": "EXAMPLE_EXT1_WAKEUP_PIN_2_SEL_4",
                                "name": "EXAMPLE_EXT1_WAKEUP_PIN_2_SEL_4",
                                "range": null,
                                "title": "GPIO 4",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice EXAMPLE_EXT1_WAKEUP_PIN_2_SEL>",
                                "help": null,
                                "id": "EXAMPLE_EXT1_WAKEUP_PIN_2_SEL_12",
                                "name": "EXAMPLE_EXT1_WAKEUP_PIN_2_SEL_12",
                                "range": null,
                                "title": "GPIO 12",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice EXAMPLE_EXT1_WAKEUP_PIN_2_SEL>",
                                "help": null,
                                "id": "EXAMPLE_EXT1_WAKEUP_PIN_2_SEL_13",
                                "name": "EXAMPLE_EXT1_WAKEUP_PIN_2_SEL_13",
                                "range": null,
                                "title": "GPIO 13",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice EXAMPLE_EXT1_WAKEUP_PIN_2_SEL>",
                                "help": null,
                                "id": "EXAMPLE_EXT1_WAKEUP_PIN_2_SEL_14",
                                "name": "EXAMPLE_EXT1_WAKEUP_PIN_2_SEL_14",
                                "range": null,
                                "title": "GPIO 14",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice EXAMPLE_EXT1_WAKEUP_PIN_2_SEL>",
                                "help": null,
                                "id": "EXAMPLE_EXT1_WAKEUP_PIN_2_SEL_15",
                                "name": "EXAMPLE_EXT1_WAKEUP_PIN_2_SEL_15",
                                "range": null,
                                "title": "GPIO 15",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice EXAMPLE_EXT1_WAKEUP_PIN_2_SEL>",
                                "help": null,
                                "id": "EXAMPLE_EXT1_WAKEUP_PIN_2_SEL_25",
                                "name": "EXAMPLE_EXT1_WAKEUP_PIN_2_SEL_25",
                                "range": null,
                                "title": "GPIO 25",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice EXAMPLE_EXT1_WAKEUP_PIN_2_SEL>",
                                "help": null,
                                "id": "EXAMPLE_EXT1_WAKEUP_PIN_2_SEL_26",
                                "name": "EXAMPLE_EXT1_WAKEUP_PIN_2_SEL_26",
                                "range": null,
                                "title": "GPIO 26",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice EXAMPLE_EXT1_WAKEUP_PIN_2_SEL>",
                                "help": null,
                                "id": "EXAMPLE_EXT1_WAKEUP_PIN_2_SEL_27",
                                "name": "EXAMPLE_EXT1_WAKEUP_PIN_2_SEL_27",
                                "range": null,
                                "title": "GPIO 27",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice EXAMPLE_EXT1_WAKEUP_PIN_2_SEL>",
                                "help": null,
                                "id": "EXAMPLE_EXT1_WAKEUP_PIN_2_SEL_32",
                                "name": "EXAMPLE_EXT1_WAKEUP_PIN_2_SEL_32",
                                "range": null,
                                "title": "GPIO 32",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice EXAMPLE_EXT1_WAKEUP_PIN_2_SEL>",
                                "help": null,
                                "id": "EXAMPLE_EXT1_WAKEUP_PIN_2_SEL_33",
                                "name": "EXAMPLE_EXT1_WAKEUP_PIN_2_SEL_33",
                                "range": null,
                                "title": "GPIO 33",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice EXAMPLE_EXT1_WAKEUP_PIN_2_SEL>",
                                "help": null,
                                "id": "EXAMPLE_EXT1_WAKEUP_PIN_2_SEL_34",
                                "name": "EXAMPLE_EXT1_WAKEUP_PIN_2_SEL_34",
                                "range": null,
                                "title": "GPIO 34",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice EXAMPLE_EXT1_WAKEUP_PIN_2_SEL>",
                                "help": null,
                                "id": "EXAMPLE_EXT1_WAKEUP_PIN_2_SEL_35",
                                "name": "EXAMPLE_EXT1_WAKEUP_PIN_2_SEL_35",
                                "range": null,
                                "title": "GPIO 35",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice EXAMPLE_EXT1_WAKEUP_PIN_2_SEL>",
                                "help": null,
                                "id": "EXAMPLE_EXT1_WAKEUP_PIN_2_SEL_36",
                                "name": "EXAMPLE_EXT1_WAKEUP_PIN_2_SEL_36",
                                "range": null,
                                "title": "GPIO 36",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice EXAMPLE_EXT1_WAKEUP_PIN_2_SEL>",
                                "help": null,
                                "id": "EXAMPLE_EXT1_WAKEUP_PIN_2_SEL_37",
                                "name": "EXAMPLE_EXT1_WAKEUP_PIN_2_SEL_37",
                                "range": null,
                                "title": "GPIO 37",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice EXAMPLE_EXT1_WAKEUP_PIN_2_SEL>",
                                "help": null,
                                "id": "EXAMPLE_EXT1_WAKEUP_PIN_2_SEL_38",
                                "name": "EXAMPLE_EXT1_WAKEUP_PIN_2_SEL_38",
                                "range": null,
                                "title": "GPIO 38",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice EXAMPLE_EXT1_WAKEUP_PIN_2_SEL>",
                                "help": null,
                                "id": "EXAMPLE_EXT1_WAKEUP_PIN_2_SEL_39",
                                "name": "EXAMPLE_EXT1_WAKEUP_PIN_2_SEL_39",
                                "range": null,
                                "title": "GPIO 39",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "IDF_TARGET_ESP32",
                        "help": null,
                        "id": "example-configuration-ext1-wakeup-configuration-enable-wakeup-from-pin_2",
                        "name": "EXAMPLE_EXT1_WAKEUP_PIN_2_SEL",
                        "title": "Enable wakeup from PIN_2",
                        "type": "choice"
                    },
                    {
                        "children": [],
                        "depends_on": "IDF_TARGET_ESP32",
                        "help": null,
                        "id": "EXAMPLE_EXT1_WAKEUP_PIN_2",
                        "name": "EXAMPLE_EXT1_WAKEUP_PIN_2",
                        "range": null,
                        "title": null,
                        "type": "int"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "!IDF_TARGET_ESP32 && <choice EXAMPLE_EXT1_WAKEUP_MODE_SEL>",
                                "help": null,
                                "id": "ESP_EXT1_WAKEUP_ANY_LOW",
                                "name": "ESP_EXT1_WAKEUP_ANY_LOW",
                                "range": null,
                                "title": "GPIO any low level",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "IDF_TARGET_ESP32 && <choice EXAMPLE_EXT1_WAKEUP_MODE_SEL>",
                                "help": null,
                                "id": "ESP_EXT1_WAKEUP_ALL_LOW",
                                "name": "ESP_EXT1_WAKEUP_ALL_LOW",
                                "range": null,
                                "title": "GPIO all low level",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice EXAMPLE_EXT1_WAKEUP_MODE_SEL>",
                                "help": null,
                                "id": "ESP_EXT1_WAKEUP_ANY_HIGH",
                                "name": "ESP_EXT1_WAKEUP_ANY_HIGH",
                                "range": null,
                                "title": "GPIO any high level",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "!SOC_PM_SUPPORT_EXT1_WAKEUP_MODE_PER_PIN",
                        "help": null,
                        "id": "example-configuration-ext1-wakeup-configuration-select-wakeup-mode-from-ext1",
                        "name": "EXAMPLE_EXT1_WAKEUP_MODE_SEL",
                        "title": "Select wakeup mode from EXT1",
                        "type": "choice"
                    },
                    {
                        "children": [],
                        "depends_on": "!SOC_PM_SUPPORT_EXT1_WAKEUP_MODE_PER_PIN",
                        "help": null,
                        "id": "EXAMPLE_EXT1_WAKEUP_MODE",
                        "name": "EXAMPLE_EXT1_WAKEUP_MODE",
                        "range": null,
                        "title": null,
                        "type": "int"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "<choice EXAMPLE_EXT1_WAKEUP_PIN_1_MODE_SEL>",
                                "help": null,
                                "id": "ESP_EXT1_WAKEUP_PIN_1_LOW",
                                "name": "ESP_EXT1_WAKEUP_PIN_1_LOW",
                                "range": null,
                                "title": "GPIO low level",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice EXAMPLE_EXT1_WAKEUP_PIN_1_MODE_SEL>",
                                "help": null,
                                "id": "ESP_EXT1_WAKEUP_PIN_1_HIGH",
                                "name": "ESP_EXT1_WAKEUP_PIN_1_HIGH",
                                "range": null,
                                "title": "GPIO high level",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "SOC_PM_SUPPORT_EXT1_WAKEUP_MODE_PER_PIN",
                        "help": null,
                        "id": "example-configuration-ext1-wakeup-configuration-select-pin_1-wakeup-mode-from-ext1",
                        "name": "EXAMPLE_EXT1_WAKEUP_PIN_1_MODE_SEL",
                        "title": "Select pin_1 wakeup mode from EXT1",
                        "type": "choice"
                    },
                    {
                        "children": [],
                        "depends_on": "SOC_PM_SUPPORT_EXT1_WAKEUP_MODE_PER_PIN",
                        "help": null,
                        "id": "EXAMPLE_EXT1_WAKEUP_MODE_PIN_1",
                        "name": "EXAMPLE_EXT1_WAKEUP_MODE_PIN_1",
                        "range": null,
                        "title": null,
                        "type": "int"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "<choice EXAMPLE_EXT1_WAKEUP_PIN_2_MODE_SEL>",
                                "help": null,
                                "id": "ESP_EXT1_WAKEUP_PIN_2_LOW",
                                "name": "ESP_EXT1_WAKEUP_PIN_2_LOW",
                                "range": null,
                                "title": "GPIO low level",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice EXAMPLE_EXT1_WAKEUP_PIN_2_MODE_SEL>",
                                "help": null,
                                "id": "ESP_EXT1_WAKEUP_PIN_2_HIGH",
                                "name": "ESP_EXT1_WAKEUP_PIN_2_HIGH",
                                "range": null,
                                "title": "GPIO high level",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "SOC_PM_SUPPORT_EXT1_WAKEUP_MODE_PER_PIN",
                        "help": null,
                        "id": "example-configuration-ext1-wakeup-configuration-select-pin_2-wakeup-mode-from-ext1",
                        "name": "EXAMPLE_EXT1_WAKEUP_PIN_2_MODE_SEL",
                        "title": "Select pin_2 wakeup mode from EXT1",
                        "type": "choice"
                    },
                    {
                        "children": [],
                        "depends_on": "SOC_PM_SUPPORT_EXT1_WAKEUP_MODE_PER_PIN",
                        "help": null,
                        "id": "EXAMPLE_EXT1_WAKEUP_MODE_PIN_2",
                        "name": "EXAMPLE_EXT1_WAKEUP_MODE_PIN_2",
                        "range": null,
                        "title": null,
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": "EXAMPLE_EXT1_WAKEUP",
                        "help": "When using EXT1 wakeup source without external pull-up/downs, you may want to make use of\nthe internal ones.\n\nif we turn off the RTC_PERIPH domain or if certain chips lack the RTC_PERIPH domain,\nwe will use the HOLD feature to maintain the pull-up and pull-down on the pins during sleep.\nbut if we turn on the RTC_PERIPH domain, we don not need to use HOLD feature and this will\nincrease some power consumption.\n\nEXT0 wakeup source resides in the same power domain as RTCIO (RTC Periph), so internal\npull-up/downs are always available. There's no need to explicitly force it on for EXT0.",
                        "id": "EXAMPLE_EXT1_USE_INTERNAL_PULLUPS",
                        "name": "EXAMPLE_EXT1_USE_INTERNAL_PULLUPS",
                        "range": null,
                        "title": "Use internal pull-up/downs for EXT1 wakeup source",
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "id": "example-configuration-ext1-wakeup-configuration",
                "title": "EXT1 wakeup configuration",
                "type": "menu"
            },
            {
                "children": [],
                "depends_on": "SOC_GPIO_SUPPORT_DEEPSLEEP_WAKEUP",
                "help": "This option enables wake up from GPIO. Be aware that if you use low level to trigger wakeup, we strongly\nrecommend you to connect external pull-up resistance.",
                "id": "EXAMPLE_GPIO_WAKEUP",
                "name": "EXAMPLE_GPIO_WAKEUP",
                "range": null,
                "title": "Enable wakeup from GPIO",
                "type": "bool"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": null,
                        "help": null,
                        "id": "EXAMPLE_GPIO_WAKEUP_PIN",
                        "name": "EXAMPLE_GPIO_WAKEUP_PIN",
                        "range": [
                            0,
                            5
                        ],
                        "title": "Enable wakeup from GPIO",
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "This option set the gpio wake-up trigger signal, In deep sleep, only high or low level wake-up is\nsupported. If this option is enabled, it is a high level wake up, otherwise it is a low level wake up.",
                        "id": "EXAMPLE_GPIO_WAKEUP_HIGH_LEVEL",
                        "name": "EXAMPLE_GPIO_WAKEUP_HIGH_LEVEL",
                        "range": null,
                        "title": "Enable GPIO high-level wakeup",
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "id": "example-configuration-gpio-wakeup-configuration",
                "title": "GPIO wakeup configuration",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "!IDF_TARGET_ESP32",
                        "help": "Enable this option if allow the RTC_PERIPH power domain (contain touch sensor) to be powered down\nduring deep sleep. It can help to save more power, but only one specified touch channel can wakeup\nfrom the deep sleep. If this option is disabled, the RTC_PERIPH power domain will be powered up\nduring deep sleep, and all enabled touch channels can wakeup from the deep sleep.",
                        "id": "EXAMPLE_TOUCH_ALLOW_DSLP_PD",
                        "name": "EXAMPLE_TOUCH_ALLOW_DSLP_PD",
                        "range": null,
                        "title": "Allow RTC_PERIPH power domain to be powered down during deep sleep",
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "id": "example-configuration-touch-wakeup-configuration",
                "title": "Touch wakeup configuration",
                "type": "menu"
            }
        ],
        "depends_on": null,
        "id": "example-configuration",
        "title": "Example Configuration",
        "type": "menu"
    },
    {
        "children": [
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "<choice COMPILER_OPTIMIZATION>",
                        "help": null,
                        "id": "COMPILER_OPTIMIZATION_DEBUG",
                        "name": "COMPILER_OPTIMIZATION_DEBUG",
                        "range": null,
                        "title": "Debug (-Og)",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice COMPILER_OPTIMIZATION>",
                        "help": null,
                        "id": "COMPILER_OPTIMIZATION_SIZE",
                        "name": "COMPILER_OPTIMIZATION_SIZE",
                        "range": null,
                        "title": "Optimize for size (-Os with GCC, -Oz with Clang)",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice COMPILER_OPTIMIZATION>",
                        "help": null,
                        "id": "COMPILER_OPTIMIZATION_PERF",
                        "name": "COMPILER_OPTIMIZATION_PERF",
                        "range": null,
                        "title": "Optimize for performance (-O2)",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice COMPILER_OPTIMIZATION>",
                        "help": null,
                        "id": "COMPILER_OPTIMIZATION_NONE",
                        "name": "COMPILER_OPTIMIZATION_NONE",
                        "range": null,
                        "title": "Debug without optimization (-O0)",
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "help": "This option sets compiler optimization level (gcc -O argument) for the app.\n\n- The \"Debug\" setting will add the -Og flag to CFLAGS.\n- The \"Size\" setting will add the -Os flag to CFLAGS (-Oz with Clang).\n- The \"Performance\" setting will add the -O2 flag to CFLAGS.\n- The \"None\" setting will add the -O0 flag to CFLAGS.\n\nThe \"Size\" setting cause the compiled code to be smaller and faster, but\nmay lead to difficulties of correlating code addresses to source file\nlines when debugging.\n\nThe \"Performance\" setting causes the compiled code to be larger and faster,\nbut will be easier to correlated code addresses to source file lines.\n\n\"None\" with -O0 produces compiled code without optimization.\n\nNote that custom optimization levels may be unsupported.\n\nCompiler optimization for the IDF bootloader is set separately,\nsee the BOOTLOADER_COMPILER_OPTIMIZATION setting.",
                "id": "compiler-options-optimization-level",
                "name": "COMPILER_OPTIMIZATION",
                "title": "Optimization Level",
                "type": "choice"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "<choice COMPILER_OPTIMIZATION_ASSERTION_LEVEL>",
                        "help": "Enable assertions. Assertion content and line number will be printed on failure.",
                        "id": "COMPILER_OPTIMIZATION_ASSERTIONS_ENABLE",
                        "name": "COMPILER_OPTIMIZATION_ASSERTIONS_ENABLE",
                        "range": null,
                        "title": "Enabled",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice COMPILER_OPTIMIZATION_ASSERTION_LEVEL>",
                        "help": "Enable silent assertions. Failed assertions will abort(), user needs to\nuse the aborting address to find the line number with the failed assertion.",
                        "id": "COMPILER_OPTIMIZATION_ASSERTIONS_SILENT",
                        "name": "COMPILER_OPTIMIZATION_ASSERTIONS_SILENT",
                        "range": null,
                        "title": "Silent (saves code size)",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice COMPILER_OPTIMIZATION_ASSERTION_LEVEL>",
                        "help": "If assertions are disabled, -DNDEBUG is added to CPPFLAGS.",
                        "id": "COMPILER_OPTIMIZATION_ASSERTIONS_DISABLE",
                        "name": "COMPILER_OPTIMIZATION_ASSERTIONS_DISABLE",
                        "range": null,
                        "title": "Disabled (sets -DNDEBUG)",
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "help": "Assertions can be:\n\n- Enabled. Failure will print verbose assertion details. This is the default.\n\n- Set to \"silent\" to save code size (failed assertions will abort() but user\n  needs to use the aborting address to find the line number with the failed assertion.)\n\n- Disabled entirely (not recommended for most configurations.) -DNDEBUG is added\n  to CPPFLAGS in this case.",
                "id": "compiler-options-assertion-level",
                "name": "COMPILER_OPTIMIZATION_ASSERTION_LEVEL",
                "title": "Assertion level",
                "type": "choice"
            },
            {
                "children": [],
                "depends_on": null,
                "help": "When NDEBUG is set, assert(X) will not cause code to trigger an assertion.\nWith this option set, assert(X) will still evaluate the expression X, though\nthe result will never cause an assertion. This means that if X is a function\nthen the function will be called.\n\nThis is not according to the standard, which states that the assert(X) should\nbe replaced with ((void)0) if NDEBUG is defined.\n\nIn ESP-IDF v6.0 the default behavior will change to \"no\" to be in line with the\nstandard.",
                "id": "COMPILER_ASSERT_NDEBUG_EVALUATE",
                "name": "COMPILER_ASSERT_NDEBUG_EVALUATE",
                "range": null,
                "title": "Enable the evaluation of the expression inside assert(X) when NDEBUG is set",
                "type": "bool"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "<choice COMPILER_FLOAT_LIB_FROM>",
                        "help": null,
                        "id": "COMPILER_FLOAT_LIB_FROM_GCCLIB",
                        "name": "COMPILER_FLOAT_LIB_FROM_GCCLIB",
                        "range": null,
                        "title": "libgcc",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "ESP_ROM_HAS_RVFPLIB && <choice COMPILER_FLOAT_LIB_FROM>",
                        "help": null,
                        "id": "COMPILER_FLOAT_LIB_FROM_RVFPLIB",
                        "name": "COMPILER_FLOAT_LIB_FROM_RVFPLIB",
                        "range": null,
                        "title": "librvfp",
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "help": "In the soft-fp part of libgcc, riscv version is written in C,\nand handles all edge cases in IEEE754, which makes it larger\nand performance is slow.\n\nRVfplib is an optimized RISC-V library for FP arithmetic on 32-bit\ninteger processors, for single and double-precision FP.\nRVfplib is \"fast\", but it has a few exceptions from IEEE 754 compliance.",
                "id": "compiler-options-compiler-float-lib-source",
                "name": "COMPILER_FLOAT_LIB_FROM",
                "title": "Compiler float lib source",
                "type": "choice"
            },
            {
                "children": [],
                "depends_on": null,
                "help": null,
                "id": "COMPILER_OPTIMIZATION_ASSERTION_LEVEL",
                "name": "COMPILER_OPTIMIZATION_ASSERTION_LEVEL",
                "range": null,
                "title": null,
                "type": "int"
            },
            {
                "children": [],
                "depends_on": null,
                "help": "If enabled, the error messages will be discarded in following check macros:\n- ESP_RETURN_ON_ERROR\n- ESP_EXIT_ON_ERROR\n- ESP_RETURN_ON_FALSE\n- ESP_EXIT_ON_FALSE",
                "id": "COMPILER_OPTIMIZATION_CHECKS_SILENT",
                "name": "COMPILER_OPTIMIZATION_CHECKS_SILENT",
                "range": null,
                "title": "Disable messages in ESP_RETURN_ON_* and ESP_EXIT_ON_* macros",
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": null,
                "help": "When expanding the __FILE__ and __BASE_FILE__ macros, replace paths inside ESP-IDF\nwith paths relative to the placeholder string \"IDF\", and convert paths inside the\nproject directory to relative paths.\n\nThis allows building the project with assertions or other code that embeds file paths,\nwithout the binary containing the exact path to the IDF or project directories.\n\nThis option passes -fmacro-prefix-map options to the GCC command line. To replace additional\npaths in your binaries, modify the project CMakeLists.txt file to pass custom -fmacro-prefix-map or\n-ffile-prefix-map arguments.",
                "id": "COMPILER_HIDE_PATHS_MACROS",
                "is_menuconfig": true,
                "name": "COMPILER_HIDE_PATHS_MACROS",
                "range": null,
                "title": "Replace ESP-IDF and project paths in binaries",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "COMPILER_CXX_EXCEPTIONS",
                        "help": "Size (in bytes) of the emergency memory pool for C++ exceptions. This pool will be used to allocate\nmemory for thrown exceptions when there is not enough memory on the heap.",
                        "id": "COMPILER_CXX_EXCEPTIONS_EMG_POOL_SIZE",
                        "name": "COMPILER_CXX_EXCEPTIONS_EMG_POOL_SIZE",
                        "range": null,
                        "title": "Emergency Pool Size",
                        "type": "int"
                    }
                ],
                "depends_on": null,
                "help": "Enabling this option compiles all IDF C++ files with exception support enabled.\n\nDisabling this option disables C++ exception support in all compiled files, and any libstdc++ code\nwhich throws an exception will abort instead.\n\nEnabling this option currently adds an additional ~500 bytes of heap overhead\nwhen an exception is thrown in user code for the first time.",
                "id": "COMPILER_CXX_EXCEPTIONS",
                "is_menuconfig": true,
                "name": "COMPILER_CXX_EXCEPTIONS",
                "range": null,
                "title": "Enable C++ exceptions",
                "type": "menu"
            },
            {
                "children": [],
                "depends_on": null,
                "help": "Enabling this option compiles all C++ files with RTTI support enabled.\nThis increases binary size (typically by tens of kB) but allows using\ndynamic_cast conversion and typeid operator.",
                "id": "COMPILER_CXX_RTTI",
                "name": "COMPILER_CXX_RTTI",
                "range": null,
                "title": "Enable C++ run-time type info (RTTI)",
                "type": "bool"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "<choice COMPILER_STACK_CHECK_MODE>",
                        "help": null,
                        "id": "COMPILER_STACK_CHECK_MODE_NONE",
                        "name": "COMPILER_STACK_CHECK_MODE_NONE",
                        "range": null,
                        "title": "None",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice COMPILER_STACK_CHECK_MODE>",
                        "help": null,
                        "id": "COMPILER_STACK_CHECK_MODE_NORM",
                        "name": "COMPILER_STACK_CHECK_MODE_NORM",
                        "range": null,
                        "title": "Normal",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice COMPILER_STACK_CHECK_MODE>",
                        "help": null,
                        "id": "COMPILER_STACK_CHECK_MODE_STRONG",
                        "name": "COMPILER_STACK_CHECK_MODE_STRONG",
                        "range": null,
                        "title": "Strong",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice COMPILER_STACK_CHECK_MODE>",
                        "help": null,
                        "id": "COMPILER_STACK_CHECK_MODE_ALL",
                        "name": "COMPILER_STACK_CHECK_MODE_ALL",
                        "range": null,
                        "title": "Overall",
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "help": "Stack smashing protection mode. Emit extra code to check for buffer overflows, such as stack\nsmashing attacks. This is done by adding a guard variable to functions with vulnerable objects.\nThe guards are initialized when a function is entered and then checked when the function exits.\nIf a guard check fails, program is halted. Protection has the following modes:\n\n- In NORMAL mode (GCC flag: -fstack-protector) only functions that call alloca, and functions with\n  buffers larger than 8 bytes are protected.\n\n- STRONG mode (GCC flag: -fstack-protector-strong) is like NORMAL, but includes additional functions\n  to be protected -- those that have local array definitions, or have references to local frame\n  addresses.\n\n- In OVERALL mode (GCC flag: -fstack-protector-all) all functions are protected.\n\nModes have the following impact on code performance and coverage:\n\n- performance: NORMAL > STRONG > OVERALL\n\n- coverage: NORMAL < STRONG < OVERALL\n\nThe performance impact includes increasing the amount of stack memory required for each task.",
                "id": "compiler-options-stack-smashing-protection-mode",
                "name": "COMPILER_STACK_CHECK_MODE",
                "title": "Stack smashing protection mode",
                "type": "choice"
            },
            {
                "children": [],
                "depends_on": null,
                "help": "Stack smashing protection.",
                "id": "COMPILER_STACK_CHECK",
                "name": "COMPILER_STACK_CHECK",
                "range": null,
                "title": null,
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": "IDF_TOOLCHAIN_GCC",
                "help": "Disable merging identical constants (string/floating-point) across compilation units.\nThis helps in better size analysis of the application binary as the rodata section\ndistribution is more uniform across libraries. On downside, it may increase\nthe binary size and hence should be used during development phase only.",
                "id": "COMPILER_NO_MERGE_CONSTANTS",
                "name": "COMPILER_NO_MERGE_CONSTANTS",
                "range": null,
                "title": "Disable merging const sections",
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": null,
                "help": "Adds -Wwrite-strings flag for the C/C++ compilers.\n\nFor C, this gives string constants the type ``const char[]`` so that\ncopying the address of one into a non-const ``char *`` pointer\nproduces a warning. This warning helps to find at compile time code\nthat tries to write into a string constant.\n\nFor C++, this warns about the deprecated conversion from string\nliterals to ``char *``.",
                "id": "COMPILER_WARN_WRITE_STRINGS",
                "name": "COMPILER_WARN_WRITE_STRINGS",
                "range": null,
                "title": "Enable -Wwrite-strings warning flag",
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": "IDF_TARGET_ARCH_RISCV",
                "help": "Adds -msave-restore to C/C++ compilation flags.\n\nWhen this flag is enabled, compiler will call library functions to\nsave/restore registers in function prologues/epilogues. This results\nin lower overall code size, at the expense of slightly reduced performance.\n\nThis option can be enabled for RISC-V targets only.",
                "id": "COMPILER_SAVE_RESTORE_LIBCALLS",
                "name": "COMPILER_SAVE_RESTORE_LIBCALLS",
                "range": null,
                "title": "Enable -msave-restore flag to reduce code size",
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": null,
                "help": "Enable this option if you do not want default warnings to be considered as errors,\nespecially when updating IDF.\n\nThis is a temporary flag that could help to allow upgrade while having\nsome time to address the warnings raised by those default warnings.\nAlternatives are:\n1) fix code (preferred),\n2) remove specific warnings,\n3) do not consider specific warnings as error.",
                "id": "COMPILER_DISABLE_DEFAULT_ERRORS",
                "name": "COMPILER_DISABLE_DEFAULT_ERRORS",
                "range": null,
                "title": "Disable errors for default warnings",
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": null,
                "help": "Enable this option if use GCC 12 or newer, and want to disable warnings which don't appear with\nGCC 11.",
                "id": "COMPILER_DISABLE_GCC12_WARNINGS",
                "name": "COMPILER_DISABLE_GCC12_WARNINGS",
                "range": null,
                "title": "Disable new warnings introduced in GCC 12",
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": null,
                "help": "Enable this option if use GCC 13 or newer, and want to disable warnings which don't appear with\nGCC 12.",
                "id": "COMPILER_DISABLE_GCC13_WARNINGS",
                "name": "COMPILER_DISABLE_GCC13_WARNINGS",
                "range": null,
                "title": "Disable new warnings introduced in GCC 13",
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": null,
                "help": "Enable this option if use GCC 14 or newer, and want to disable warnings which don't appear with\nGCC 13.",
                "id": "COMPILER_DISABLE_GCC14_WARNINGS",
                "name": "COMPILER_DISABLE_GCC14_WARNINGS",
                "range": null,
                "title": "Disable new warnings introduced in GCC 14",
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": null,
                "help": "If enabled, RTL files will be produced during compilation. These files\ncan be used by other tools, for example to calculate call graphs.",
                "id": "COMPILER_DUMP_RTL_FILES",
                "name": "COMPILER_DUMP_RTL_FILES",
                "range": null,
                "title": "Dump RTL files during compilation",
                "type": "bool"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "!IDF_TARGET_LINUX && <choice COMPILER_RT_LIB>",
                        "help": null,
                        "id": "COMPILER_RT_LIB_GCCLIB",
                        "name": "COMPILER_RT_LIB_GCCLIB",
                        "range": null,
                        "title": "libgcc",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "IDF_TOOLCHAIN_CLANG && !IDF_TARGET_LINUX && <choice COMPILER_RT_LIB>",
                        "help": null,
                        "id": "COMPILER_RT_LIB_CLANGRT",
                        "name": "COMPILER_RT_LIB_CLANGRT",
                        "range": null,
                        "title": "libclang_rt",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "IDF_TARGET_LINUX && <choice COMPILER_RT_LIB>",
                        "help": null,
                        "id": "COMPILER_RT_LIB_HOST",
                        "name": "COMPILER_RT_LIB_HOST",
                        "range": null,
                        "title": "Host",
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "help": "Select runtime library to be used by compiler.\n- GCC toolchain supports libgcc only.\n- Clang allows to choose between libgcc or libclang_rt.\n- For host builds (\"linux\" target), uses the default library.",
                "id": "compiler-options-compiler-runtime-library",
                "name": "COMPILER_RT_LIB",
                "title": "Compiler runtime library",
                "type": "choice"
            },
            {
                "children": [],
                "depends_on": null,
                "help": null,
                "id": "COMPILER_RT_LIB_NAME",
                "name": "COMPILER_RT_LIB_NAME",
                "range": null,
                "title": null,
                "type": "string"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "<choice COMPILER_ORPHAN_SECTIONS>",
                        "help": "Places orphan sections with a warning message.",
                        "id": "COMPILER_ORPHAN_SECTIONS_WARNING",
                        "name": "COMPILER_ORPHAN_SECTIONS_WARNING",
                        "range": null,
                        "title": "Place with warning",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice COMPILER_ORPHAN_SECTIONS>",
                        "help": "Places orphan sections without a warning/error message.",
                        "id": "COMPILER_ORPHAN_SECTIONS_PLACE",
                        "name": "COMPILER_ORPHAN_SECTIONS_PLACE",
                        "range": null,
                        "title": "Place silently",
                        "type": "bool"
                    }
                ],
                "depends_on": "!IDF_TARGET_LINUX",
                "help": "If the linker finds orphan sections, it attempts to place orphan sections after sections of the same\nattribute such as code vs data, loadable vs non-loadable, etc.\nThat means that orphan sections could placed between sections defined in IDF linker scripts.\nThis could lead to corruption of the binary image. Configure the linker action here.",
                "id": "compiler-options-orphan-sections-handling",
                "name": "COMPILER_ORPHAN_SECTIONS",
                "title": "Orphan sections handling",
                "type": "choice"
            },
            {
                "children": [],
                "depends_on": "IDF_TOOLCHAIN_GCC",
                "help": "Enable compiler static analyzer. This may produce false-positive results and increases compile time.",
                "id": "COMPILER_STATIC_ANALYZER",
                "name": "COMPILER_STATIC_ANALYZER",
                "range": null,
                "title": "Enable compiler static analyzer",
                "type": "bool"
            }
        ],
        "depends_on": null,
        "id": "compiler-options",
        "title": "Compiler options",
        "type": "menu"
    },
    {
        "children": [
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "SOC_TWAI_SUPPORTED",
                                "help": "Place the TWAI ISR in to IRAM. This will allow the ISR to avoid\ncache misses, and also be able to run whilst the cache is disabled\n(such as when writing to SPI Flash).\nNote that if this option is enabled:\n- Users should also set the ESP_INTR_FLAG_IRAM in the driver\nconfiguration structure when installing the driver (see docs for\nspecifics).\n- Alert logging (i.e., setting of the TWAI_ALERT_AND_LOG flag)\nwill have no effect.",
                                "id": "TWAI_ISR_IN_IRAM",
                                "name": "TWAI_ISR_IN_IRAM",
                                "range": null,
                                "title": "Place TWAI ISR function into IRAM",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "IDF_TARGET_ESP32 && SOC_TWAI_SUPPORTED",
                                "help": "When the bus-off condition is reached, the REC should be reset to 0 and frozen (via LOM) by the\ndriver's ISR. However on the ESP32, there is an edge case where the REC will increase before the\ndriver's ISR can respond in time (e.g., due to the rapid occurrence of bus errors), thus causing the\nREC to be non-zero after bus-off. A non-zero REC can prevent bus-off recovery as the bus-off recovery\ncondition is that both TEC and REC become 0. Enabling this option will add a workaround in the driver\nto forcibly reset REC to zero on reaching bus-off.",
                                "id": "TWAI_ERRATA_FIX_BUS_OFF_REC",
                                "name": "TWAI_ERRATA_FIX_BUS_OFF_REC",
                                "range": null,
                                "title": "Add SW workaround for REC change during bus-off",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "IDF_TARGET_ESP32 && SOC_TWAI_SUPPORTED",
                                "help": "On the ESP32, when a transmit interrupt occurs, and interrupt register is read on the same APB clock\ncycle, the transmit interrupt could be lost. Enabling this option will add a workaround that checks the\ntransmit buffer status bit to recover any lost transmit interrupt.",
                                "id": "TWAI_ERRATA_FIX_TX_INTR_LOST",
                                "name": "TWAI_ERRATA_FIX_TX_INTR_LOST",
                                "range": null,
                                "title": "Add SW workaround for TX interrupt lost errata",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "IDF_TARGET_ESP32 && SOC_TWAI_SUPPORTED",
                                "help": "On the ESP32, when receiving a data or remote frame, if a bus error occurs in the data or CRC field,\nthe data of the next received frame could be invalid. Enabling this option will add a workaround that\nwill reset the peripheral on detection of this errata condition. Note that if a frame is transmitted on\nthe bus whilst the reset is ongoing, the message will not be receive by the peripheral sent on the bus\nduring the reset, the message will be lost.",
                                "id": "TWAI_ERRATA_FIX_RX_FRAME_INVALID",
                                "name": "TWAI_ERRATA_FIX_RX_FRAME_INVALID",
                                "range": null,
                                "title": "Add SW workaround for invalid RX frame errata",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "IDF_TARGET_ESP32 && SOC_TWAI_SUPPORTED",
                                "help": "On the ESP32, when the RX FIFO overruns and the RX message counter maxes out at 64 messages, the entire\nRX FIFO is no longer recoverable. Enabling this option will add a workaround that resets the peripheral\non detection of this errata condition. Note that if a frame is being sent on the bus during the reset\nbus during the reset, the message will be lost.",
                                "id": "TWAI_ERRATA_FIX_RX_FIFO_CORRUPT",
                                "name": "TWAI_ERRATA_FIX_RX_FIFO_CORRUPT",
                                "range": null,
                                "title": "Add SW workaround for RX FIFO corruption errata",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "(IDF_TARGET_ESP32 || IDF_TARGET_ESP32S2 || IDF_TARGET_ESP32S3 || IDF_TARGET_ESP32C3) && SOC_TWAI_SUPPORTED",
                                "help": "When in the listen only mode, the TWAI controller must not influence the TWAI bus (i.e., must not send\nany dominant bits). However, while in listen only mode on the ESP32/ESP32-S2/ESP32-S3/ESP32-C3, the\nTWAI controller will still transmit dominant bits when it detects an error (i.e., as part of an active\nerror frame). Enabling this option will add a workaround that forces the TWAI controller into an error\npassive state on initialization, thus preventing any dominant bits from being sent.",
                                "id": "TWAI_ERRATA_FIX_LISTEN_ONLY_DOM",
                                "name": "TWAI_ERRATA_FIX_LISTEN_ONLY_DOM",
                                "range": null,
                                "title": "Add SW workaround for listen only transmits dominant bit errata",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "SOC_TWAI_SUPPORTED",
                        "id": "component-config-driver-configurations-twai-configuration",
                        "title": "TWAI Configuration",
                        "type": "menu"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "SOC_DAC_SUPPORTED",
                                "help": "If this is set, the ADC2 driver will disable the output of the DAC corresponding to the specified\nchannel. This is the default value.\n\nFor testing, disable this option so that we can measure the output of DAC by internal ADC.",
                                "id": "ADC_DISABLE_DAC",
                                "name": "ADC_DISABLE_DAC",
                                "range": null,
                                "title": "Disable DAC when ADC2 is used on GPIO 25 and 26",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "Whether to suppress the deprecation warnings when using legacy adc driver (driver/adc.h).\nIf you want to continue using the legacy driver, and don't want to see related deprecation warnings,\nyou can enable this option.",
                                "id": "ADC_SUPPRESS_DEPRECATE_WARN",
                                "name": "ADC_SUPPRESS_DEPRECATE_WARN",
                                "range": null,
                                "title": "Suppress legacy driver deprecated warning",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "This configuration option allows the user to bypass the conflict check mechanism with legacy code.",
                                "id": "ADC_SKIP_LEGACY_CONFLICT_CHECK",
                                "name": "ADC_SKIP_LEGACY_CONFLICT_CHECK",
                                "range": null,
                                "title": "Skip legacy conflict check",
                                "type": "bool"
                            },
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": "IDF_TARGET_ESP32",
                                        "help": "Some ESP32s have Two Point calibration values burned into eFuse BLOCK3.\nThis option will allow the ADC calibration component to characterize the\nADC-Voltage curve using Two Point values if they are available.",
                                        "id": "ADC_CAL_EFUSE_TP_ENABLE",
                                        "name": "ADC_CAL_EFUSE_TP_ENABLE",
                                        "range": null,
                                        "title": "Use Two Point Values",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "IDF_TARGET_ESP32",
                                        "help": "Some ESP32s have Vref burned into eFuse BLOCK0. This option will allow\nthe ADC calibration component to characterize the ADC-Voltage curve using\neFuse Vref if it is available.",
                                        "id": "ADC_CAL_EFUSE_VREF_ENABLE",
                                        "name": "ADC_CAL_EFUSE_VREF_ENABLE",
                                        "range": null,
                                        "title": "Use eFuse Vref",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "IDF_TARGET_ESP32",
                                        "help": "This option will allow the ADC calibration component to use Lookup Tables\nto correct for non-linear behavior in 11db attenuation. Other attenuations\ndo not exhibit non-linear behavior hence will not be affected by this option.",
                                        "id": "ADC_CAL_LUT_ENABLE",
                                        "name": "ADC_CAL_LUT_ENABLE",
                                        "range": null,
                                        "title": "Use Lookup Tables",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": null,
                                        "help": "Whether to suppress the deprecation warnings when using legacy adc calibration\ndriver (esp_adc_cal.h).\nIf you want to continue using the legacy driver, and don't want to see related\ndeprecation warnings, you can enable this option.",
                                        "id": "ADC_CALI_SUPPRESS_DEPRECATE_WARN",
                                        "name": "ADC_CALI_SUPPRESS_DEPRECATE_WARN",
                                        "range": null,
                                        "title": "Suppress legacy driver deprecated warning",
                                        "type": "bool"
                                    }
                                ],
                                "depends_on": null,
                                "id": "component-config-driver-configurations-legacy-adc-driver-configuration-legacy-adc-calibration-configuration",
                                "title": "Legacy ADC Calibration Configuration",
                                "type": "menu"
                            }
                        ],
                        "depends_on": null,
                        "id": "component-config-driver-configurations-legacy-adc-driver-configuration",
                        "title": "Legacy ADC Driver Configuration",
                        "type": "menu"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "SOC_DAC_SUPPORTED",
                                "help": "Whether to suppress the deprecation warnings when using legacy dac driver (driver/dac.h).\nIf you want to continue using the legacy driver, and don't want to see related deprecation warnings,\nyou can enable this option.",
                                "id": "DAC_SUPPRESS_DEPRECATE_WARN",
                                "name": "DAC_SUPPRESS_DEPRECATE_WARN",
                                "range": null,
                                "title": "Suppress legacy driver deprecated warning",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "SOC_DAC_SUPPORTED",
                                "help": "This configuration option allows the user to bypass the conflict check mechanism with legacy code.",
                                "id": "DAC_SKIP_LEGACY_CONFLICT_CHECK",
                                "name": "DAC_SKIP_LEGACY_CONFLICT_CHECK",
                                "range": null,
                                "title": "Skip legacy conflict check",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "SOC_DAC_SUPPORTED",
                        "id": "component-config-driver-configurations-legacy-dac-driver-configurations",
                        "title": "Legacy DAC Driver Configurations",
                        "type": "menu"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "SOC_MCPWM_SUPPORTED",
                                "help": "Whether to suppress the deprecation warnings when using legacy MCPWM driver (driver/mcpwm.h).\nIf you want to continue using the legacy driver, and don't want to see related deprecation warnings,\nyou can enable this option.",
                                "id": "MCPWM_SUPPRESS_DEPRECATE_WARN",
                                "name": "MCPWM_SUPPRESS_DEPRECATE_WARN",
                                "range": null,
                                "title": "Suppress legacy driver deprecated warning",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "SOC_MCPWM_SUPPORTED",
                                "help": "This configuration option allows the user to bypass the conflict check mechanism with legacy code.",
                                "id": "MCPWM_SKIP_LEGACY_CONFLICT_CHECK",
                                "name": "MCPWM_SKIP_LEGACY_CONFLICT_CHECK",
                                "range": null,
                                "title": "Skip legacy conflict check",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "SOC_MCPWM_SUPPORTED",
                        "id": "component-config-driver-configurations-legacy-mcpwm-driver-configurations",
                        "title": "Legacy MCPWM Driver Configurations",
                        "type": "menu"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "SOC_GPTIMER_SUPPORTED",
                                "help": "Whether to suppress the deprecation warnings when using legacy timer group driver (driver/timer.h).\nIf you want to continue using the legacy driver, and don't want to see related deprecation warnings,\nyou can enable this option.",
                                "id": "GPTIMER_SUPPRESS_DEPRECATE_WARN",
                                "name": "GPTIMER_SUPPRESS_DEPRECATE_WARN",
                                "range": null,
                                "title": "Suppress legacy driver deprecated warning",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "SOC_GPTIMER_SUPPORTED",
                                "help": "This configuration option allows the user to bypass the conflict check mechanism with legacy code.",
                                "id": "GPTIMER_SKIP_LEGACY_CONFLICT_CHECK",
                                "name": "GPTIMER_SKIP_LEGACY_CONFLICT_CHECK",
                                "range": null,
                                "title": "Skip legacy conflict check",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "SOC_GPTIMER_SUPPORTED",
                        "id": "component-config-driver-configurations-legacy-timer-group-driver-configurations",
                        "title": "Legacy Timer Group Driver Configurations",
                        "type": "menu"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "SOC_RMT_SUPPORTED",
                                "help": "Whether to suppress the deprecation warnings when using legacy rmt driver (driver/rmt.h).\nIf you want to continue using the legacy driver, and don't want to see related deprecation warnings,\nyou can enable this option.",
                                "id": "RMT_SUPPRESS_DEPRECATE_WARN",
                                "name": "RMT_SUPPRESS_DEPRECATE_WARN",
                                "range": null,
                                "title": "Suppress legacy driver deprecated warning",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "SOC_RMT_SUPPORTED",
                                "help": "This configuration option allows the user to bypass the conflict check mechanism with legacy code.",
                                "id": "RMT_SKIP_LEGACY_CONFLICT_CHECK",
                                "name": "RMT_SKIP_LEGACY_CONFLICT_CHECK",
                                "range": null,
                                "title": "Skip legacy conflict check",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "SOC_RMT_SUPPORTED",
                        "id": "component-config-driver-configurations-legacy-rmt-driver-configurations",
                        "title": "Legacy RMT Driver Configurations",
                        "type": "menu"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "SOC_I2S_SUPPORTED",
                                "help": "Whether to suppress the deprecation warnings when using legacy i2s driver (driver/i2s.h).\nIf you want to continue using the legacy driver, and don't want to see related deprecation warnings,\nyou can enable this option.",
                                "id": "I2S_SUPPRESS_DEPRECATE_WARN",
                                "name": "I2S_SUPPRESS_DEPRECATE_WARN",
                                "range": null,
                                "title": "Suppress legacy driver deprecated warning",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "SOC_I2S_SUPPORTED",
                                "help": "This configuration option allows the user to bypass the conflict check mechanism with legacy code.",
                                "id": "I2S_SKIP_LEGACY_CONFLICT_CHECK",
                                "name": "I2S_SKIP_LEGACY_CONFLICT_CHECK",
                                "range": null,
                                "title": "Skip legacy conflict check",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "SOC_I2S_SUPPORTED",
                        "id": "component-config-driver-configurations-legacy-i2s-driver-configurations",
                        "title": "Legacy I2S Driver Configurations",
                        "type": "menu"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "SOC_PCNT_SUPPORTED",
                                "help": "whether to suppress the deprecation warnings when using legacy PCNT driver (driver/pcnt.h).\nIf you want to continue using the legacy driver, and don't want to see related deprecation warnings,\nyou can enable this option.",
                                "id": "PCNT_SUPPRESS_DEPRECATE_WARN",
                                "name": "PCNT_SUPPRESS_DEPRECATE_WARN",
                                "range": null,
                                "title": "Suppress legacy driver deprecated warning",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "SOC_PCNT_SUPPORTED",
                                "help": "This configuration option allows the user to bypass the conflict check mechanism with legacy code.",
                                "id": "PCNT_SKIP_LEGACY_CONFLICT_CHECK",
                                "name": "PCNT_SKIP_LEGACY_CONFLICT_CHECK",
                                "range": null,
                                "title": "Skip legacy conflict check",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "SOC_PCNT_SUPPORTED",
                        "id": "component-config-driver-configurations-legacy-pcnt-driver-configurations",
                        "title": "Legacy PCNT Driver Configurations",
                        "type": "menu"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "SOC_SDM_SUPPORTED",
                                "help": "whether to suppress the deprecation warnings when using legacy SDM driver (driver/sigmadelta.h).\nIf you want to continue using the legacy driver, and don't want to see related deprecation warnings,\nyou can enable this option.",
                                "id": "SDM_SUPPRESS_DEPRECATE_WARN",
                                "name": "SDM_SUPPRESS_DEPRECATE_WARN",
                                "range": null,
                                "title": "Suppress legacy driver deprecated warning",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "SOC_SDM_SUPPORTED",
                                "help": "This configuration option allows the user to bypass the conflict check mechanism with legacy code.",
                                "id": "SDM_SKIP_LEGACY_CONFLICT_CHECK",
                                "name": "SDM_SKIP_LEGACY_CONFLICT_CHECK",
                                "range": null,
                                "title": "Skip legacy conflict check",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "SOC_SDM_SUPPORTED",
                        "id": "component-config-driver-configurations-legacy-sdm-driver-configurations",
                        "title": "Legacy SDM Driver Configurations",
                        "type": "menu"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "SOC_TEMP_SENSOR_SUPPORTED",
                                "help": "whether to suppress the deprecation warnings when using legacy temperature sensor driver\n(driver/temp_sensor.h). If you want to continue using the legacy driver,\nand don't want to see related deprecation warnings, you can enable this option.",
                                "id": "TEMP_SENSOR_SUPPRESS_DEPRECATE_WARN",
                                "name": "TEMP_SENSOR_SUPPRESS_DEPRECATE_WARN",
                                "range": null,
                                "title": "Suppress legacy driver deprecated warning",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "SOC_TEMP_SENSOR_SUPPORTED",
                                "help": "This configuration option allows the user to bypass the conflict check mechanism with legacy code.",
                                "id": "TEMP_SENSOR_SKIP_LEGACY_CONFLICT_CHECK",
                                "name": "TEMP_SENSOR_SKIP_LEGACY_CONFLICT_CHECK",
                                "range": null,
                                "title": "Skip legacy conflict check",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "SOC_TEMP_SENSOR_SUPPORTED",
                        "id": "component-config-driver-configurations-legacy-temperature-sensor-driver-configurations",
                        "title": "Legacy Temperature Sensor Driver Configurations",
                        "type": "menu"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "SOC_TOUCH_SENSOR_SUPPORTED",
                                "help": "whether to suppress the deprecation warnings when using legacy touch sensor driver\n(driver/touch_sensor.h). If you want to continue using the legacy driver,\nand don't want to see related deprecation warnings, you can enable this option.",
                                "id": "TOUCH_SUPPRESS_DEPRECATE_WARN",
                                "name": "TOUCH_SUPPRESS_DEPRECATE_WARN",
                                "range": null,
                                "title": "Suppress legacy driver deprecated warning",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "SOC_TOUCH_SENSOR_SUPPORTED",
                                "help": "This configuration option allows the user to bypass the conflict check mechanism with legacy code.",
                                "id": "TOUCH_SKIP_LEGACY_CONFLICT_CHECK",
                                "name": "TOUCH_SKIP_LEGACY_CONFLICT_CHECK",
                                "range": null,
                                "title": "Skip legacy conflict check",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "SOC_TOUCH_SENSOR_SUPPORTED",
                        "id": "component-config-driver-configurations-legacy-touch-sensor-driver-configurations",
                        "title": "Legacy Touch Sensor Driver Configurations",
                        "type": "menu"
                    }
                ],
                "depends_on": null,
                "id": "component-config-driver-configurations",
                "title": "Driver Configurations",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "EFUSE_CUSTOM_TABLE",
                                "help": "Name of the custom eFuse CSV filename. This path is evaluated\nrelative to the project root directory.",
                                "id": "EFUSE_CUSTOM_TABLE_FILENAME",
                                "name": "EFUSE_CUSTOM_TABLE_FILENAME",
                                "range": null,
                                "title": "Custom eFuse CSV file",
                                "type": "string"
                            }
                        ],
                        "depends_on": null,
                        "help": "Allows to generate a structure for eFuse from the CSV file.",
                        "id": "EFUSE_CUSTOM_TABLE",
                        "name": "EFUSE_CUSTOM_TABLE",
                        "range": null,
                        "title": "Use custom eFuse table",
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "EFUSE_VIRTUAL && !IDF_TARGET_LINUX",
                                "help": "In addition to the \"Simulate eFuse operations in RAM\" option, this option just adds\na feature to keep eFuses after reboots in flash memory. To use this mode the partition_table\nshould have the `efuse` partition. partition.csv: \"efuse_em, data, efuse,   ,   0x2000,\"\n\nDuring startup, the eFuses are copied from flash or,\nin case if flash is empty, from real eFuse to RAM and then update flash.\nThis mode is useful when need to keep changes after reboot\n(testing secure_boot and flash_encryption).",
                                "id": "EFUSE_VIRTUAL_KEEP_IN_FLASH",
                                "name": "EFUSE_VIRTUAL_KEEP_IN_FLASH",
                                "range": null,
                                "title": "Keep eFuses in flash",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "EFUSE_VIRTUAL",
                                "help": "If enabled, log efuse burns. This shows changes that would be made.",
                                "id": "EFUSE_VIRTUAL_LOG_ALL_WRITES",
                                "name": "EFUSE_VIRTUAL_LOG_ALL_WRITES",
                                "range": null,
                                "title": "Log all virtual writes",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "help": "If \"n\" - No virtual mode. All eFuse operations are real and use eFuse registers.\nIf \"y\" - The virtual mode is enabled and all eFuse operations (read and write) are redirected\nto RAM instead of eFuse registers, all permanent changes (via eFuse) are disabled.\nLog output will state changes that would be applied, but they will not be.\n\nIf it is \"y\", then SECURE_FLASH_ENCRYPTION_MODE_RELEASE cannot be used.\nBecause the EFUSE VIRT mode is for testing only.\n\nDuring startup, the eFuses are copied into RAM. This mode is useful for fast tests.",
                        "id": "EFUSE_VIRTUAL",
                        "name": "EFUSE_VIRTUAL",
                        "range": null,
                        "title": "Simulate eFuse operations in RAM",
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "<choice EFUSE_CODE_SCHEME_SELECTOR>",
                                "help": null,
                                "id": "EFUSE_CODE_SCHEME_COMPAT_NONE",
                                "name": "EFUSE_CODE_SCHEME_COMPAT_NONE",
                                "range": null,
                                "title": "None Only",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice EFUSE_CODE_SCHEME_SELECTOR>",
                                "help": null,
                                "id": "EFUSE_CODE_SCHEME_COMPAT_3_4",
                                "name": "EFUSE_CODE_SCHEME_COMPAT_3_4",
                                "range": null,
                                "title": "3/4 and None",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice EFUSE_CODE_SCHEME_SELECTOR>",
                                "help": null,
                                "id": "EFUSE_CODE_SCHEME_COMPAT_REPEAT",
                                "name": "EFUSE_CODE_SCHEME_COMPAT_REPEAT",
                                "range": null,
                                "title": "Repeat, 3/4 and None (common table does not support it)",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "IDF_TARGET_ESP32",
                        "help": "Selector eFuse code scheme.",
                        "id": "component-config-efuse-bit-manager-coding-scheme-compatibility",
                        "name": "EFUSE_CODE_SCHEME_SELECTOR",
                        "title": "Coding Scheme Compatibility",
                        "type": "choice"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": null,
                        "id": "EFUSE_MAX_BLK_LEN",
                        "name": "EFUSE_MAX_BLK_LEN",
                        "range": null,
                        "title": null,
                        "type": "int"
                    }
                ],
                "depends_on": null,
                "id": "component-config-efuse-bit-manager",
                "title": "eFuse Bit Manager",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Place ISR version ADC oneshot mode read function into IRAM.",
                        "id": "ADC_ONESHOT_CTRL_FUNC_IN_IRAM",
                        "name": "ADC_ONESHOT_CTRL_FUNC_IN_IRAM",
                        "range": null,
                        "title": "Place ISR version ADC oneshot mode read function into IRAM",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "SOC_ADC_DMA_SUPPORTED",
                        "help": "Ensure the ADC continuous mode ISR is IRAM-Safe. When enabled, the ISR handler\nwill be available when the cache is disabled.",
                        "id": "ADC_CONTINUOUS_ISR_IRAM_SAFE",
                        "name": "ADC_CONTINUOUS_ISR_IRAM_SAFE",
                        "range": null,
                        "title": "ADC continuous mode driver ISR IRAM-Safe",
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "IDF_TARGET_ESP32",
                                "help": "Some ESP32s have Two Point calibration values burned into eFuse BLOCK3.\nThis option will allow the ADC calibration component to characterize the\nADC-Voltage curve using Two Point values if they are available.",
                                "id": "ADC_CALI_EFUSE_TP_ENABLE",
                                "name": "ADC_CALI_EFUSE_TP_ENABLE",
                                "range": null,
                                "title": "Use Two Point Values",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "IDF_TARGET_ESP32",
                                "help": "Some ESP32s have Vref burned into eFuse BLOCK0. This option will allow\nthe ADC calibration component to characterize the ADC-Voltage curve using\neFuse Vref if it is available.",
                                "id": "ADC_CALI_EFUSE_VREF_ENABLE",
                                "name": "ADC_CALI_EFUSE_VREF_ENABLE",
                                "range": null,
                                "title": "Use eFuse Vref",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "IDF_TARGET_ESP32",
                                "help": "This option will allow the ADC calibration component to use Lookup Tables\nto correct for non-linear behavior in 11db attenuation. Other attenuations\ndo not exhibit non-linear behavior hence will not be affected by this option.",
                                "id": "ADC_CALI_LUT_ENABLE",
                                "name": "ADC_CALI_LUT_ENABLE",
                                "range": null,
                                "title": "Use Lookup Tables",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "IDF_TARGET_ESP32",
                        "id": "component-config-adc-and-adc-calibration-adc-calibration-configurations",
                        "title": "ADC Calibration Configurations",
                        "type": "menu"
                    },
                    {
                        "children": [],
                        "depends_on": "SOC_DAC_SUPPORTED",
                        "help": "By default, this is set. The ADC oneshot driver will disable the output of the\ncorresponding DAC channels:\nESP32:   IO25 and IO26\nESP32S2: IO17 and IO18\n\nDisable this option so as to measure the output of DAC by internal ADC, for test usage.",
                        "id": "ADC_DISABLE_DAC_OUTPUT",
                        "name": "ADC_DISABLE_DAC_OUTPUT",
                        "range": null,
                        "title": "Disable DAC when ADC2 is in use",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "IDF_TARGET_ESP32C3 || IDF_TARGET_ESP32S3",
                        "help": "On ESP32C3 and ESP32S3, ADC2 Digital Controller is not stable. Therefore,\nADC2 continuous mode is not suggested on ESP32S3 and ESP32C3\n\nIf you stick to this, you can enable this option to force use ADC2 under above conditions.\nFor more details, you can search for errata on espressif website.",
                        "id": "ADC_CONTINUOUS_FORCE_USE_ADC2_ON_C3_S3",
                        "name": "ADC_CONTINUOUS_FORCE_USE_ADC2_ON_C3_S3",
                        "range": null,
                        "title": "Force use ADC2 continumous mode on ESP32S3 or ESP32C3",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "IDF_TARGET_ESP32C3",
                        "help": "On ESP32C3, ADC2 Digital Controller is not stable. Therefore,\nADC2 oneshot mode is not suggested on ESP32C3\n\nIf you stick to this, you can enable this option to force use ADC2 under above conditions.\nFor more details, you can search for errata on espressif website.",
                        "id": "ADC_ONESHOT_FORCE_USE_ADC2_ON_C3",
                        "name": "ADC_ONESHOT_FORCE_USE_ADC2_ON_C3",
                        "range": null,
                        "title": "Force use ADC2 oneshot mode on ESP32C3",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "whether to enable the debug log message for ADC driver.\nNote that this option only controls the ADC driver log, will not affect other drivers.\n\nnote: This cannot be used in the ADC legacy driver.",
                        "id": "ADC_ENABLE_DEBUG_LOG",
                        "name": "ADC_ENABLE_DEBUG_LOG",
                        "range": null,
                        "title": "Enable ADC debug log",
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "id": "component-config-adc-and-adc-calibration",
                "title": "ADC and ADC Calibration",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Functions esp_err_to_name() and esp_err_to_name_r() return string representations of error codes from a\npre-generated lookup table. This option can be used to turn off the use of the look-up table in order to\nsave memory but this comes at the price of sacrificing distinguishable (meaningful) output string\nrepresentations.",
                        "id": "ESP_ERR_TO_NAME_LOOKUP",
                        "name": "ESP_ERR_TO_NAME_LOOKUP",
                        "range": null,
                        "title": "Enable lookup of error code strings",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": null,
                        "id": "ESP_ALLOW_BSS_SEG_EXTERNAL_MEMORY",
                        "name": "ESP_ALLOW_BSS_SEG_EXTERNAL_MEMORY",
                        "range": null,
                        "title": null,
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "id": "component-config-common-esp-related",
                "title": "Common ESP-related",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "SOC_ANA_CMPR_SUPPORTED",
                        "help": "Ensure the Analog Comparator interrupt is IRAM-Safe by allowing the interrupt handler to be\nexecutable when the cache is disabled (e.g. SPI Flash write).",
                        "id": "ANA_CMPR_ISR_IRAM_SAFE",
                        "name": "ANA_CMPR_ISR_IRAM_SAFE",
                        "range": null,
                        "title": "Analog comparator ISR IRAM-Safe",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "SOC_ANA_CMPR_SUPPORTED",
                        "help": "Place Analog Comparator control functions (like ana_cmpr_set_internal_reference) into IRAM,\nso that these functions can be IRAM-safe and able to be called in an IRAM interrupt context.\nEnabling this option can improve driver performance as well.",
                        "id": "ANA_CMPR_CTRL_FUNC_IN_IRAM",
                        "name": "ANA_CMPR_CTRL_FUNC_IN_IRAM",
                        "range": null,
                        "title": "Place Analog Comparator control functions into IRAM",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "SOC_ANA_CMPR_SUPPORTED",
                        "help": "whether to enable the debug log message for Analog Comparator driver.\nNote that, this option only controls the Analog Comparator driver log, won't affect other drivers.",
                        "id": "ANA_CMPR_ENABLE_DEBUG_LOG",
                        "name": "ANA_CMPR_ENABLE_DEBUG_LOG",
                        "range": null,
                        "title": "Enable debug log",
                        "type": "bool"
                    }
                ],
                "depends_on": "SOC_ANA_CMPR_SUPPORTED",
                "id": "component-config-esp-driver-analog-comparator-configurations",
                "title": "ESP-Driver:Analog Comparator Configurations",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "SOC_DAC_SUPPORTED",
                        "help": "Place DAC control functions (e.g. 'dac_oneshot_output_voltage') into IRAM,\nso that this function can be IRAM-safe and able to be called in the other IRAM interrupt context.\nEnabling this option can improve driver performance as well.",
                        "id": "DAC_CTRL_FUNC_IN_IRAM",
                        "name": "DAC_CTRL_FUNC_IN_IRAM",
                        "range": null,
                        "title": "Place DAC control functions into IRAM",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "SOC_DAC_SUPPORTED",
                        "help": "Ensure the DAC interrupt is IRAM-Safe by allowing the interrupt handler to be\nexecutable when the cache is disabled (e.g. SPI Flash write).",
                        "id": "DAC_ISR_IRAM_SAFE",
                        "name": "DAC_ISR_IRAM_SAFE",
                        "range": null,
                        "title": "DAC ISR IRAM-Safe",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "SOC_DAC_SUPPORTED",
                        "help": "whether to enable the debug log message for DAC driver.\nNote that, this option only controls the DAC driver log, won't affect other drivers.",
                        "id": "DAC_ENABLE_DEBUG_LOG",
                        "name": "DAC_ENABLE_DEBUG_LOG",
                        "range": null,
                        "title": "Enable debug log",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "SOC_DAC_DMA_16BIT_ALIGN && SOC_DAC_SUPPORTED",
                        "help": "Whether to left shift the continuous data to align every bytes to 16 bits in the driver.\nOn ESP32, although the DAC resolution is only 8 bits,\nthe hardware requires 16 bits data in continuous mode.\nBy enabling this option, the driver will left shift 8 bits for the input data automatically.\nOnly disable this option when you decide to do this step by yourself.\nNote that the driver will allocate a new piece of memory to save the converted data.",
                        "id": "DAC_DMA_AUTO_16BIT_ALIGN",
                        "name": "DAC_DMA_AUTO_16BIT_ALIGN",
                        "range": null,
                        "title": "Align the continuous data to 16 bit automatically",
                        "type": "bool"
                    }
                ],
                "depends_on": "SOC_DAC_SUPPORTED",
                "id": "component-config-esp-driver-dac-configurations",
                "title": "ESP-Driver:DAC Configurations",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "IDF_TARGET_ESP32",
                        "help": "This option is intended to fix the bug that ESP32 is not able to switch to configured\npullup/pulldown mode in sleep.\nIf this option is selected, chip will automatically emulate the behaviour of switching,\nand about 450B of source codes would be placed into IRAM.",
                        "id": "GPIO_ESP32_SUPPORT_SWITCH_SLP_PULL",
                        "name": "GPIO_ESP32_SUPPORT_SWITCH_SLP_PULL",
                        "range": null,
                        "title": "Support light sleep GPIO pullup/pulldown configuration for ESP32",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Place GPIO control functions (like intr_disable/set_level) into IRAM,\nso that these functions can be IRAM-safe and able to be called in the other IRAM interrupt context.",
                        "id": "GPIO_CTRL_FUNC_IN_IRAM",
                        "name": "GPIO_CTRL_FUNC_IN_IRAM",
                        "range": null,
                        "title": "Place GPIO control functions into IRAM",
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "id": "component-config-esp-driver-gpio-configurations",
                "title": "ESP-Driver:GPIO Configurations",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "SOC_GPTIMER_SUPPORTED",
                        "help": "Place GPTimer ISR handler into IRAM for better performance and fewer cache misses.",
                        "id": "GPTIMER_ISR_HANDLER_IN_IRAM",
                        "name": "GPTIMER_ISR_HANDLER_IN_IRAM",
                        "range": null,
                        "title": "Place GPTimer ISR handler into IRAM",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "SOC_GPTIMER_SUPPORTED",
                        "help": "Place GPTimer control functions (like start/stop) into IRAM,\nso that these functions can be IRAM-safe and able to be called in the other IRAM interrupt context.\nEnabling this option can improve driver performance as well.",
                        "id": "GPTIMER_CTRL_FUNC_IN_IRAM",
                        "name": "GPTIMER_CTRL_FUNC_IN_IRAM",
                        "range": null,
                        "title": "Place GPTimer control functions into IRAM",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "SOC_GPTIMER_SUPPORTED",
                        "help": "Ensure the GPTimer interrupt is IRAM-Safe by allowing the interrupt handler to be\nexecutable when the cache is disabled (e.g. SPI Flash write).",
                        "id": "GPTIMER_ISR_IRAM_SAFE",
                        "name": "GPTIMER_ISR_IRAM_SAFE",
                        "range": null,
                        "title": "GPTimer ISR IRAM-Safe",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "SOC_GPTIMER_SUPPORTED",
                        "help": "whether to enable the debug log message for GPTimer driver.\nNote that, this option only controls the GPTimer driver log, won't affect other drivers.",
                        "id": "GPTIMER_ENABLE_DEBUG_LOG",
                        "name": "GPTIMER_ENABLE_DEBUG_LOG",
                        "range": null,
                        "title": "Enable debug log",
                        "type": "bool"
                    }
                ],
                "depends_on": "SOC_GPTIMER_SUPPORTED",
                "id": "component-config-esp-driver-gptimer-configurations",
                "title": "ESP-Driver:GPTimer Configurations",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "SOC_I2C_SUPPORTED",
                        "help": "Ensure the I2C interrupt is IRAM-Safe by allowing the interrupt handler to be\nexecutable when the cache is disabled (e.g. SPI Flash write).\nnote: This cannot be used in the I2C legacy driver.",
                        "id": "I2C_ISR_IRAM_SAFE",
                        "name": "I2C_ISR_IRAM_SAFE",
                        "range": null,
                        "title": "I2C ISR IRAM-Safe",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "SOC_I2C_SUPPORTED",
                        "help": "whether to enable the debug log message for I2C driver.\nNote that this option only controls the I2C driver log, will not affect other drivers.\n\nnote: This cannot be used in the I2C legacy driver.",
                        "id": "I2C_ENABLE_DEBUG_LOG",
                        "name": "I2C_ENABLE_DEBUG_LOG",
                        "range": null,
                        "title": "Enable I2C debug log",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "SOC_I2C_SUPPORTED",
                        "help": "I2C slave version 2 solves some existing known issues. Such as write/read workflow, stretch handling, etc.",
                        "id": "I2C_ENABLE_SLAVE_DRIVER_VERSION_2",
                        "name": "I2C_ENABLE_SLAVE_DRIVER_VERSION_2",
                        "range": null,
                        "title": "Enable I2C slave driver version 2",
                        "type": "bool"
                    }
                ],
                "depends_on": "SOC_I2C_SUPPORTED",
                "id": "component-config-esp-driver-i2c-configurations",
                "title": "ESP-Driver:I2C Configurations",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "SOC_I2S_SUPPORTED",
                        "help": "Ensure the I2S interrupt is IRAM-Safe by allowing the interrupt handler to be\nexecutable when the cache is disabled (e.g. SPI Flash write).",
                        "id": "I2S_ISR_IRAM_SAFE",
                        "name": "I2S_ISR_IRAM_SAFE",
                        "range": null,
                        "title": "I2S ISR IRAM-Safe",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "SOC_I2S_SUPPORTED",
                        "help": "whether to enable the debug log message for I2S driver.\nNote that, this option only controls the I2S driver log, will not affect other drivers.",
                        "id": "I2S_ENABLE_DEBUG_LOG",
                        "name": "I2S_ENABLE_DEBUG_LOG",
                        "range": null,
                        "title": "Enable I2S debug log",
                        "type": "bool"
                    }
                ],
                "depends_on": "SOC_I2S_SUPPORTED",
                "id": "component-config-esp-driver-i2s-configurations",
                "title": "ESP-Driver:I2S Configurations",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Place LEDC control functions (ledc_update_duty and ledc_stop) into IRAM,\nso that these functions can be IRAM-safe and able to be called in an IRAM context.\nEnabling this option can improve driver performance as well.",
                        "id": "LEDC_CTRL_FUNC_IN_IRAM",
                        "name": "LEDC_CTRL_FUNC_IN_IRAM",
                        "range": null,
                        "title": "Place LEDC control functions into IRAM",
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "id": "component-config-esp-driver-ledc-configurations",
                "title": "ESP-Driver:LEDC Configurations",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "SOC_MCPWM_SUPPORTED",
                        "help": "This will ensure the MCPWM interrupt handle is IRAM-Safe, allow to avoid flash\ncache misses, and also be able to run whilst the cache is disabled.\n(e.g. SPI Flash write)",
                        "id": "MCPWM_ISR_IRAM_SAFE",
                        "name": "MCPWM_ISR_IRAM_SAFE",
                        "range": null,
                        "title": "Place MCPWM ISR function into IRAM",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "SOC_MCPWM_SUPPORTED",
                        "help": "Place MCPWM control functions (like set_compare_value) into IRAM,\nso that these functions can be IRAM-safe and able to be called in the other IRAM interrupt context.\nEnabling this option can improve driver performance as well.",
                        "id": "MCPWM_CTRL_FUNC_IN_IRAM",
                        "name": "MCPWM_CTRL_FUNC_IN_IRAM",
                        "range": null,
                        "title": "Place MCPWM control functions into IRAM",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "SOC_MCPWM_SUPPORTED",
                        "help": "whether to enable the debug log message for MCPWM driver.\nNote that, this option only controls the MCPWM driver log, won't affect other drivers.",
                        "id": "MCPWM_ENABLE_DEBUG_LOG",
                        "name": "MCPWM_ENABLE_DEBUG_LOG",
                        "range": null,
                        "title": "Enable debug log",
                        "type": "bool"
                    }
                ],
                "depends_on": "SOC_MCPWM_SUPPORTED",
                "id": "component-config-esp-driver-mcpwm-configurations",
                "title": "ESP-Driver:MCPWM Configurations",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "SOC_PARLIO_SUPPORTED",
                        "help": "whether to enable the debug log message for parallel IO driver.\nNote that, this option only controls the parallel IO driver log, won't affect other drivers.",
                        "id": "PARLIO_ENABLE_DEBUG_LOG",
                        "name": "PARLIO_ENABLE_DEBUG_LOG",
                        "range": null,
                        "title": "Enable debug log",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "SOC_PARLIO_SUPPORTED",
                        "help": "Ensure the Parallel IO interrupt is IRAM-Safe by allowing the interrupt handler to be\nexecutable when the cache is disabled (e.g. SPI Flash write).",
                        "id": "PARLIO_ISR_IRAM_SAFE",
                        "name": "PARLIO_ISR_IRAM_SAFE",
                        "range": null,
                        "title": "Parallel IO ISR IRAM-Safe",
                        "type": "bool"
                    }
                ],
                "depends_on": "SOC_PARLIO_SUPPORTED",
                "id": "component-config-esp-driver-parallel-io-configurations",
                "title": "ESP-Driver:Parallel IO Configurations",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "SOC_PCNT_SUPPORTED",
                        "help": "Place PCNT control functions (like start/stop) into IRAM,\nso that these functions can be IRAM-safe and able to be called in the other IRAM interrupt context.\nEnabling this option can improve driver performance as well.",
                        "id": "PCNT_CTRL_FUNC_IN_IRAM",
                        "name": "PCNT_CTRL_FUNC_IN_IRAM",
                        "range": null,
                        "title": "Place PCNT control functions into IRAM",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "SOC_PCNT_SUPPORTED",
                        "help": "Ensure the PCNT interrupt is IRAM-Safe by allowing the interrupt handler to be\nexecutable when the cache is disabled (e.g. SPI Flash write).",
                        "id": "PCNT_ISR_IRAM_SAFE",
                        "name": "PCNT_ISR_IRAM_SAFE",
                        "range": null,
                        "title": "PCNT ISR IRAM-Safe",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "SOC_PCNT_SUPPORTED",
                        "help": "whether to enable the debug log message for PCNT driver.\nNote that, this option only controls the PCNT driver log, won't affect other drivers.",
                        "id": "PCNT_ENABLE_DEBUG_LOG",
                        "name": "PCNT_ENABLE_DEBUG_LOG",
                        "range": null,
                        "title": "Enable debug log",
                        "type": "bool"
                    }
                ],
                "depends_on": "SOC_PCNT_SUPPORTED",
                "id": "component-config-esp-driver-pcnt-configurations",
                "title": "ESP-Driver:PCNT Configurations",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "SOC_RMT_SUPPORTED",
                        "help": "Place RMT ISR handler into IRAM for better performance and fewer cache misses.",
                        "id": "RMT_ISR_HANDLER_IN_IRAM",
                        "name": "RMT_ISR_HANDLER_IN_IRAM",
                        "range": null,
                        "title": "Place RMT ISR handler into IRAM",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "SOC_RMT_SUPPORTED",
                        "help": "Place RMT receive function into IRAM for better performance and fewer cache misses.",
                        "id": "RMT_RECV_FUNC_IN_IRAM",
                        "name": "RMT_RECV_FUNC_IN_IRAM",
                        "range": null,
                        "title": "Place RMT receive function into IRAM",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "SOC_RMT_SUPPORTED",
                        "help": "Ensure the RMT interrupt is Cache-Safe by allowing the interrupt handler to be\nexecutable when the cache is disabled (e.g. SPI Flash write).",
                        "id": "RMT_ISR_CACHE_SAFE",
                        "name": "RMT_ISR_CACHE_SAFE",
                        "range": null,
                        "title": "RMT ISR Cache-Safe",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "SOC_RMT_SUPPORTED",
                        "help": "This will ensure the RMT object will not be allocated from a memory region\nwhere its cache can be disabled.",
                        "id": "RMT_OBJ_CACHE_SAFE",
                        "name": "RMT_OBJ_CACHE_SAFE",
                        "range": null,
                        "title": null,
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "SOC_RMT_SUPPORTED",
                        "help": "whether to enable the debug log message for RMT driver.\nNote that, this option only controls the RMT driver log, won't affect other drivers.",
                        "id": "RMT_ENABLE_DEBUG_LOG",
                        "name": "RMT_ENABLE_DEBUG_LOG",
                        "range": null,
                        "title": "Enable debug log",
                        "type": "bool"
                    }
                ],
                "depends_on": "SOC_RMT_SUPPORTED",
                "id": "component-config-esp-driver-rmt-configurations",
                "title": "ESP-Driver:RMT Configurations",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "SOC_SDM_SUPPORTED",
                        "help": "Place SDM control functions (like set_duty) into IRAM,\nso that these functions can be IRAM-safe and able to be called in the other IRAM interrupt context.\nEnabling this option can improve driver performance as well.",
                        "id": "SDM_CTRL_FUNC_IN_IRAM",
                        "name": "SDM_CTRL_FUNC_IN_IRAM",
                        "range": null,
                        "title": "Place SDM control functions into IRAM",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "SOC_SDM_SUPPORTED",
                        "help": "whether to enable the debug log message for SDM driver.\nNote that, this option only controls the SDM driver log, won't affect other drivers.",
                        "id": "SDM_ENABLE_DEBUG_LOG",
                        "name": "SDM_ENABLE_DEBUG_LOG",
                        "range": null,
                        "title": "Enable debug log",
                        "type": "bool"
                    }
                ],
                "depends_on": "SOC_SDM_SUPPORTED",
                "id": "component-config-esp-driver-sigma-delta-modulator-configurations",
                "title": "ESP-Driver:Sigma Delta Modulator Configurations",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "!FREERTOS_PLACE_FUNCTIONS_INTO_FLASH && SOC_GPSPI_SUPPORTED",
                        "help": "Normally only the ISR of SPI master is placed in the IRAM, so that it\ncan work without the flash when interrupt is triggered.\nFor other functions, there's some possibility that the flash cache\nmiss when running inside and out of SPI functions, which may increase\nthe interval of SPI transactions.\nEnable this to put ``queue_trans``, ``get_trans_result`` and\n``transmit`` functions into the IRAM to avoid possible cache miss.\n\nThis configuration won't be available if `CONFIG_FREERTOS_PLACE_FUNCTIONS_INTO_FLASH` is enabled.\n\nDuring unit test, this is enabled to measure the ideal case of api.",
                        "id": "SPI_MASTER_IN_IRAM",
                        "name": "SPI_MASTER_IN_IRAM",
                        "range": null,
                        "title": "Place transmitting functions of SPI master into IRAM",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "!HEAP_PLACE_FUNCTION_INTO_FLASH && SOC_GPSPI_SUPPORTED",
                        "help": "Place the SPI master ISR in to IRAM to avoid possible cache miss.\n\nEnabling this configuration is possible only when HEAP_PLACE_FUNCTION_INTO_FLASH\nis disabled since the spi master uses can allocate transactions buffers into DMA\nmemory section using the heap component API that ipso facto has to be placed in IRAM.\n\nAlso you can forbid the ISR being disabled during flash writing\naccess, by add ESP_INTR_FLAG_IRAM when initializing the driver.",
                        "id": "SPI_MASTER_ISR_IN_IRAM",
                        "name": "SPI_MASTER_ISR_IN_IRAM",
                        "range": null,
                        "title": "Place SPI master ISR function into IRAM",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "SOC_GPSPI_SUPPORTED",
                        "help": "Normally only the ISR of SPI slave is placed in the IRAM, so that it\ncan work without the flash when interrupt is triggered.\nFor other functions, there's some possibility that the flash cache\nmiss when running inside and out of SPI functions, which may increase\nthe interval of SPI transactions.\nEnable this to put ``queue_trans``, ``get_trans_result`` and\n``transmit`` functions into the IRAM to avoid possible cache miss.",
                        "id": "SPI_SLAVE_IN_IRAM",
                        "name": "SPI_SLAVE_IN_IRAM",
                        "range": null,
                        "title": "Place transmitting functions of SPI slave into IRAM",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "SOC_GPSPI_SUPPORTED",
                        "help": "Place the SPI slave ISR in to IRAM to avoid possible cache miss.\n\nAlso you can forbid the ISR being disabled during flash writing\naccess, by add ESP_INTR_FLAG_IRAM when initializing the driver.",
                        "id": "SPI_SLAVE_ISR_IN_IRAM",
                        "name": "SPI_SLAVE_ISR_IN_IRAM",
                        "range": null,
                        "title": "Place SPI slave ISR function into IRAM",
                        "type": "bool"
                    }
                ],
                "depends_on": "SOC_GPSPI_SUPPORTED",
                "id": "component-config-esp-driver-spi-configurations",
                "title": "ESP-Driver:SPI Configurations",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "SOC_TOUCH_SENSOR_SUPPORTED",
                        "help": "Place touch sensor oneshot scanning and continuous scanning functions into IRAM,\nso that these function can be IRAM-safe and able to be called when the flash cache is disabled.\nEnabling this option can improve driver performance as well.",
                        "id": "TOUCH_CTRL_FUNC_IN_IRAM",
                        "name": "TOUCH_CTRL_FUNC_IN_IRAM",
                        "range": null,
                        "title": "Place touch sensor control functions into IRAM",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "SOC_TOUCH_SENSOR_SUPPORTED",
                        "help": "Ensure the touch sensor interrupt is IRAM-Safe by allowing the interrupt handler to be\nexecutable when the cache is disabled (e.g. SPI Flash write).",
                        "id": "TOUCH_ISR_IRAM_SAFE",
                        "name": "TOUCH_ISR_IRAM_SAFE",
                        "range": null,
                        "title": "Touch sensor ISR IRAM-Safe",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "SOC_TOUCH_SENSOR_SUPPORTED",
                        "help": "Whether to enable the debug log message for touch driver.\nNote that, this option only controls the touch driver log, won't affect other drivers.",
                        "id": "TOUCH_ENABLE_DEBUG_LOG",
                        "name": "TOUCH_ENABLE_DEBUG_LOG",
                        "range": null,
                        "title": "Enable debug log",
                        "type": "bool"
                    }
                ],
                "depends_on": "SOC_TOUCH_SENSOR_SUPPORTED",
                "id": "component-config-esp-driver-touch-sensor-configurations",
                "title": "ESP-Driver:Touch Sensor Configurations",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "SOC_TEMP_SENSOR_SUPPORTED",
                        "help": "whether to enable the debug log message for temperature sensor driver.\nNote that, this option only controls the temperature sensor driver log, won't affect other drivers.",
                        "id": "TEMP_SENSOR_ENABLE_DEBUG_LOG",
                        "name": "TEMP_SENSOR_ENABLE_DEBUG_LOG",
                        "range": null,
                        "title": "Enable debug log",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "SOC_TEMPERATURE_SENSOR_INTR_SUPPORT && SOC_TEMP_SENSOR_SUPPORTED",
                        "help": "Ensure the Temperature Sensor interrupt is IRAM-Safe by allowing the interrupt handler to be\nexecutable when the cache is disabled (e.g. SPI Flash write).",
                        "id": "TEMP_SENSOR_ISR_IRAM_SAFE",
                        "name": "TEMP_SENSOR_ISR_IRAM_SAFE",
                        "range": null,
                        "title": "Temperature sensor ISR IRAM-Safe",
                        "type": "bool"
                    }
                ],
                "depends_on": "SOC_TEMP_SENSOR_SUPPORTED",
                "id": "component-config-esp-driver-temperature-sensor-configurations",
                "title": "ESP-Driver:Temperature Sensor Configurations",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "!RINGBUF_PLACE_ISR_FUNCTIONS_INTO_FLASH",
                        "help": "If this option is not selected, UART interrupt will be disabled for a long time and\nmay cause data lost when doing spi flash operation.",
                        "id": "UART_ISR_IN_IRAM",
                        "name": "UART_ISR_IN_IRAM",
                        "range": null,
                        "title": "Place UART ISR function into IRAM",
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "id": "component-config-esp-driver-uart-configurations",
                "title": "ESP-Driver:UART Configurations",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "PM_ENABLE && ESP_CONSOLE_USB_SERIAL_JTAG_ENABLED && !SOC_USB_SERIAL_JTAG_SUPPORT_LIGHT_SLEEP && USJ_ENABLE_USB_SERIAL_JTAG && SOC_USB_SERIAL_JTAG_SUPPORTED",
                                "help": "If enabled, the chip will constantly monitor the connection status of the USB Serial/JTAG port. As long\nas the USB Serial/JTAG is connected, a ESP_PM_NO_LIGHT_SLEEP power management lock will be acquired to\nprevent the system from entering light sleep.\nThis option can be useful if serial monitoring is needed via USB Serial/JTAG while power management is\nenabled, as the USB Serial/JTAG cannot work under light sleep and after waking up from light sleep.\nNote. This option can only control the automatic Light-Sleep behavior. If esp_light_sleep_start() is\ncalled manually from the program, enabling this option will not prevent light sleep entry even if the\nUSB Serial/JTAG is in use.",
                                "id": "USJ_NO_AUTO_LS_ON_CONNECTION",
                                "name": "USJ_NO_AUTO_LS_ON_CONNECTION",
                                "range": null,
                                "title": "Don't enter the automatic light sleep when USB Serial/JTAG port is connected",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "SOC_USB_SERIAL_JTAG_SUPPORTED",
                        "help": "The USB-Serial-JTAG module on ESP chips is turned on by default after power-on.\nIf your application does not need it and not rely on it to be used as system\nconsole or use the built-in JTAG for debugging, you can disable this option,\nthen the clock of this module will be disabled at startup, which will save\nsome power consumption.",
                        "id": "USJ_ENABLE_USB_SERIAL_JTAG",
                        "name": "USJ_ENABLE_USB_SERIAL_JTAG",
                        "range": null,
                        "title": "Enable USB-Serial-JTAG Module",
                        "type": "bool"
                    }
                ],
                "depends_on": "SOC_USB_SERIAL_JTAG_SUPPORTED",
                "id": "component-config-esp-driver-usb-serial-jtag-configuration",
                "title": "ESP-Driver:USB Serial/JTAG Configuration",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": "<choice ESP32_REV_MIN>",
                                        "help": null,
                                        "id": "ESP32_REV_MIN_0",
                                        "name": "ESP32_REV_MIN_0",
                                        "range": null,
                                        "title": "Rev v0.0 (ECO0)",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "<choice ESP32_REV_MIN>",
                                        "help": null,
                                        "id": "ESP32_REV_MIN_1",
                                        "name": "ESP32_REV_MIN_1",
                                        "range": null,
                                        "title": "Rev v1.0 (ECO1)",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "<choice ESP32_REV_MIN>",
                                        "help": null,
                                        "id": "ESP32_REV_MIN_1_1",
                                        "name": "ESP32_REV_MIN_1_1",
                                        "range": null,
                                        "title": "Rev v1.1 (ECO1.1)",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "<choice ESP32_REV_MIN>",
                                        "help": null,
                                        "id": "ESP32_REV_MIN_2",
                                        "name": "ESP32_REV_MIN_2",
                                        "range": null,
                                        "title": "Rev v2.0 (ECO2)",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "<choice ESP32_REV_MIN>",
                                        "help": null,
                                        "id": "ESP32_REV_MIN_3",
                                        "name": "ESP32_REV_MIN_3",
                                        "range": null,
                                        "title": "Rev v3.0 (ECO3)",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "<choice ESP32_REV_MIN>",
                                        "help": null,
                                        "id": "ESP32_REV_MIN_3_1",
                                        "name": "ESP32_REV_MIN_3_1",
                                        "range": null,
                                        "title": "Rev v3.1 (ECO4)",
                                        "type": "bool"
                                    }
                                ],
                                "depends_on": null,
                                "help": "Required minimum chip revision. ESP-IDF will check for it and\nreject to boot if the chip revision fails the check.\nThis ensures the chip used will have some modifications (features, or bugfixes).\n\nThe complied binary will only support chips above this revision,\nthis will also help to reduce binary size.",
                                "id": "component-config-hardware-settings-chip-revision-minimum-supported-esp32-revision",
                                "name": "ESP32_REV_MIN",
                                "title": "Minimum Supported ESP32 Revision",
                                "type": "choice"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": null,
                                "id": "ESP32_REV_MIN",
                                "name": "ESP32_REV_MIN",
                                "range": null,
                                "title": null,
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": null,
                                "id": "ESP32_REV_MIN_FULL",
                                "name": "ESP32_REV_MIN_FULL",
                                "range": null,
                                "title": null,
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": null,
                                "id": "ESP_REV_MIN_FULL",
                                "name": "ESP_REV_MIN_FULL",
                                "range": null,
                                "title": null,
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": null,
                                "id": "ESP32_REV_MAX_FULL",
                                "name": "ESP32_REV_MAX_FULL",
                                "range": null,
                                "title": null,
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": null,
                                "id": "ESP_REV_MAX_FULL",
                                "name": "ESP_REV_MAX_FULL",
                                "range": null,
                                "title": null,
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "Required minimum eFuse Block revision. ESP-IDF will check it at the 2nd bootloader stage\nwhether the current image can work correctly for this eFuse Block revision.\nSo that to avoid running an incompatible image on a SoC that contains breaking change in the eFuse Block.\nIf you want to update this value to run the image that not compatible with the current eFuse Block revision,\nplease contact to Espressif's business team for details:\nhttps://www.espressif.com.cn/en/contact-us/sales-questions",
                                "id": "ESP_EFUSE_BLOCK_REV_MIN_FULL",
                                "name": "ESP_EFUSE_BLOCK_REV_MIN_FULL",
                                "range": null,
                                "title": "Minimum Supported ESP32 eFuse Block Revision",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": null,
                                "id": "ESP_EFUSE_BLOCK_REV_MAX_FULL",
                                "name": "ESP_EFUSE_BLOCK_REV_MAX_FULL",
                                "range": null,
                                "title": null,
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": "IDF_CI_BUILD",
                                "help": "For internal chip testing, a small number of new versions chips didn't\nupdate the version field in eFuse, you can enable this option to force the\nsoftware recognize the chip version based on the rev selected in menuconfig.",
                                "id": "ESP_REV_NEW_CHIP_TEST",
                                "name": "ESP_REV_NEW_CHIP_TEST",
                                "range": null,
                                "title": "Internal test mode",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "id": "component-config-hardware-settings-chip-revision",
                        "title": "Chip revision",
                        "type": "menu"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": null,
                                "help": null,
                                "id": "ESP_MAC_ADDR_UNIVERSE_WIFI_STA",
                                "name": "ESP_MAC_ADDR_UNIVERSE_WIFI_STA",
                                "range": null,
                                "title": null,
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": null,
                                "id": "ESP_MAC_ADDR_UNIVERSE_WIFI_AP",
                                "name": "ESP_MAC_ADDR_UNIVERSE_WIFI_AP",
                                "range": null,
                                "title": null,
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": null,
                                "id": "ESP_MAC_ADDR_UNIVERSE_BT",
                                "name": "ESP_MAC_ADDR_UNIVERSE_BT",
                                "range": null,
                                "title": null,
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": null,
                                "id": "ESP_MAC_ADDR_UNIVERSE_ETH",
                                "name": "ESP_MAC_ADDR_UNIVERSE_ETH",
                                "range": null,
                                "title": null,
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": null,
                                "id": "ESP_MAC_ADDR_UNIVERSE_IEEE802154",
                                "name": "ESP_MAC_ADDR_UNIVERSE_IEEE802154",
                                "range": null,
                                "title": null,
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": null,
                                "id": "ESP_MAC_UNIVERSAL_MAC_ADDRESSES_ONE",
                                "name": "ESP_MAC_UNIVERSAL_MAC_ADDRESSES_ONE",
                                "range": null,
                                "title": null,
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": null,
                                "id": "ESP_MAC_UNIVERSAL_MAC_ADDRESSES_TWO",
                                "name": "ESP_MAC_UNIVERSAL_MAC_ADDRESSES_TWO",
                                "range": null,
                                "title": null,
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": null,
                                "id": "ESP_MAC_UNIVERSAL_MAC_ADDRESSES_FOUR",
                                "name": "ESP_MAC_UNIVERSAL_MAC_ADDRESSES_FOUR",
                                "range": null,
                                "title": null,
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": null,
                                "id": "ESP_MAC_UNIVERSAL_MAC_ADDRESSES",
                                "name": "ESP_MAC_UNIVERSAL_MAC_ADDRESSES",
                                "range": null,
                                "title": null,
                                "type": "int"
                            },
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": "<choice ESP32_UNIVERSAL_MAC_ADDRESSES>",
                                        "help": null,
                                        "id": "ESP32_UNIVERSAL_MAC_ADDRESSES_TWO",
                                        "name": "ESP32_UNIVERSAL_MAC_ADDRESSES_TWO",
                                        "range": null,
                                        "title": "Two",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "<choice ESP32_UNIVERSAL_MAC_ADDRESSES>",
                                        "help": null,
                                        "id": "ESP32_UNIVERSAL_MAC_ADDRESSES_FOUR",
                                        "name": "ESP32_UNIVERSAL_MAC_ADDRESSES_FOUR",
                                        "range": null,
                                        "title": "Four",
                                        "type": "bool"
                                    }
                                ],
                                "depends_on": null,
                                "help": "Configure the number of universally administered (by IEEE) MAC addresses.\nDuring initialization, MAC addresses for each network interface are generated or derived from a\nsingle base MAC address.\nIf the number of universal MAC addresses is four, all four interfaces (WiFi station, WiFi softap,\nBluetooth and Ethernet) receive a universally administered MAC address. These are generated\nsequentially by adding 0, 1, 2 and 3 (respectively) to the final octet of the base MAC address.\nIf the number of universal MAC addresses is two, only two interfaces (WiFi station and Bluetooth)\nreceive a universally administered MAC address. These are generated sequentially by adding 0\nand 1 (respectively) to the base MAC address. The remaining two interfaces (WiFi softap and Ethernet)\nreceive local MAC addresses. These are derived from the universal WiFi station and Bluetooth MAC\naddresses, respectively.\nWhen using the default (Espressif-assigned) base MAC address, either setting can be used. When using\na custom universal MAC address range, the correct setting will depend on the allocation of MAC\naddresses in this range (either 2 or 4 per device.)",
                                "id": "component-config-hardware-settings-mac-config-number-of-universally-administered-by-ieee-mac-address",
                                "name": "ESP32_UNIVERSAL_MAC_ADDRESSES",
                                "title": "Number of universally administered (by IEEE) MAC address",
                                "type": "choice"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": null,
                                "id": "ESP32_UNIVERSAL_MAC_ADDRESSES",
                                "name": "ESP32_UNIVERSAL_MAC_ADDRESSES",
                                "range": null,
                                "title": null,
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": "IDF_TARGET_ESP32",
                                "help": "If you have an invalid MAC CRC (ESP_ERR_INVALID_CRC) problem\nand you still want to use this chip, you can enable this option to bypass such an error.\nThis applies to both MAC_FACTORY and CUSTOM_MAC efuses.",
                                "id": "ESP_MAC_IGNORE_MAC_CRC_ERROR",
                                "name": "ESP_MAC_IGNORE_MAC_CRC_ERROR",
                                "range": null,
                                "title": "Ignore MAC CRC error (not recommended)",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "When this configuration is enabled, the user can invoke `esp_read_mac` to obtain the desired type of\nMAC using a custom MAC as the base MAC.",
                                "id": "ESP_MAC_USE_CUSTOM_MAC_AS_BASE_MAC",
                                "name": "ESP_MAC_USE_CUSTOM_MAC_AS_BASE_MAC",
                                "range": null,
                                "title": "Enable using custom mac as base mac",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "id": "component-config-hardware-settings-mac-config",
                        "title": "MAC Config",
                        "type": "menu"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "(!SPIRAM || ESP_LDO_RESERVE_PSRAM) && !(IDF_TARGET_ESP32P4 && ESP32P4_REV_MIN_FULL < 100)",
                                "help": "If enabled, chip will try to power down flash as part of esp_light_sleep_start(), which costs\nmore time when chip wakes up. Can only be enabled if there is no SPIRAM configured.\n\nThis option will power down flash under a strict but relatively safe condition. Also, it is possible to\npower down flash under a relaxed condition by using esp_sleep_pd_config() to set ESP_PD_DOMAIN_VDDSDIO\nto ESP_PD_OPTION_OFF. It should be noted that there is a risk in powering down flash, you can refer\n`ESP-IDF Programming Guide/API Reference/System API/Sleep Modes/Power-down of Flash` for more details.",
                                "id": "ESP_SLEEP_POWER_DOWN_FLASH",
                                "name": "ESP_SLEEP_POWER_DOWN_FLASH",
                                "range": null,
                                "title": "Power down flash in light sleep when there is no SPIRAM or SPIRAM has independent power supply",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "!APP_BUILD_TYPE_PURE_RAM_APP",
                                "help": "All IOs will be set to isolate(floating) state by default during sleep.\nSince the power supply of SPI Flash is not lost during lightsleep, if its CS pin is recognized as\nlow level(selected state) in the floating state, there will be a large current leakage, and the\ndata in Flash may be corrupted by random signals on other SPI pins.\nSelect this option will set the CS pin of Flash to PULL-UP state during sleep, but this will\nincrease the sleep current about 10 uA.\nIf you are developing with esp32xx modules, you must select this option, but if you are developing\nwith chips, you can also pull up the CS pin of SPI Flash in the external circuit to save power\nconsumption caused by internal pull-up during sleep.\n(!!! Don't deselect this option if you don't have external SPI Flash CS pin pullups.)",
                                "id": "ESP_SLEEP_FLASH_LEAKAGE_WORKAROUND",
                                "name": "ESP_SLEEP_FLASH_LEAKAGE_WORKAROUND",
                                "range": null,
                                "title": "Pull-up Flash CS pin in light sleep",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "SPIRAM",
                                "help": "All IOs will be set to isolate(floating) state by default during sleep.\nSince the power supply of PSRAM is not lost during lightsleep, if its CS pin is recognized as\nlow level(selected state) in the floating state, there will be a large current leakage, and the\ndata in PSRAM may be corrupted by random signals on other SPI pins.\nSelect this option will set the CS pin of PSRAM to PULL-UP state during sleep, but this will\nincrease the sleep current about 10 uA.\nIf you are developing with esp32xx modules, you must select this option, but if you are developing\nwith chips, you can also pull up the CS pin of PSRAM in the external circuit to save power\nconsumption caused by internal pull-up during sleep.\n(!!! Don't deselect this option if you don't have external PSRAM CS pin pullups.)",
                                "id": "ESP_SLEEP_PSRAM_LEAKAGE_WORKAROUND",
                                "name": "ESP_SLEEP_PSRAM_LEAKAGE_WORKAROUND",
                                "range": null,
                                "title": "Pull-up PSRAM CS pin in light sleep",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "ESP_SLEEP_PSRAM_LEAKAGE_WORKAROUND || ESP_SLEEP_FLASH_LEAKAGE_WORKAROUND",
                                "help": "To reduce leakage current, some types of SPI Flash/RAM only need to pull up the CS pin\nduring light sleep. But there are also some kinds of SPI Flash/RAM that need to pull up\nall pins. It depends on the SPI Flash/RAM chip used.",
                                "id": "ESP_SLEEP_MSPI_NEED_ALL_IO_PU",
                                "name": "ESP_SLEEP_MSPI_NEED_ALL_IO_PU",
                                "range": null,
                                "title": "Pull-up all SPI pins in light sleep",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": null,
                                "id": "ESP_SLEEP_RTC_BUS_ISO_WORKAROUND",
                                "name": "ESP_SLEEP_RTC_BUS_ISO_WORKAROUND",
                                "range": null,
                                "title": null,
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "esp32c2, esp32c3, esp32s3, esp32c5, esp32c6 and esp32h2 will reset at wake-up if GPIO is received\na small electrostatic pulse during light sleep, with specific condition\n\n- GPIO needs to be configured as input-mode only\n- The pin receives a small electrostatic pulse, and reset occurs when the pulse\n  voltage is higher than 6 V\n\nFor GPIO set to input mode only, it is not a good practice to leave it open/floating,\nThe hardware design needs to controlled it with determined supply or ground voltage\nis necessary.\n\nThis option provides a software workaround for this issue. Configure to isolate all\nGPIO pins in sleep state.",
                                "id": "ESP_SLEEP_GPIO_RESET_WORKAROUND",
                                "name": "ESP_SLEEP_GPIO_RESET_WORKAROUND",
                                "range": null,
                                "title": "light sleep GPIO reset workaround",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "When the chip exits sleep, the CPU and the flash chip are powered on at the same time.\nCPU will run rom code (deepsleep) or ram code (lightsleep) first, and then load or execute\ncode from flash.\n\nSome flash chips need sufficient time to pass between power on and first read operation.\nBy default, without any extra delay, this time is approximately 900us, although\nsome flash chip types need more than that.\n\n(!!! Please adjust this value according to the Data Sheet of SPI Flash used in your project.)\nIn Flash Data Sheet, the parameters that define the Flash ready timing after power-up (minimum\ntime from Vcc(min) to CS activeare) usually named tVSL in ELECTRICAL CHARACTERISTICS chapter,\nand the configuration value here should be:\nESP_SLEEP_WAIT_FLASH_READY_EXTRA_DELAY = tVSL - 900\n\nFor esp32 and esp32s3, the default extra delay is set to 2000us. When optimizing startup time\nfor applications which require it, this value may be reduced.\n\nIf you are seeing \"flash read err, 1000\" message printed to the console after deep sleep reset\non esp32, or triggered RTC_WDT/LP_WDT after lightsleep wakeup, try increasing this value.\n(For esp32, the delay will be executed in both deep sleep and light sleep wake up flow.\nFor chips after esp32, the delay will be executed only in light sleep flow, the delay\ncontrolled by the EFUSE_FLASH_TPUW in ROM will be executed in deepsleep wake up flow.)",
                                "id": "ESP_SLEEP_WAIT_FLASH_READY_EXTRA_DELAY",
                                "name": "ESP_SLEEP_WAIT_FLASH_READY_EXTRA_DELAY",
                                "range": [
                                    0,
                                    5000
                                ],
                                "title": "Extra delay (in us) after flash powerdown sleep wakeup to wait flash ready",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "Enabling it will check the cache safety of the code before the flash power is ready after\nlight sleep wakeup, and check PM_SLP_IRAM_OPT related code cache safety. This option is\nonly for code quality inspection. Enabling it will increase the time overhead of entering\nand exiting sleep. It is not recommended to enable it in the release version.",
                                "id": "ESP_SLEEP_CACHE_SAFE_ASSERTION",
                                "name": "ESP_SLEEP_CACHE_SAFE_ASSERTION",
                                "range": null,
                                "title": "Check the cache safety of the sleep wakeup code in sleep process",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "Enable esp sleep debug.",
                                "id": "ESP_SLEEP_DEBUG",
                                "name": "ESP_SLEEP_DEBUG",
                                "range": null,
                                "title": "esp sleep debug",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "When using rtc gpio wakeup source during deepsleep without external pull-up/downs, you may want to\nmake use of the internal ones.",
                                "id": "ESP_SLEEP_GPIO_ENABLE_INTERNAL_RESISTORS",
                                "name": "ESP_SLEEP_GPIO_ENABLE_INTERNAL_RESISTORS",
                                "range": null,
                                "title": "Allow to enable internal pull-up/downs for the Deep-Sleep wakeup IOs",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "FREERTOS_USE_TICKLESS_IDLE",
                                "help": "If enabled, it allows user to register sleep event callbacks. It is primarily designed for internal\ndevelopers and customers can use PM_LIGHT_SLEEP_CALLBACKS as an alternative.\n\nNOTE: These callbacks are executed from the IDLE task context hence you cannot have any blocking calls\nin your callbacks.\n\nNOTE: Enabling these callbacks may change sleep duration calculations based on time spent in\ncallback and hence it is highly recommended to keep them as short as possible.",
                                "id": "ESP_SLEEP_EVENT_CALLBACKS",
                                "name": "ESP_SLEEP_EVENT_CALLBACKS",
                                "range": null,
                                "title": "Enable registration of sleep event callbacks",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "id": "component-config-hardware-settings-sleep-config",
                        "title": "Sleep Config",
                        "type": "menu"
                    },
                    {
                        "children": [
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": "<choice RTC_CLK_SRC>",
                                        "help": null,
                                        "id": "RTC_CLK_SRC_INT_RC",
                                        "name": "RTC_CLK_SRC_INT_RC",
                                        "range": null,
                                        "title": "Internal 150 kHz RC oscillator",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "<choice RTC_CLK_SRC>",
                                        "help": null,
                                        "id": "RTC_CLK_SRC_EXT_CRYS",
                                        "name": "RTC_CLK_SRC_EXT_CRYS",
                                        "range": null,
                                        "title": "External 32kHz crystal",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "<choice RTC_CLK_SRC>",
                                        "help": null,
                                        "id": "RTC_CLK_SRC_EXT_OSC",
                                        "name": "RTC_CLK_SRC_EXT_OSC",
                                        "range": null,
                                        "title": "External 32kHz oscillator at 32K_XN pin",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "<choice RTC_CLK_SRC>",
                                        "help": null,
                                        "id": "RTC_CLK_SRC_INT_8MD256",
                                        "name": "RTC_CLK_SRC_INT_8MD256",
                                        "range": null,
                                        "title": "Internal 8.5MHz oscillator, divided by 256 (~33kHz)",
                                        "type": "bool"
                                    }
                                ],
                                "depends_on": null,
                                "help": "Choose which clock is used as RTC clock source.\n\n- \"Internal 150kHz oscillator\" option provides lowest deep sleep current\n    consumption, and does not require extra external components. However\n    frequency stability with respect to temperature is poor, so time may\n    drift in deep/light sleep modes.\n- \"External 32kHz crystal\" provides better frequency stability, at the\n    expense of slightly higher (1uA) deep sleep current consumption.\n- \"External 32kHz oscillator\" allows using 32kHz clock generated by an\n    external circuit. In this case, external clock signal must be connected\n    to 32K_XN pin. Amplitude should be <1.2V in case of sine wave signal,\n    and <1V in case of square wave signal. Common mode voltage should be\n    0.1 < Vcm < 0.5Vamp, where Vamp is the signal amplitude.\n    Additionally, 1nF capacitor must be connected between 32K_XP pin and\n    ground. 32K_XP pin can not be used as a GPIO in this case.\n- \"Internal 8.5MHz oscillator divided by 256\" option results in higher\n    deep sleep current (by 5uA) but has better frequency stability than\n    the internal 150kHz oscillator. It does not require external components.",
                                "id": "component-config-hardware-settings-rtc-clock-config-rtc-clock-source",
                                "name": "RTC_CLK_SRC",
                                "title": "RTC clock source",
                                "type": "choice"
                            },
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": "<choice RTC_EXT_CRYST_ADDIT_CURRENT_METHOD>",
                                        "help": null,
                                        "id": "RTC_EXT_CRYST_ADDIT_CURRENT_NONE",
                                        "name": "RTC_EXT_CRYST_ADDIT_CURRENT_NONE",
                                        "range": null,
                                        "title": "None",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "<choice RTC_EXT_CRYST_ADDIT_CURRENT_METHOD>",
                                        "help": null,
                                        "id": "RTC_EXT_CRYST_ADDIT_CURRENT",
                                        "name": "RTC_EXT_CRYST_ADDIT_CURRENT",
                                        "range": null,
                                        "title": "Method 1",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "<choice RTC_EXT_CRYST_ADDIT_CURRENT_METHOD>",
                                        "help": null,
                                        "id": "RTC_EXT_CRYST_ADDIT_CURRENT_V2",
                                        "name": "RTC_EXT_CRYST_ADDIT_CURRENT_V2",
                                        "range": null,
                                        "title": "Method 2",
                                        "type": "bool"
                                    }
                                ],
                                "depends_on": "RTC_CLK_SRC_EXT_CRYS && ESP32_REV_MIN_FULL < 200",
                                "help": "With some 32kHz crystal configurations, the X32N and X32P pins may not have enough\ndrive strength to keep the crystal oscillating. Choose the method to provide\nadditional current from touchpad 9 to the external 32kHz crystal. Note that\nthe deep sleep current is slightly high (4-5uA) and the touchpad and the\nwakeup sources of both touchpad and ULP are not available in method 1 and method 2.\n\nThis problem is fixed in ESP32 ECO 3, so this workaround is not needed. Setting the\nproject configuration to minimum revision ECO3 will disable this option, , allow\nall wakeup sources, and save some code size.\n\n- \"None\" option will not provide additional current to external crystal\n- \"Method 1\" option can't ensure 100% to solve the external 32k crystal start failed\n    issue, but the touchpad can work in this method.\n- \"Method 2\" option can solve the external 32k issue, but the touchpad can't work\n    in this method.",
                                "id": "component-config-hardware-settings-rtc-clock-config-additional-current-for-external-32khz-crystal",
                                "name": "RTC_EXT_CRYST_ADDIT_CURRENT_METHOD",
                                "title": "Additional current for external 32kHz crystal",
                                "type": "choice"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "When the startup code initializes RTC_SLOW_CLK, it can perform\ncalibration by comparing the RTC_SLOW_CLK frequency with main XTAL\nfrequency. This option sets the number of RTC_SLOW_CLK cycles measured\nby the calibration routine. Higher numbers increase calibration\nprecision, which may be important for applications which spend a lot of\ntime in deep sleep. Lower numbers reduce startup time.\n\nWhen this option is set to 0, clock calibration will not be performed at\nstartup, and approximate clock frequencies will be assumed:\n\n- 150000 Hz if internal RC oscillator is used as clock source. For this use value 1024.\n- 32768 Hz if the 32k crystal oscillator is used. For this use value 3000 or more.\n    In case more value will help improve the definition of the launch of the crystal.\n    If the crystal could not start, it will be switched to internal RC.",
                                "id": "RTC_CLK_CAL_CYCLES",
                                "name": "RTC_CLK_CAL_CYCLES",
                                "range": [
                                    0,
                                    32766
                                ],
                                "title": "Number of cycles for RTC_SLOW_CLK calibration",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": "RTC_CLK_SRC_EXT_CRYS",
                                "help": "Number of attempts to repeat 32k XTAL calibration\nbefore giving up and switching to the internal RC.\nIncrease this option if the 32k crystal oscillator\ndoes not start and switches to internal RC.",
                                "id": "RTC_XTAL_CAL_RETRY",
                                "name": "RTC_XTAL_CAL_RETRY",
                                "range": null,
                                "title": "Number of attempts to repeat 32k XTAL calibration",
                                "type": "int"
                            }
                        ],
                        "depends_on": null,
                        "id": "component-config-hardware-settings-rtc-clock-config",
                        "title": "RTC Clock Config",
                        "type": "menu"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "Place peripheral control functions (e.g. periph_module_reset) into IRAM,\nso that these functions can be IRAM-safe and able to be called in the other IRAM interrupt context.",
                                "id": "PERIPH_CTRL_FUNC_IN_IRAM",
                                "name": "PERIPH_CTRL_FUNC_IN_IRAM",
                                "range": null,
                                "title": "Place peripheral control functions into IRAM",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "id": "component-config-hardware-settings-peripheral-control",
                        "title": "Peripheral Control",
                        "type": "menu"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "SOC_ETM_SUPPORTED",
                                "help": "whether to enable the debug log message for ETM core driver.\nNote that, this option only controls the ETM related driver log, won't affect other drivers.",
                                "id": "ETM_ENABLE_DEBUG_LOG",
                                "name": "ETM_ENABLE_DEBUG_LOG",
                                "range": null,
                                "title": "Enable debug log",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "SOC_ETM_SUPPORTED",
                        "id": "component-config-hardware-settings-etm-configuration",
                        "title": "ETM Configuration",
                        "type": "menu"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "SOC_GDMA_SUPPORTED",
                                "help": "Place GDMA control functions (like start/stop/append/reset) into IRAM,\nso that these functions can be IRAM-safe and able to be called in the other IRAM interrupt context.",
                                "id": "GDMA_CTRL_FUNC_IN_IRAM",
                                "name": "GDMA_CTRL_FUNC_IN_IRAM",
                                "range": null,
                                "title": "Place GDMA control functions in IRAM",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "SOC_GDMA_SUPPORTED",
                                "help": "This will ensure the GDMA interrupt handler is IRAM-Safe, allow to avoid flash\ncache misses, and also be able to run whilst the cache is disabled.\n(e.g. SPI Flash write).",
                                "id": "GDMA_ISR_IRAM_SAFE",
                                "name": "GDMA_ISR_IRAM_SAFE",
                                "range": null,
                                "title": "GDMA ISR IRAM-Safe",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "SOC_GDMA_SUPPORTED",
                                "help": "This will ensure the GDMA object is DRAM-Safe, allow to avoid external memory\ncache misses, and also be accessible whilst the cache is disabled.",
                                "id": "GDMA_OBJ_DRAM_SAFE",
                                "name": "GDMA_OBJ_DRAM_SAFE",
                                "range": null,
                                "title": null,
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "SOC_GDMA_SUPPORTED",
                                "help": "Whether to enable the debug log message for GDMA driver.\nNote that, this option only controls the GDMA driver log, won't affect other drivers.",
                                "id": "GDMA_ENABLE_DEBUG_LOG",
                                "name": "GDMA_ENABLE_DEBUG_LOG",
                                "range": null,
                                "title": "Enable debug log",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "SOC_GDMA_SUPPORTED",
                        "id": "component-config-hardware-settings-gdma-configurations",
                        "title": "GDMA Configurations",
                        "type": "menu"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "SOC_DW_GDMA_SUPPORTED",
                                "help": "Place DW_GDMA control functions (e.g. dw_gdma_channel_continue) into IRAM,\nso that these functions can be IRAM-safe and able to be called in the other IRAM interrupt context.",
                                "id": "DW_GDMA_CTRL_FUNC_IN_IRAM",
                                "name": "DW_GDMA_CTRL_FUNC_IN_IRAM",
                                "range": null,
                                "title": null,
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "SOC_DW_GDMA_SUPPORTED",
                                "help": "Place DW_GDMA setter functions (e.g. dw_gdma_channel_set_block_markers) into IRAM,\nso that these functions can be IRAM-safe and able to be called in the other IRAM interrupt context.",
                                "id": "DW_GDMA_SETTER_FUNC_IN_IRAM",
                                "name": "DW_GDMA_SETTER_FUNC_IN_IRAM",
                                "range": null,
                                "title": null,
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "SOC_DW_GDMA_SUPPORTED",
                                "help": "Place DW_GDMA getter functions (e.g. dw_gdma_link_list_get_item) into IRAM,\nso that these functions can be IRAM-safe and able to be called in the other IRAM interrupt context.",
                                "id": "DW_GDMA_GETTER_FUNC_IN_IRAM",
                                "name": "DW_GDMA_GETTER_FUNC_IN_IRAM",
                                "range": null,
                                "title": null,
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "SOC_DW_GDMA_SUPPORTED",
                                "help": "This will ensure the DW_GDMA interrupt handler is IRAM-Safe, allow to avoid flash\ncache misses, and also be able to run whilst the cache is disabled.\n(e.g. SPI Flash write).",
                                "id": "DW_GDMA_ISR_IRAM_SAFE",
                                "name": "DW_GDMA_ISR_IRAM_SAFE",
                                "range": null,
                                "title": null,
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "SOC_DW_GDMA_SUPPORTED",
                                "help": "This will ensure the DW_GDMA object is DRAM-Safe, allow to avoid external memory\ncache misses, and also be accessible whilst the cache is disabled.",
                                "id": "DW_GDMA_OBJ_DRAM_SAFE",
                                "name": "DW_GDMA_OBJ_DRAM_SAFE",
                                "range": null,
                                "title": null,
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "SOC_DW_GDMA_SUPPORTED",
                                "help": "Whether to enable the debug log message for DW_GDMA driver.\nNote that, this option only controls the DW_GDMA driver log, won't affect other drivers.",
                                "id": "DW_GDMA_ENABLE_DEBUG_LOG",
                                "name": "DW_GDMA_ENABLE_DEBUG_LOG",
                                "range": null,
                                "title": "Enable debug log",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "SOC_DW_GDMA_SUPPORTED",
                        "id": "component-config-hardware-settings-dw_gdma-configurations",
                        "title": "DW_GDMA Configurations",
                        "type": "menu"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "SOC_DMA2D_SUPPORTED",
                                "help": "Place 2D-DMA all operation functions, including control functions (e.g. start/stop/append/reset) and setter\nfunctions (e.g. connect/strategy/callback registration) into IRAM, so that these functions can be IRAM-safe\nand able to be called in the other IRAM interrupt context. It also helps optimizing the performance.",
                                "id": "DMA2D_OPERATION_FUNC_IN_IRAM",
                                "name": "DMA2D_OPERATION_FUNC_IN_IRAM",
                                "range": null,
                                "title": "Place 2D-DMA operation functions into IRAM",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "SOC_DMA2D_SUPPORTED",
                                "help": "This will ensure the 2D-DMA interrupt handler is IRAM-Safe, allow to avoid flash\ncache misses, and also be able to run whilst the cache is disabled.\n(e.g. SPI Flash write).",
                                "id": "DMA2D_ISR_IRAM_SAFE",
                                "name": "DMA2D_ISR_IRAM_SAFE",
                                "range": null,
                                "title": "2D-DMA ISR IRAM-Safe",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "SOC_DMA2D_SUPPORTED",
                        "id": "component-config-hardware-settings-2d-dma-configurations",
                        "title": "2D-DMA Configurations",
                        "type": "menu"
                    },
                    {
                        "children": [
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": "<choice XTAL_FREQ>",
                                        "help": null,
                                        "id": "XTAL_FREQ_26",
                                        "name": "XTAL_FREQ_26",
                                        "range": null,
                                        "title": "26 MHz",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "<choice XTAL_FREQ>",
                                        "help": null,
                                        "id": "XTAL_FREQ_32",
                                        "name": "XTAL_FREQ_32",
                                        "range": null,
                                        "title": "32 MHz",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "<choice XTAL_FREQ>",
                                        "help": null,
                                        "id": "XTAL_FREQ_40",
                                        "name": "XTAL_FREQ_40",
                                        "range": null,
                                        "title": "40 MHz",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "<choice XTAL_FREQ>",
                                        "help": null,
                                        "id": "XTAL_FREQ_AUTO",
                                        "name": "XTAL_FREQ_AUTO",
                                        "range": null,
                                        "title": "Autodetect",
                                        "type": "bool"
                                    }
                                ],
                                "depends_on": null,
                                "help": "This option selects the operating frequency of the XTAL (crystal) clock used to drive the ESP target.\nThe selected value MUST reflect the frequency of the given hardware.\n\nNote: On ESP32, the XTAL_FREQ_AUTO option allows the ESP target to automatically estimating XTAL clock's\noperating frequency. The ESP32 uses the internal 8MHZ as a reference when estimating. Due to the internal\noscillator's frequency being temperature dependent, usage of the XTAL_FREQ_AUTO is not recommended in\napplications that operate in high ambient temperatures or use high-temperature qualified chips and modules.",
                                "id": "component-config-hardware-settings-main-xtal-config-main-xtal-frequency",
                                "name": "XTAL_FREQ",
                                "title": "Main XTAL frequency",
                                "type": "choice"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": null,
                                "id": "XTAL_FREQ",
                                "name": "XTAL_FREQ",
                                "range": null,
                                "title": null,
                                "type": "int"
                            }
                        ],
                        "depends_on": null,
                        "id": "component-config-hardware-settings-main-xtal-config",
                        "title": "Main XTAL Config",
                        "type": "menu"
                    },
                    {
                        "children": [
                            {
                                "children": [
                                    {
                                        "children": [
                                            {
                                                "children": [],
                                                "depends_on": "<choice ESP_BROWNOUT_DET_LVL_SEL>",
                                                "help": null,
                                                "id": "ESP_BROWNOUT_DET_LVL_SEL_0",
                                                "name": "ESP_BROWNOUT_DET_LVL_SEL_0",
                                                "range": null,
                                                "title": "2.43V +/- 0.05",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice ESP_BROWNOUT_DET_LVL_SEL>",
                                                "help": null,
                                                "id": "ESP_BROWNOUT_DET_LVL_SEL_1",
                                                "name": "ESP_BROWNOUT_DET_LVL_SEL_1",
                                                "range": null,
                                                "title": "2.48V +/- 0.05",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice ESP_BROWNOUT_DET_LVL_SEL>",
                                                "help": null,
                                                "id": "ESP_BROWNOUT_DET_LVL_SEL_2",
                                                "name": "ESP_BROWNOUT_DET_LVL_SEL_2",
                                                "range": null,
                                                "title": "2.58V +/- 0.05",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice ESP_BROWNOUT_DET_LVL_SEL>",
                                                "help": null,
                                                "id": "ESP_BROWNOUT_DET_LVL_SEL_3",
                                                "name": "ESP_BROWNOUT_DET_LVL_SEL_3",
                                                "range": null,
                                                "title": "2.62V +/- 0.05",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice ESP_BROWNOUT_DET_LVL_SEL>",
                                                "help": null,
                                                "id": "ESP_BROWNOUT_DET_LVL_SEL_4",
                                                "name": "ESP_BROWNOUT_DET_LVL_SEL_4",
                                                "range": null,
                                                "title": "2.67V +/- 0.05",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice ESP_BROWNOUT_DET_LVL_SEL>",
                                                "help": null,
                                                "id": "ESP_BROWNOUT_DET_LVL_SEL_5",
                                                "name": "ESP_BROWNOUT_DET_LVL_SEL_5",
                                                "range": null,
                                                "title": "2.70V +/- 0.05",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice ESP_BROWNOUT_DET_LVL_SEL>",
                                                "help": null,
                                                "id": "ESP_BROWNOUT_DET_LVL_SEL_6",
                                                "name": "ESP_BROWNOUT_DET_LVL_SEL_6",
                                                "range": null,
                                                "title": "2.77V +/- 0.05",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice ESP_BROWNOUT_DET_LVL_SEL>",
                                                "help": null,
                                                "id": "ESP_BROWNOUT_DET_LVL_SEL_7",
                                                "name": "ESP_BROWNOUT_DET_LVL_SEL_7",
                                                "range": null,
                                                "title": "2.80V +/- 0.05",
                                                "type": "bool"
                                            }
                                        ],
                                        "depends_on": "ESP_BROWNOUT_DET",
                                        "help": "The brownout detector will reset the chip when the supply voltage is approximately\nbelow this level. Note that there may be some variation of brownout voltage level\nbetween each ESP chip.\n\n#The voltage levels here are estimates, more work needs to be done to figure out the exact voltages\n#of the brownout threshold levels.",
                                        "id": "component-config-hardware-settings-brownout-detector-hardware-brownout-detect-reset-brownout-voltage-level",
                                        "name": "ESP_BROWNOUT_DET_LVL_SEL",
                                        "title": "Brownout voltage level",
                                        "type": "choice"
                                    }
                                ],
                                "depends_on": "!IDF_ENV_FPGA",
                                "help": "The ESP has a built-in brownout detector which can detect if the voltage is lower than\na specific value. If this happens, it will reset the chip in order to prevent unintended\nbehaviour.",
                                "id": "ESP_BROWNOUT_DET",
                                "name": "ESP_BROWNOUT_DET",
                                "range": null,
                                "title": "Hardware brownout detect & reset",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": null,
                                "id": "ESP_BROWNOUT_DET_LVL",
                                "name": "ESP_BROWNOUT_DET_LVL",
                                "range": null,
                                "title": null,
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "This config allows to trigger an interrupt when brownout detected. Software restart will be done\nat the end of the default callback.\nTwo occasions need to restart the chip with interrupt so far.\n(1). For ESP32 version 1, brown-out reset function doesn't work (see ESP32 errata 3.4).\n      So that we must restart from interrupt.\n(2). For special workflow, the chip needs do more things instead of restarting directly. This part\n     needs to be done in callback function of interrupt.",
                                "id": "ESP_BROWNOUT_USE_INTR",
                                "name": "ESP_BROWNOUT_USE_INTR",
                                "range": null,
                                "title": null,
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "id": "component-config-hardware-settings-brownout-detector",
                        "title": "Brownout Detector",
                        "type": "menu"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "This option is only used for new chip bringup, when\nclock support isn't done yet. So with this option,\nwe use xtal on FPGA as the clock source.",
                        "id": "ESP_BRINGUP_BYPASS_CPU_CLK_SETTING",
                        "name": "ESP_BRINGUP_BYPASS_CPU_CLK_SETTING",
                        "range": null,
                        "title": null,
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "This option is only used for new chip bringup, when\nRNG isn't done yet. So with this option, we use 0x5A\nto fill the random buffers",
                        "id": "ESP_BRINGUP_BYPASS_RANDOM_SETTING",
                        "name": "ESP_BRINGUP_BYPASS_RANDOM_SETTING",
                        "range": null,
                        "title": null,
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": null,
                        "id": "ESP_SPI_BUS_LOCK_ISR_FUNCS_IN_IRAM",
                        "name": "ESP_SPI_BUS_LOCK_ISR_FUNCS_IN_IRAM",
                        "range": null,
                        "title": null,
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": null,
                        "id": "ESP_SPI_BUS_LOCK_FUNCS_IN_IRAM",
                        "name": "ESP_SPI_BUS_LOCK_FUNCS_IN_IRAM",
                        "range": null,
                        "title": null,
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Due to the poor low-temperature characteristics of\nRC32K (it cannot operate below -40 degrees Celsius),\nplease avoid using it whenever possible",
                        "id": "ESP_CLK_RC32K_NOT_TO_USE",
                        "name": "ESP_CLK_RC32K_NOT_TO_USE",
                        "range": null,
                        "title": null,
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "id": "component-config-hardware-settings",
                "title": "Hardware Settings",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "ESP_MM_CACHE_MSYNC_C2M_CHUNKED_OPS",
                                "help": "Max len in bytes per C2M chunk, operations with size over the max len will be\nsliced into multiple chunks.",
                                "id": "ESP_MM_CACHE_MSYNC_C2M_CHUNKED_OPS_MAX_LEN",
                                "name": "ESP_MM_CACHE_MSYNC_C2M_CHUNKED_OPS_MAX_LEN",
                                "range": null,
                                "title": "Max len in bytes per C2M chunk",
                                "type": "hex"
                            }
                        ],
                        "depends_on": "SOC_CACHE_WRITEBACK_SUPPORTED",
                        "help": "`esp_cache_msync` C2M direction takes critical sections, which means during\nthe operation, the interrupts are disabled. Whereas Cache writebacks for\nlarge buffers could be especially time intensive, and might cause interrupts\nto be disabled for a significant amount of time.\n\nSometimes you want other ISRs to be responded during this C2M process.\nThis option is to slice one C2M operation into multiple chunks,\nwith CONFIG_ESP_MM_CACHE_MSYNC_C2M_CHUNKED_OPS_MAX_LEN max len. This will give you\na breath during the C2M process as sometimes the C2M process is quite long.\n\nNote if the buffer processed by the `esp_cache_msync` (C2M sliced) is interrupted by an ISR,\nand this ISR also accesses this buffer, this may lead to data coherence issue.",
                        "id": "ESP_MM_CACHE_MSYNC_C2M_CHUNKED_OPS",
                        "name": "ESP_MM_CACHE_MSYNC_C2M_CHUNKED_OPS",
                        "range": null,
                        "title": "Enable esp_cache_msync C2M chunked operation",
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "id": "component-config-esp-mm-memory-management-configurations",
                "title": "ESP-MM: Memory Management Configurations",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "IDF_TARGET_LINUX",
                        "help": "This option enables gathering host test statistics and SPI flash wear levelling simulation.",
                        "id": "ESP_PARTITION_ENABLE_STATS",
                        "name": "ESP_PARTITION_ENABLE_STATS",
                        "range": null,
                        "title": "Host test statistics enabled",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "IDF_TARGET_LINUX",
                        "help": "This option controls whether the partition implementation checks\nif the flash is erased before writing to it.\nThis is necessary for SPIFFS, which expects to be able to write without erasing first.",
                        "id": "ESP_PARTITION_ERASE_CHECK",
                        "name": "ESP_PARTITION_ERASE_CHECK",
                        "range": null,
                        "title": "Check if flash is erased before writing",
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "id": "component-config-partition-api-configuration",
                "title": "Partition API Configuration",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "PM_ENABLE",
                                "help": "If enabled, startup code configures dynamic frequency scaling.\nMax CPU frequency is set to DEFAULT_CPU_FREQ_MHZ setting,\nmin frequency is set to XTAL frequency.\nIf disabled, DFS will not be active until the application\nconfigures it using esp_pm_configure function.",
                                "id": "PM_DFS_INIT_AUTO",
                                "name": "PM_DFS_INIT_AUTO",
                                "range": null,
                                "title": "Enable dynamic frequency scaling (DFS) at startup",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "PM_ENABLE",
                                "help": "If enabled, esp_pm_* functions will keep track of the amount of time\neach of the power management locks has been held, and esp_pm_dump_locks\nfunction will print this information.\nThis feature can be used to analyze which locks are preventing the chip\nfrom going into a lower power state, and see what time the chip spends\nin each power saving mode. This feature does incur some run-time\noverhead, so should typically be disabled in production builds.",
                                "id": "PM_PROFILING",
                                "name": "PM_PROFILING",
                                "range": null,
                                "title": "Enable profiling counters for PM locks",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "PM_ENABLE",
                                "help": "If enabled, some GPIOs will be used to signal events such as RTOS ticks,\nfrequency switching, entry/exit from idle state. Refer to pm_trace.c\nfile for the list of GPIOs.\nThis feature is intended to be used when analyzing/debugging behavior\nof power management implementation, and should be kept disabled in\napplications.",
                                "id": "PM_TRACE",
                                "name": "PM_TRACE",
                                "range": null,
                                "title": "Enable debug tracing of PM using GPIOs",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "(!FREERTOS_SMP && SOC_PM_SUPPORTED) || __DOXYGEN__",
                        "help": "If enabled, application is compiled with support for power management.\nThis option has run-time overhead (increased interrupt latency,\nlonger time to enter idle state), and it also reduces accuracy of\nRTOS ticks and timers used for timekeeping.\nEnable this option if application uses power management APIs.",
                        "id": "PM_ENABLE",
                        "name": "PM_ENABLE",
                        "range": null,
                        "title": "Support for power management",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "SOC_LIGHT_SLEEP_SUPPORTED",
                        "help": "If enabled, about 2.1KB of lightsleep related source code would be in IRAM and chip would sleep\nlonger for 310us at 160MHz CPU frequency most each time.\nThis feature is intended to be used when lower power consumption is needed\nwhile there is enough place in IRAM to place source code.",
                        "id": "PM_SLP_IRAM_OPT",
                        "name": "PM_SLP_IRAM_OPT",
                        "range": null,
                        "title": "Put lightsleep related codes in internal RAM",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "FREERTOS_USE_TICKLESS_IDLE",
                        "help": "If enabled, about 180Bytes of RTOS_IDLE related source code would be in IRAM and chip would sleep\nlonger for 20us at 160MHz CPU frequency most each time.\nThis feature is intended to be used when lower power consumption is needed\nwhile there is enough place in IRAM to place source code.",
                        "id": "PM_RTOS_IDLE_OPT",
                        "name": "PM_RTOS_IDLE_OPT",
                        "range": null,
                        "title": "Put RTOS IDLE related codes in internal RAM",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "FREERTOS_USE_TICKLESS_IDLE",
                        "help": "This feature is intended to disable all GPIO pins at automantic sleep to get a lower power mode.\nIf enabled, chips will disable all GPIO pins at automantic sleep to reduce about 200~300 uA current.\nIf you want to specifically use some pins normally as chip wakes when chip sleeps,\nyou can call 'gpio_sleep_sel_dis' to disable this feature on those pins.\nYou can also keep this feature on and call 'gpio_sleep_set_direction' and 'gpio_sleep_set_pull_mode'\nto have a different GPIO configuration at sleep.\nWarning: If you want to enable this option on ESP32, you should enable `GPIO_ESP32_SUPPORT_SWITCH_SLP_PULL`\nat first, otherwise you will not be able to switch pullup/pulldown mode.",
                        "id": "PM_SLP_DISABLE_GPIO",
                        "name": "PM_SLP_DISABLE_GPIO",
                        "range": null,
                        "title": "Disable all GPIO when chip at sleep",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": null,
                        "id": "PM_SLP_DEFAULT_PARAMS_OPT",
                        "name": "PM_SLP_DEFAULT_PARAMS_OPT",
                        "range": null,
                        "title": null,
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "PM_POWER_DOWN_CPU_IN_LIGHT_SLEEP || (SOC_CPU_IN_TOP_DOMAIN && PM_POWER_DOWN_PERIPHERAL_IN_LIGHT_SLEEP)",
                        "help": "This option is invisible to users, and it is only used for ci testing,\nenabling it in the application will increase the sleep and wake-up time overhead",
                        "id": "PM_CHECK_SLEEP_RETENTION_FRAME",
                        "name": "PM_CHECK_SLEEP_RETENTION_FRAME",
                        "range": null,
                        "title": null,
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "PM_ENABLE",
                        "help": "The value of this option determines the calibration interval of the RTC_FAST/SLOW clock during sleep when\npower management is enabled. When it is configured as N, the RTC_FAST/SLOW clock will be calibrated\nevery N times of lightsleep.\nDecreasing this value will increase the time the chip is in the active state, thereby increasing the\naverage power consumption of the chip.\nIncreasing this value can reduce the average power consumption, but when the external environment changes\ndrastically and the chip RTC_FAST/SLOW oscillator frequency drifts, it may cause system instability.",
                        "id": "PM_LIGHTSLEEP_RTC_OSC_CAL_INTERVAL",
                        "name": "PM_LIGHTSLEEP_RTC_OSC_CAL_INTERVAL",
                        "range": null,
                        "title": "Calibrate the RTC_FAST/SLOW clock every N times of light sleep",
                        "type": "int"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "IDF_TARGET_ESP32S3 && PM_POWER_DOWN_CPU_IN_LIGHT_SLEEP",
                                "help": "Cache tag memory and CPU both belong to the CPU power domain.\nESP chips supports saving and restoring Cache tag memory before and after sleep,\nthis feature supports accesses to the external memory that was cached before sleep still\nbe cached when the CPU wakes up from a powerdowned CPU lightsleep.\nThis option controls the restore method for Cache tag memory in lightsleep.\nIf this option is enabled, the I/D-cache tag memory will be backuped to the internal RAM\nbefore sleep and restored upon wakeup.\nDepending on the the cache configuration, if this option is enabled,\nit will consume up to 9 KB of internal RAM.\nIf this option is disabled, all cached data won't be kept after sleep,\nthe DCache will be writeback before sleep and invalid all cached data after sleep,\nall accesses to external memory(Flash/PSRAM) will be cache missed after waking up,\nresulting in performance degradation due to increased memory accesses latency.",
                                "id": "PM_RESTORE_CACHE_TAGMEM_AFTER_LIGHT_SLEEP",
                                "name": "PM_RESTORE_CACHE_TAGMEM_AFTER_LIGHT_SLEEP",
                                "range": null,
                                "title": "Restore I/D-cache tag memory after power down CPU light sleep",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "SOC_PM_SUPPORT_CPU_PD",
                        "help": "If enabled, the CPU will be powered down in light sleep,\nESP chips supports saving and restoring CPU's running context before and after light sleep,\nthe feature provides applications with seamless CPU powerdowned lightsleep without user awareness.\nBut this will takes up some internal memory.\nOn esp32c3 soc, enabling this option will consume 1.68 KB of internal RAM\nand will reduce sleep current consumption by about 100 uA.\nOn esp32s3 soc, enabling this option will consume 8.58 KB of internal RAM\nand will reduce sleep current consumption by about 650 uA.",
                        "id": "PM_POWER_DOWN_CPU_IN_LIGHT_SLEEP",
                        "name": "PM_POWER_DOWN_CPU_IN_LIGHT_SLEEP",
                        "range": null,
                        "title": "Power down CPU in light sleep",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "SOC_PM_SUPPORT_TOP_PD && SOC_PAU_SUPPORTED",
                        "help": "If enabled, digital peripherals will be powered down in light sleep, it will reduce sleep\ncurrent consumption by about 100 uA. Chip will save/restore register context at sleep/wake\ntime to keep the system running. Enabling this option will increase static RAM and heap usage,\nthe actual cost depends on the peripherals you have initialized. In order to save/restore the\ncontext of the necessary hardware for FreeRTOS to run, it will need at least 4.55 KB free heap\nat sleep time. Otherwise sleep will not power down the peripherals.\n\nNote1: Please use this option with caution, the current IDF does not support the retention of\nall peripherals. When the digital peripherals are powered off and a sleep and wake-up is completed,\nthe peripherals that have not saved the running context are equivalent to performing a reset.\n!!! Please confirm the peripherals used in your application and their sleep retention support status\nbefore enabling this option, peripherals sleep retention driver support status is tracked in\npower_management.rst\n\nNote2: When this option is enabled simultaneously with FREERTOS_USE_TICKLESS_IDLE, since the UART will\nbe powered down, the uart FIFO will be flushed before sleep to avoid data loss, however, this has the\npotential to block the sleep process and cause the wakeup time to be skipped, which will cause the tick\nof freertos to not be compensated correctly when returning from sleep and cause the system to crash.\nTo avoid this, you can increase FREERTOS_IDLE_TIME_BEFORE_SLEEP threshold in menuconfig.",
                        "id": "PM_POWER_DOWN_PERIPHERAL_IN_LIGHT_SLEEP",
                        "name": "PM_POWER_DOWN_PERIPHERAL_IN_LIGHT_SLEEP",
                        "range": null,
                        "title": "Power down Digital Peripheral in light sleep (EXPERIMENTAL)",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": null,
                        "id": "PM_UPDATE_CCOMPARE_HLI_WORKAROUND",
                        "name": "PM_UPDATE_CCOMPARE_HLI_WORKAROUND",
                        "range": null,
                        "title": null,
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "FREERTOS_USE_TICKLESS_IDLE",
                        "help": "If enabled, it allows user to register entry and exit callbacks which are called before and after\nentering auto light sleep.\n\nNOTE: These callbacks are executed from the IDLE task context hence you cannot have any blocking calls\nin your callbacks.\n\nNOTE: Enabling these callbacks may change sleep duration calculations based on time spent in callback and\nhence it is highly recommended to keep them as short as possible",
                        "id": "PM_LIGHT_SLEEP_CALLBACKS",
                        "name": "PM_LIGHT_SLEEP_CALLBACKS",
                        "range": null,
                        "title": "Enable registration of pm light sleep callbacks",
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "id": "component-config-power-management",
                "title": "Power Management",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "RINGBUF_PLACE_FUNCTIONS_INTO_FLASH",
                                "help": "Place ISR ringbuf functions (like xRingbufferSendFromISR/xRingbufferReceiveFromISR) into flash.\nThis frees up IRAM, but the functions can no longer be called when the cache is disabled\nor from an IRAM interrupt context.\n\nThis option is not compatible with ESP-IDF drivers which are configured to\nrun the ISR from an IRAM context, e.g. CONFIG_UART_ISR_IN_IRAM.",
                                "id": "RINGBUF_PLACE_ISR_FUNCTIONS_INTO_FLASH",
                                "name": "RINGBUF_PLACE_ISR_FUNCTIONS_INTO_FLASH",
                                "range": null,
                                "title": "Place ISR ringbuf functions into flash",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "help": "Place non-ISR ringbuf functions (like xRingbufferCreate/xRingbufferSend) into flash.\nThis frees up IRAM, but the functions can no longer be called when the cache is disabled.",
                        "id": "RINGBUF_PLACE_FUNCTIONS_INTO_FLASH",
                        "name": "RINGBUF_PLACE_FUNCTIONS_INTO_FLASH",
                        "range": null,
                        "title": "Place non-ISR ringbuf functions into flash",
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "id": "component-config-esp-ringbuf",
                "title": "ESP Ringbuf",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [
                                    {
                                        "children": [
                                            {
                                                "children": [],
                                                "depends_on": "<choice ESP_CRYPTO_DPA_PROTECTION_LEVEL>",
                                                "help": null,
                                                "id": "ESP_CRYPTO_DPA_PROTECTION_LEVEL_LOW",
                                                "name": "ESP_CRYPTO_DPA_PROTECTION_LEVEL_LOW",
                                                "range": null,
                                                "title": "Security level low",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice ESP_CRYPTO_DPA_PROTECTION_LEVEL>",
                                                "help": null,
                                                "id": "ESP_CRYPTO_DPA_PROTECTION_LEVEL_MEDIUM",
                                                "name": "ESP_CRYPTO_DPA_PROTECTION_LEVEL_MEDIUM",
                                                "range": null,
                                                "title": "Security level medium",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice ESP_CRYPTO_DPA_PROTECTION_LEVEL>",
                                                "help": null,
                                                "id": "ESP_CRYPTO_DPA_PROTECTION_LEVEL_HIGH",
                                                "name": "ESP_CRYPTO_DPA_PROTECTION_LEVEL_HIGH",
                                                "range": null,
                                                "title": "Security level high",
                                                "type": "bool"
                                            }
                                        ],
                                        "depends_on": "ESP_CRYPTO_DPA_PROTECTION_AT_STARTUP && SOC_CRYPTO_DPA_PROTECTION_SUPPORTED",
                                        "help": "Configure the DPA protection security level",
                                        "id": "component-config-esp-security-specific-crypto-dpa-protection-enable-crypto-dpa-protection-at-startup-dpa-protection-level",
                                        "name": "ESP_CRYPTO_DPA_PROTECTION_LEVEL",
                                        "title": "DPA protection level",
                                        "type": "choice"
                                    }
                                ],
                                "depends_on": "SOC_CRYPTO_DPA_PROTECTION_SUPPORTED",
                                "help": "This config controls the DPA (Differential Power Analysis) protection\nknob for the crypto peripherals. DPA protection dynamically adjusts\nclock frequency of the crypto peripheral. DPA protection helps to make it\ndifficult to perform SCA attacks on the crypto peripherals. However,\nthere is also associated performance impact based on the security level\nset. Please refer to the TRM for more details.",
                                "id": "ESP_CRYPTO_DPA_PROTECTION_AT_STARTUP",
                                "name": "ESP_CRYPTO_DPA_PROTECTION_AT_STARTUP",
                                "range": null,
                                "title": "Enable crypto DPA protection at startup",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "SOC_CRYPTO_DPA_PROTECTION_SUPPORTED",
                                "help": null,
                                "id": "ESP_CRYPTO_DPA_PROTECTION_LEVEL",
                                "name": "ESP_CRYPTO_DPA_PROTECTION_LEVEL",
                                "range": null,
                                "title": null,
                                "type": "int"
                            }
                        ],
                        "depends_on": "SOC_CRYPTO_DPA_PROTECTION_SUPPORTED",
                        "id": "component-config-esp-security-specific-crypto-dpa-protection",
                        "title": "Crypto DPA Protection",
                        "type": "menu"
                    },
                    {
                        "children": [],
                        "depends_on": "SOC_ECC_CONSTANT_TIME_POINT_MUL",
                        "help": "If enabled, the app startup code will burn the ECC_FORCE_CONST_TIME efuse bit to force the\nECC peripheral to always perform constant time point multiplication operations,\nirrespective of the ECC_MULT_SECURITY_MODE status bit that is present in the ECC_MULT_CONF_REG\nregister. By default, ESP-IDF configures the ECC peripheral to perform constant time point\nmultiplication operations, so enabling this config would provide security enhancement only in\nthe cases when trusted boot is not enabled and the attacker tries carrying out non-constant\ntime point multiplication operations by changing the default ESP-IDF configurations.\nPerforming constant time operations protect the ECC multiplication operations from timing attacks.",
                        "id": "ESP_CRYPTO_FORCE_ECC_CONSTANT_TIME_POINT_MUL",
                        "name": "ESP_CRYPTO_FORCE_ECC_CONSTANT_TIME_POINT_MUL",
                        "range": null,
                        "title": "Forcfully enable ECC constant time point multiplication operations",
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "id": "component-config-esp-security-specific",
                "title": "ESP Security Specific",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "IDF_ENV_FPGA && <choice ESP_DEFAULT_CPU_FREQ_MHZ>",
                                "help": null,
                                "id": "ESP_DEFAULT_CPU_FREQ_MHZ_40",
                                "name": "ESP_DEFAULT_CPU_FREQ_MHZ_40",
                                "range": null,
                                "title": "40 MHz",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice ESP_DEFAULT_CPU_FREQ_MHZ>",
                                "help": null,
                                "id": "ESP_DEFAULT_CPU_FREQ_MHZ_80",
                                "name": "ESP_DEFAULT_CPU_FREQ_MHZ_80",
                                "range": null,
                                "title": "80 MHz",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice ESP_DEFAULT_CPU_FREQ_MHZ>",
                                "help": null,
                                "id": "ESP_DEFAULT_CPU_FREQ_MHZ_160",
                                "name": "ESP_DEFAULT_CPU_FREQ_MHZ_160",
                                "range": null,
                                "title": "160 MHz",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice ESP_DEFAULT_CPU_FREQ_MHZ>",
                                "help": null,
                                "id": "ESP_DEFAULT_CPU_FREQ_MHZ_240",
                                "name": "ESP_DEFAULT_CPU_FREQ_MHZ_240",
                                "range": null,
                                "title": "240 MHz",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "help": "CPU frequency to be set on application startup.",
                        "id": "component-config-esp-system-settings-cpu-frequency",
                        "name": "ESP_DEFAULT_CPU_FREQ_MHZ",
                        "title": "CPU frequency",
                        "type": "choice"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": null,
                        "id": "ESP_DEFAULT_CPU_FREQ_MHZ",
                        "name": "ESP_DEFAULT_CPU_FREQ_MHZ",
                        "range": null,
                        "title": null,
                        "type": "int"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "ESP_SYSTEM_SINGLE_CORE_MODE",
                                "help": "This option allows to place .rtc_data and .rtc_rodata sections into\nRTC fast memory segment to free the slow memory region for ULP programs.\nThis option depends on the CONFIG_ESP_SYSTEM_SINGLE_CORE_MODE option because RTC fast memory\ncan be accessed only by PRO_CPU core.",
                                "id": "ESP32_RTCDATA_IN_FAST_MEM",
                                "name": "ESP32_RTCDATA_IN_FAST_MEM",
                                "range": null,
                                "title": "Place RTC_DATA_ATTR and RTC_RODATA_ATTR variables into RTC fast memory segment",
                                "type": "bool"
                            },
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": "ESP32_USE_FIXED_STATIC_RAM_SIZE",
                                        "help": "RAM size dedicated for static variables (.data & .bss sections).\nPlease note that the actual length will be reduced by BTDM_RESERVE_DRAM if Bluetooth\ncontroller is enabled.",
                                        "id": "ESP32_FIXED_STATIC_RAM_SIZE",
                                        "name": "ESP32_FIXED_STATIC_RAM_SIZE",
                                        "range": null,
                                        "title": "Fixed Static RAM size",
                                        "type": "hex"
                                    }
                                ],
                                "depends_on": null,
                                "help": "If this option is disabled, the DRAM part of the heap starts right after the .bss section,\nwithin the dram0_0 region. As a result, adding or removing some static variables\nwill change the available heap size.\n\nIf this option is enabled, the DRAM part of the heap starts right after the dram0_0 region,\nwhere its length is set with ESP32_FIXED_STATIC_RAM_SIZE",
                                "id": "ESP32_USE_FIXED_STATIC_RAM_SIZE",
                                "name": "ESP32_USE_FIXED_STATIC_RAM_SIZE",
                                "range": null,
                                "title": "Use fixed static RAM size",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "ESP_SYSTEM_SINGLE_CORE_MODE",
                                "help": "If enabled, application can use IRAM as byte accessible region for storing data\n(Note: IRAM region cannot be used as task stack)\n\nThis is possible due to handling of exceptions `LoadStoreError (3)` and `LoadStoreAlignmentError (9)`\nEach unaligned read/write access will incur a penalty of maximum of 167 CPU cycles.",
                                "id": "ESP32_IRAM_AS_8BIT_ACCESSIBLE_MEMORY",
                                "name": "ESP32_IRAM_AS_8BIT_ACCESSIBLE_MEMORY",
                                "range": null,
                                "title": "Enable IRAM as 8 bit accessible memory",
                                "type": "bool"
                            },
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": "!ESP32_TRAX",
                                        "help": "Reserve parts of SRAM1 for app IRAM which was previously reserved for bootloader DRAM.\nIf booting an app on an older bootloader from before this option was introduced, the app will fail\nto boot due to not recognizing the new IRAM memory area.\n\nIf this is the case please test carefully before pushing out any OTA updates.",
                                        "id": "ESP_SYSTEM_ESP32_SRAM1_REGION_AS_IRAM",
                                        "name": "ESP_SYSTEM_ESP32_SRAM1_REGION_AS_IRAM",
                                        "range": null,
                                        "title": "Reserve parts of SRAM1 for app IRAM (WARNING, read help before enabling)",
                                        "type": "bool"
                                    }
                                ],
                                "depends_on": null,
                                "id": "component-config-esp-system-settings-memory-non-backward-compatible-options",
                                "title": "Non-backward compatible options",
                                "type": "menu"
                            }
                        ],
                        "depends_on": null,
                        "id": "component-config-esp-system-settings-memory",
                        "title": "Memory",
                        "type": "menu"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": null,
                                "help": null,
                                "id": "ESP32_MEMMAP_TRACEMEM",
                                "name": "ESP32_MEMMAP_TRACEMEM",
                                "range": null,
                                "title": null,
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": null,
                                "id": "ESP32_MEMMAP_TRACEMEM_TWOBANKS",
                                "name": "ESP32_MEMMAP_TRACEMEM_TWOBANKS",
                                "range": null,
                                "title": null,
                                "type": "bool"
                            },
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": "ESP32_TRAX && !ESP_SYSTEM_SINGLE_CORE_MODE",
                                        "help": "The ESP32 contains a feature which allows you to trace the execution path the processor\nhas taken through the program. This is stored in a chunk of 32K (16K for single-processor)\nof memory that can't be used for general purposes anymore. Disable this if you do not know\nwhat this is.\n\n# Memory to reverse for trace, used in linker script",
                                        "id": "ESP32_TRAX_TWOBANKS",
                                        "name": "ESP32_TRAX_TWOBANKS",
                                        "range": null,
                                        "title": "Reserve memory for tracing both pro as well as app cpu execution",
                                        "type": "bool"
                                    }
                                ],
                                "depends_on": null,
                                "help": "The ESP32 contains a feature which allows you to trace the execution path the processor\nhas taken through the program. This is stored in a chunk of 32K (16K for single-processor)\nof memory that can't be used for general purposes anymore. Disable this if you do not know\nwhat this is.",
                                "id": "ESP32_TRAX",
                                "name": "ESP32_TRAX",
                                "range": null,
                                "title": "Use TRAX tracing feature",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": null,
                                "id": "ESP32_TRACEMEM_RESERVE_DRAM",
                                "name": "ESP32_TRACEMEM_RESERVE_DRAM",
                                "range": null,
                                "title": null,
                                "type": "hex"
                            }
                        ],
                        "depends_on": null,
                        "id": "component-config-esp-system-settings-trace-memory",
                        "title": "Trace memory",
                        "type": "menu"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "!ESP_SYSTEM_GDBSTUB_RUNTIME && <choice ESP_SYSTEM_PANIC>",
                                "help": "Outputs the relevant registers over the serial port and halt the\nprocessor. Needs a manual reset to restart.",
                                "id": "ESP_SYSTEM_PANIC_PRINT_HALT",
                                "name": "ESP_SYSTEM_PANIC_PRINT_HALT",
                                "range": null,
                                "title": "Print registers and halt",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "!ESP_SYSTEM_GDBSTUB_RUNTIME && <choice ESP_SYSTEM_PANIC>",
                                "help": "Outputs the relevant registers over the serial port and immediately\nreset the processor.",
                                "id": "ESP_SYSTEM_PANIC_PRINT_REBOOT",
                                "name": "ESP_SYSTEM_PANIC_PRINT_REBOOT",
                                "range": null,
                                "title": "Print registers and reboot",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "!ESP_SYSTEM_GDBSTUB_RUNTIME && <choice ESP_SYSTEM_PANIC>",
                                "help": "Just resets the processor without outputting anything",
                                "id": "ESP_SYSTEM_PANIC_SILENT_REBOOT",
                                "name": "ESP_SYSTEM_PANIC_SILENT_REBOOT",
                                "range": null,
                                "title": "Silent reboot",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "ESP_GDBSTUB_ENABLED && <choice ESP_SYSTEM_PANIC>",
                                "help": "Invoke gdbstub on the serial port, allowing for gdb to attach to it to do a postmortem\nof the crash.",
                                "id": "ESP_SYSTEM_PANIC_GDBSTUB",
                                "name": "ESP_SYSTEM_PANIC_GDBSTUB",
                                "range": null,
                                "title": "GDBStub on panic",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "help": "If FreeRTOS detects unexpected behaviour or an unhandled exception, the panic handler is\ninvoked. Configure the panic handler's action here.",
                        "id": "component-config-esp-system-settings-panic-handler-behaviour",
                        "name": "ESP_SYSTEM_PANIC",
                        "title": "Panic handler behaviour",
                        "type": "choice"
                    },
                    {
                        "children": [],
                        "depends_on": "ESP_SYSTEM_PANIC_PRINT_REBOOT",
                        "help": "After the panic handler executes, you can specify a number of seconds to\nwait before the device reboots.",
                        "id": "ESP_SYSTEM_PANIC_REBOOT_DELAY_SECONDS",
                        "name": "ESP_SYSTEM_PANIC_REBOOT_DELAY_SECONDS",
                        "range": [
                            0,
                            99
                        ],
                        "title": "Panic reboot delay (Seconds)",
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Only initialize and use the main core.",
                        "id": "ESP_SYSTEM_SINGLE_CORE_MODE",
                        "name": "ESP_SYSTEM_SINGLE_CORE_MODE",
                        "range": null,
                        "title": null,
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": null,
                        "id": "ESP_SYSTEM_RTC_EXT_XTAL",
                        "name": "ESP_SYSTEM_RTC_EXT_XTAL",
                        "range": null,
                        "title": null,
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": null,
                        "id": "ESP_SYSTEM_RTC_EXT_OSC",
                        "name": "ESP_SYSTEM_RTC_EXT_OSC",
                        "range": null,
                        "title": null,
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "ESP_SYSTEM_RTC_EXT_XTAL",
                        "help": "To reduce the startup time of an external RTC crystal,\nwe bootstrap it with a 32kHz square wave for a fixed number of cycles.\nSetting 0 will disable bootstrapping (if disabled, the crystal may take\nlonger to start up or fail to oscillate under some conditions).\n\nIf this value is too high, a faulty crystal may initially start and then fail.\nIf this value is too low, an otherwise good crystal may not start.\n\nTo accurately determine if the crystal has started,\nset a larger \"Number of cycles for RTC_SLOW_CLK calibration\" (about 3000).",
                        "id": "ESP_SYSTEM_RTC_EXT_XTAL_BOOTSTRAP_CYCLES",
                        "name": "ESP_SYSTEM_RTC_EXT_XTAL_BOOTSTRAP_CYCLES",
                        "range": null,
                        "title": "Bootstrap cycles for external 32kHz crystal",
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": "SOC_RTC_FAST_MEM_SUPPORTED",
                        "help": null,
                        "id": "ESP_SYSTEM_RTC_FAST_MEM_AS_HEAP_DEPCHECK",
                        "name": "ESP_SYSTEM_RTC_FAST_MEM_AS_HEAP_DEPCHECK",
                        "range": null,
                        "title": null,
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "ESP_SYSTEM_RTC_FAST_MEM_AS_HEAP_DEPCHECK",
                        "help": "This config option allows to add RTC fast memory region to system heap with capability\nsimilar to that of DRAM region but without DMA. Speed wise RTC fast memory operates on\nAPB clock and hence does not have much performance impact.",
                        "id": "ESP_SYSTEM_ALLOW_RTC_FAST_MEM_AS_HEAP",
                        "name": "ESP_SYSTEM_ALLOW_RTC_FAST_MEM_AS_HEAP",
                        "range": null,
                        "title": "Enable RTC fast memory for dynamic allocations",
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "<choice ESP_BACKTRACING_METHOD>",
                                "help": "When selected, no backtracing will be performed at runtime. By using idf.py monitor, it\nis still possible to get a backtrace when a panic occurs.",
                                "id": "ESP_SYSTEM_NO_BACKTRACE",
                                "name": "ESP_SYSTEM_NO_BACKTRACE",
                                "range": null,
                                "title": "No backtracing",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice ESP_BACKTRACING_METHOD>",
                                "help": "Generate DWARF information for each function of the project. These information will parsed and used to\nperform backtracing when panics occur. Activating this option will activate asynchronous frame\nunwinding and generation of both .eh_frame and .eh_frame_hdr sections, resulting in a bigger binary\nsize (20% to 100% larger). The main purpose of this option is to be able to have a backtrace parsed\nand printed by the program itself, regardless of the serial monitor used.\nThis option is not recommended to be used for production.",
                                "id": "ESP_SYSTEM_USE_EH_FRAME",
                                "name": "ESP_SYSTEM_USE_EH_FRAME",
                                "range": null,
                                "title": "Generate and use eh_frame for backtracing",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice ESP_BACKTRACING_METHOD>",
                                "help": "This configuration allows the compiler to allocate CPU register s0 as the frame pointer. The main usage\nof the frame pointer is to be able to generate a backtrace from the panic handler on exception.\nEnabling this option results in bigger and slightly slower code since all functions will have\nto populate this register and won't be able to use it as a general-purpose register anymore.",
                                "id": "ESP_SYSTEM_USE_FRAME_POINTER",
                                "name": "ESP_SYSTEM_USE_FRAME_POINTER",
                                "range": null,
                                "title": "Use CPU Frame Pointer register",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "IDF_TARGET_ARCH_RISCV",
                        "help": "Configure how backtracing will be performed at runtime when a panic occurs.",
                        "id": "component-config-esp-system-settings-backtracing-method",
                        "name": "ESP_BACKTRACING_METHOD",
                        "title": "Backtracing method",
                        "type": "choice"
                    },
                    {
                        "children": [
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": "IDF_TARGET_ARCH_RISCV && SOC_LP_CORE_SUPPORTED && ESP_SYSTEM_PMP_IDRAM_SPLIT",
                                        "help": "If enabled, user can run code available in LP Core image.\n\nWarning: on ESP32-P4 this will also mark the memory area used for BOOTLOADER_RESERVE_RTC_MEM\nas executable. If you consider this a security risk then do not activate this option.",
                                        "id": "ESP_SYSTEM_PMP_LP_CORE_RESERVE_MEM_EXECUTABLE",
                                        "name": "ESP_SYSTEM_PMP_LP_CORE_RESERVE_MEM_EXECUTABLE",
                                        "range": null,
                                        "title": "Make LP core reserved memory executable from HP core",
                                        "type": "bool"
                                    }
                                ],
                                "depends_on": "SOC_CPU_IDRAM_SPLIT_USING_PMP && !SECURE_ENABLE_TEE",
                                "help": "If enabled, the CPU watches all the memory access and raises an exception in case\nof any memory violation. This feature automatically splits\nthe SRAM memory, using PMP, into data and instruction segments and sets Read/Execute permissions\nfor the instruction part (below given splitting address) and Read/Write permissions\nfor the data part (above the splitting address). The memory protection is effective\non all access through the IRAM0 and DRAM0 buses.",
                                "id": "ESP_SYSTEM_PMP_IDRAM_SPLIT",
                                "name": "ESP_SYSTEM_PMP_IDRAM_SPLIT",
                                "range": null,
                                "title": "Enable IRAM/DRAM split protection",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "SECURE_ENABLE_TEE",
                                "help": "This option enables the default memory protection provided by TEE.",
                                "id": "ESP_SYSTEM_MEMPROT_FEATURE_VIA_TEE",
                                "name": "ESP_SYSTEM_MEMPROT_FEATURE_VIA_TEE",
                                "range": null,
                                "title": "Enable memory protection (via TEE)",
                                "type": "bool"
                            },
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": "ESP_SYSTEM_MEMPROT_FEATURE",
                                        "help": "Once locked, memory protection settings cannot be changed anymore.\nThe lock is reset only on the chip startup.",
                                        "id": "ESP_SYSTEM_MEMPROT_FEATURE_LOCK",
                                        "name": "ESP_SYSTEM_MEMPROT_FEATURE_LOCK",
                                        "range": null,
                                        "title": "Lock memory protection settings",
                                        "type": "bool"
                                    }
                                ],
                                "depends_on": "SOC_MEMPROT_SUPPORTED",
                                "help": "If enabled, the permission control module watches all the memory access and fires the panic handler\nif a permission violation is detected. This feature automatically splits\nthe SRAM memory into data and instruction segments and sets Read/Execute permissions\nfor the instruction part (below given splitting address) and Read/Write permissions\nfor the data part (above the splitting address). The memory protection is effective\non all access through the IRAM0 and DRAM0 buses.",
                                "id": "ESP_SYSTEM_MEMPROT_FEATURE",
                                "name": "ESP_SYSTEM_MEMPROT_FEATURE",
                                "range": null,
                                "title": "Enable memory protection",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "id": "component-config-esp-system-settings-memory-protection",
                        "title": "Memory protection",
                        "type": "menu"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Config system event queue size in different application.",
                        "id": "ESP_SYSTEM_EVENT_QUEUE_SIZE",
                        "name": "ESP_SYSTEM_EVENT_QUEUE_SIZE",
                        "range": null,
                        "title": "System event queue size",
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Config system event task stack size in different application.",
                        "id": "ESP_SYSTEM_EVENT_TASK_STACK_SIZE",
                        "name": "ESP_SYSTEM_EVENT_TASK_STACK_SIZE",
                        "range": null,
                        "title": "Event loop task stack size",
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Configure the \"main task\" stack size. This is the stack of the task\nwhich calls app_main(). If app_main() returns then this task is deleted\nand its stack memory is freed.",
                        "id": "ESP_MAIN_TASK_STACK_SIZE",
                        "name": "ESP_MAIN_TASK_STACK_SIZE",
                        "range": null,
                        "title": "Main task stack size",
                        "type": "int"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "<choice ESP_MAIN_TASK_AFFINITY>",
                                "help": null,
                                "id": "ESP_MAIN_TASK_AFFINITY_CPU0",
                                "name": "ESP_MAIN_TASK_AFFINITY_CPU0",
                                "range": null,
                                "title": "CPU0",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "!FREERTOS_UNICORE && <choice ESP_MAIN_TASK_AFFINITY>",
                                "help": null,
                                "id": "ESP_MAIN_TASK_AFFINITY_CPU1",
                                "name": "ESP_MAIN_TASK_AFFINITY_CPU1",
                                "range": null,
                                "title": "CPU1",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice ESP_MAIN_TASK_AFFINITY>",
                                "help": null,
                                "id": "ESP_MAIN_TASK_AFFINITY_NO_AFFINITY",
                                "name": "ESP_MAIN_TASK_AFFINITY_NO_AFFINITY",
                                "range": null,
                                "title": "No affinity",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "help": "Configure the \"main task\" core affinity. This is the used core of the task\nwhich calls app_main(). If app_main() returns then this task is deleted.",
                        "id": "component-config-esp-system-settings-main-task-core-affinity",
                        "name": "ESP_MAIN_TASK_AFFINITY",
                        "title": "Main task core affinity",
                        "type": "choice"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": null,
                        "id": "ESP_MAIN_TASK_AFFINITY",
                        "name": "ESP_MAIN_TASK_AFFINITY",
                        "range": null,
                        "title": null,
                        "type": "hex"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Minimal value of size, in bytes, accepted to execute a expression\nwith shared stack.",
                        "id": "ESP_MINIMAL_SHARED_STACK_SIZE",
                        "name": "ESP_MINIMAL_SHARED_STACK_SIZE",
                        "range": null,
                        "title": "Minimal allowed size for shared stack",
                        "type": "int"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "<choice ESP_CONSOLE_UART>",
                                "help": null,
                                "id": "ESP_CONSOLE_UART_DEFAULT",
                                "name": "ESP_CONSOLE_UART_DEFAULT",
                                "range": null,
                                "title": "Default: UART0",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "(IDF_TARGET_ESP32S2 || IDF_TARGET_ESP32S3) && !TINY_USB && <choice ESP_CONSOLE_UART>",
                                "help": null,
                                "id": "ESP_CONSOLE_USB_CDC",
                                "name": "ESP_CONSOLE_USB_CDC",
                                "range": null,
                                "title": "USB CDC",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "SOC_USB_SERIAL_JTAG_SUPPORTED && <choice ESP_CONSOLE_UART>",
                                "help": null,
                                "id": "ESP_CONSOLE_USB_SERIAL_JTAG",
                                "name": "ESP_CONSOLE_USB_SERIAL_JTAG",
                                "range": null,
                                "title": "USB Serial/JTAG Controller",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice ESP_CONSOLE_UART>",
                                "help": null,
                                "id": "ESP_CONSOLE_UART_CUSTOM",
                                "name": "ESP_CONSOLE_UART_CUSTOM",
                                "range": null,
                                "title": "Custom UART",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice ESP_CONSOLE_UART>",
                                "help": null,
                                "id": "ESP_CONSOLE_NONE",
                                "name": "ESP_CONSOLE_NONE",
                                "range": null,
                                "title": "None",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "help": "Select where to send console output (through stdout and stderr).\n\n- Default is to use UART0 on pre-defined GPIOs.\n- If \"Custom\" is selected, UART0 or UART1 can be chosen,\n  and any pins can be selected.\n- If \"None\" is selected, there will be no console output on any UART, except\n  for initial output from ROM bootloader. This ROM output can be suppressed by\n  GPIO strapping or EFUSE, refer to chip datasheet for details.\n- On chips with USB OTG peripheral, \"USB CDC\" option redirects output to the\n  CDC port. This option uses the CDC driver in the chip ROM.\n  This option is incompatible with TinyUSB stack.\n- On chips with an USB serial/JTAG debug controller, selecting the option\n  for that redirects output to the CDC/ACM (serial port emulation) component\n  of that device.",
                        "id": "component-config-esp-system-settings-channel-for-console-output",
                        "name": "ESP_CONSOLE_UART",
                        "title": "Channel for console output",
                        "type": "choice"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "<choice ESP_CONSOLE_SECONDARY>",
                                "help": null,
                                "id": "ESP_CONSOLE_SECONDARY_NONE",
                                "name": "ESP_CONSOLE_SECONDARY_NONE",
                                "range": null,
                                "title": "No secondary console",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "!ESP_CONSOLE_USB_SERIAL_JTAG && <choice ESP_CONSOLE_SECONDARY>",
                                "help": "This option supports output through USB_SERIAL_JTAG port when the UART0 port is not connected.\nThe output currently only supports non-blocking mode without using the console.\nIf you want to output in blocking mode with REPL or input through USB_SERIAL_JTAG port,\nplease change the primary config to ESP_CONSOLE_USB_SERIAL_JTAG above.",
                                "id": "ESP_CONSOLE_SECONDARY_USB_SERIAL_JTAG",
                                "name": "ESP_CONSOLE_SECONDARY_USB_SERIAL_JTAG",
                                "range": null,
                                "title": "USB_SERIAL_JTAG PORT",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "SOC_USB_SERIAL_JTAG_SUPPORTED",
                        "help": "This secondary option supports output through other specific port like USB_SERIAL_JTAG\nwhen UART0 port as a primary is selected but not connected. This secondary output currently only supports\nnon-blocking mode without using REPL. If you want to output in blocking mode with REPL or\ninput through this secondary port, please change the primary config to this port\nin `Channel for console output` menu.",
                        "id": "component-config-esp-system-settings-channel-for-console-secondary-output",
                        "name": "ESP_CONSOLE_SECONDARY",
                        "title": "Channel for console secondary output",
                        "type": "choice"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": null,
                        "id": "ESP_CONSOLE_USB_SERIAL_JTAG_ENABLED",
                        "name": "ESP_CONSOLE_USB_SERIAL_JTAG_ENABLED",
                        "range": null,
                        "title": null,
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": null,
                        "id": "ESP_CONSOLE_UART",
                        "name": "ESP_CONSOLE_UART",
                        "range": null,
                        "title": null,
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "<choice ESP_CONSOLE_UART_NUM>",
                                "help": null,
                                "id": "ESP_CONSOLE_UART_CUSTOM_NUM_0",
                                "name": "ESP_CONSOLE_UART_CUSTOM_NUM_0",
                                "range": null,
                                "title": "UART0",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice ESP_CONSOLE_UART_NUM>",
                                "help": null,
                                "id": "ESP_CONSOLE_UART_CUSTOM_NUM_1",
                                "name": "ESP_CONSOLE_UART_CUSTOM_NUM_1",
                                "range": null,
                                "title": "UART1",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "ESP_CONSOLE_UART_CUSTOM",
                        "help": "This UART peripheral is used for console output from the ESP-IDF Bootloader and the app.\n\nIf the configuration is different in the Bootloader binary compared to the app binary, UART\nis reconfigured after the bootloader exits and the app starts.\n\nDue to an ESP32 ROM bug, UART2 is not supported for console output\nvia esp_rom_printf.",
                        "id": "component-config-esp-system-settings-uart-peripheral-to-use-for-console-output-0-1-",
                        "name": "ESP_CONSOLE_UART_NUM",
                        "title": "UART peripheral to use for console output (0-1)",
                        "type": "choice"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": null,
                        "id": "ESP_CONSOLE_UART_NUM",
                        "name": "ESP_CONSOLE_UART_NUM",
                        "range": null,
                        "title": null,
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": null,
                        "id": "ESP_CONSOLE_ROM_SERIAL_PORT_NUM",
                        "name": "ESP_CONSOLE_ROM_SERIAL_PORT_NUM",
                        "range": null,
                        "title": null,
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": "ESP_CONSOLE_UART_CUSTOM",
                        "help": "This GPIO is used for console UART TX output in the ESP-IDF Bootloader and the app (including\nboot log output and default standard output and standard error of the app). Value -1 means to\ncontinue using the default console UART TX pin.\n\nIf the configuration is different in the Bootloader binary compared to the app binary, UART\nis reconfigured after the bootloader exits and the app starts.",
                        "id": "ESP_CONSOLE_UART_TX_GPIO",
                        "name": "ESP_CONSOLE_UART_TX_GPIO",
                        "range": null,
                        "title": "UART TX on GPIO<num>",
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": "ESP_CONSOLE_UART_CUSTOM",
                        "help": "This GPIO is used for console UART RX input in the ESP-IDF Bootloader and the app (including\ndefault standard input of the app). Value -1 means to continue using the default console UART\nRX pin.\n\nNote: The default ESP-IDF Bootloader configures this pin but doesn't read anything from the UART.\n\nIf the configuration is different in the Bootloader binary compared to the app binary, UART\nis reconfigured after the bootloader exits and the app starts.",
                        "id": "ESP_CONSOLE_UART_RX_GPIO",
                        "name": "ESP_CONSOLE_UART_RX_GPIO",
                        "range": null,
                        "title": "UART RX on GPIO<num>",
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": "ESP_CONSOLE_UART",
                        "help": "This baud rate is used by both the ESP-IDF Bootloader and the app (including\nboot log output and default standard input/output/error of the app).\n\nThe app's maximum baud rate depends on the UART clock source. If Power Management is disabled,\nthe UART clock source is the APB clock and all baud rates in the available range will be sufficiently\naccurate. If Power Management is enabled, REF_TICK clock source is used so the baud rate is divided\nfrom 1MHz. Baud rates above 1Mbps are not possible and values between 500Kbps and 1Mbps may not be\naccurate.\n\nIf the configuration is different in the Bootloader binary compared to the app binary, UART\nis reconfigured after the bootloader exits and the app starts.",
                        "id": "ESP_CONSOLE_UART_BAUDRATE",
                        "name": "ESP_CONSOLE_UART_BAUDRATE",
                        "range": [
                            1200,
                            4000000
                        ],
                        "title": "UART console baud rate",
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": "ESP_CONSOLE_USB_CDC",
                        "help": "Set the size of USB CDC RX buffer. Increase the buffer size if your application\nis often receiving data over USB CDC.",
                        "id": "ESP_CONSOLE_USB_CDC_RX_BUF_SIZE",
                        "name": "ESP_CONSOLE_USB_CDC_RX_BUF_SIZE",
                        "range": null,
                        "title": "Size of USB CDC RX buffer",
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": "ESP_CONSOLE_USB_CDC",
                        "help": "If enabled, esp_rom_printf and ESP_EARLY_LOG output will also be sent over USB CDC.\nDisabling this option saves about 1kB or RAM.",
                        "id": "ESP_CONSOLE_USB_CDC_SUPPORT_ETS_PRINTF",
                        "name": "ESP_CONSOLE_USB_CDC_SUPPORT_ETS_PRINTF",
                        "range": null,
                        "title": "Enable esp_rom_printf / ESP_EARLY_LOG via USB CDC",
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "ESP_INT_WDT",
                                "help": "The timeout of the watchdog, in milliseconds. Make this higher than the FreeRTOS tick rate.",
                                "id": "ESP_INT_WDT_TIMEOUT_MS",
                                "name": "ESP_INT_WDT_TIMEOUT_MS",
                                "range": [
                                    10,
                                    10000
                                ],
                                "title": "Interrupt watchdog timeout (ms)",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": "ESP_INT_WDT && !FREERTOS_UNICORE",
                                "help": "Also detect if interrupts on CPU 1 are disabled for too long.",
                                "id": "ESP_INT_WDT_CHECK_CPU1",
                                "name": "ESP_INT_WDT_CHECK_CPU1",
                                "range": null,
                                "title": "Also watch CPU1 tick interrupt",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "help": "This watchdog timer can detect if the FreeRTOS tick interrupt has not been called for a certain time,\neither because a task turned off interrupts and did not turn them on for a long time, or because an\ninterrupt handler did not return. It will try to invoke the panic handler first and failing that\nreset the SoC.",
                        "id": "ESP_INT_WDT",
                        "name": "ESP_INT_WDT",
                        "range": null,
                        "title": "Interrupt watchdog",
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "ESP_TASK_WDT_EN",
                                "help": null,
                                "id": "ESP_TASK_WDT_USE_ESP_TIMER",
                                "name": "ESP_TASK_WDT_USE_ESP_TIMER",
                                "range": null,
                                "title": null,
                                "type": "bool"
                            },
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": "ESP_TASK_WDT_INIT",
                                        "help": "If this option is enabled, the Task Watchdog Timer will be configured to\ntrigger the panic handler when it times out. This can also be configured\nat run time (see Task Watchdog Timer API Reference)",
                                        "id": "ESP_TASK_WDT_PANIC",
                                        "name": "ESP_TASK_WDT_PANIC",
                                        "range": null,
                                        "title": "Invoke panic handler on Task Watchdog timeout",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "ESP_TASK_WDT_INIT",
                                        "help": "Timeout period configuration for the Task Watchdog Timer in seconds.\nThis is also configurable at run time (see Task Watchdog Timer API Reference)",
                                        "id": "ESP_TASK_WDT_TIMEOUT_S",
                                        "name": "ESP_TASK_WDT_TIMEOUT_S",
                                        "range": [
                                            1,
                                            60
                                        ],
                                        "title": "Task Watchdog timeout period (seconds)",
                                        "type": "int"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "ESP_TASK_WDT_INIT",
                                        "help": "If this option is enabled, the Task Watchdog Timer will watch the CPU0\nIdle Task. Having the Task Watchdog watch the Idle Task allows for detection\nof CPU starvation as the Idle Task not being called is usually a symptom of\nCPU starvation. Starvation of the Idle Task is detrimental as FreeRTOS household\ntasks depend on the Idle Task getting some runtime every now and then.",
                                        "id": "ESP_TASK_WDT_CHECK_IDLE_TASK_CPU0",
                                        "name": "ESP_TASK_WDT_CHECK_IDLE_TASK_CPU0",
                                        "range": null,
                                        "title": "Watch CPU0 Idle Task",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "ESP_TASK_WDT_INIT && !FREERTOS_UNICORE",
                                        "help": "If this option is enabled, the Task Watchdog Timer will wach the CPU1\nIdle Task.",
                                        "id": "ESP_TASK_WDT_CHECK_IDLE_TASK_CPU1",
                                        "name": "ESP_TASK_WDT_CHECK_IDLE_TASK_CPU1",
                                        "range": null,
                                        "title": "Watch CPU1 Idle Task",
                                        "type": "bool"
                                    }
                                ],
                                "depends_on": "ESP_TASK_WDT_EN",
                                "help": "Enabling this option will cause the Task Watchdog Timer to be initialized\nautomatically at startup.",
                                "id": "ESP_TASK_WDT_INIT",
                                "name": "ESP_TASK_WDT_INIT",
                                "range": null,
                                "title": "Initialize Task Watchdog Timer on startup",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "help": "The Task Watchdog Timer can be used to make sure individual tasks are still\nrunning. Enabling this option will enable the Task Watchdog Timer. It can be\neither initialized automatically at startup or initialized after startup\n(see Task Watchdog Timer API Reference)",
                        "id": "ESP_TASK_WDT_EN",
                        "name": "ESP_TASK_WDT_EN",
                        "range": null,
                        "title": "Enable Task Watchdog Timer",
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "ESP_XT_WDT",
                                "help": "Timeout period configuration for the XTAL32K watchdog timer based on RTC_CLK.",
                                "id": "ESP_XT_WDT_TIMEOUT",
                                "name": "ESP_XT_WDT_TIMEOUT",
                                "range": null,
                                "title": "XTAL32K watchdog timeout period",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": "ESP_XT_WDT",
                                "help": "Enable this to automatically switch to BACKUP32K_CLK as the source of RTC_SLOW_CLK when\nthe watchdog timer expires.",
                                "id": "ESP_XT_WDT_BACKUP_CLK_ENABLE",
                                "name": "ESP_XT_WDT_BACKUP_CLK_ENABLE",
                                "range": null,
                                "title": "Automatically switch to BACKUP32K_CLK when timer expires",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "SOC_XT_WDT_SUPPORTED && (ESP_SYSTEM_RTC_EXT_OSC || ESP_SYSTEM_RTC_EXT_XTAL)",
                        "help": "This watchdog timer can detect oscillation failure of the XTAL32K_CLK. When such a failure\nis detected the hardware can be set up to automatically switch to BACKUP32K_CLK and generate\nan interrupt.",
                        "id": "ESP_XT_WDT",
                        "name": "ESP_XT_WDT",
                        "range": null,
                        "title": "Initialize XTAL32K watchdog timer on startup",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "If this option is disabled (default), the panic handler code is placed in flash not IRAM.\nThis means that if ESP-IDF crashes while flash cache is disabled, the panic handler will\nautomatically re-enable flash cache before running GDB Stub or Core Dump. This adds some minor\nrisk, if the flash cache status is also corrupted during the crash.\n\nIf this option is enabled, the panic handler code (including required UART functions) is placed\nin IRAM. This may be necessary to debug some complex issues with crashes while flash cache is\ndisabled (for example, when writing to SPI flash) or when flash cache is corrupted when an exception\nis triggered.",
                        "id": "ESP_PANIC_HANDLER_IRAM",
                        "name": "ESP_PANIC_HANDLER_IRAM",
                        "range": null,
                        "title": "Place panic handler code in IRAM",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "!ESP32_TRAX && !ESP32S2_TRAX && !ESP32S3_TRAX",
                        "help": "Debug stubs are used by OpenOCD to execute pre-compiled onboard code\nwhich does some useful debugging stuff, e.g. GCOV data dump.",
                        "id": "ESP_DEBUG_STUBS_ENABLE",
                        "name": "ESP_DEBUG_STUBS_ENABLE",
                        "range": null,
                        "title": "OpenOCD debug stubs",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "SOC_DEBUG_HAVE_OCD_STUB_BINS",
                        "help": "OpenOCD uses stub code to access flash during programming or when inserting and removing\nSW flash breakpoints.\nTo execute stub code, OpenOCD allocates memory on the target device, backs up the existing memory,\nloads the stub binary, runs the binary, and then restores the original memory.\nThis process can be time-consuming, especially when using USB serial JTAG.\nBy enabling this option, 8K of memory in RAM will be preallocated with the stub code,\neliminating the need to back up and restore the memory region.",
                        "id": "ESP_DEBUG_INCLUDE_OCD_STUB_BINS",
                        "name": "ESP_DEBUG_INCLUDE_OCD_STUB_BINS",
                        "range": null,
                        "title": "Preload OpenOCD stub binaries to speed up debugging. 8K memory will be reserved",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "The FreeRTOS panic and unhandled exception handers can detect a JTAG OCD debugger and\ninstead of panicking, have the debugger stop on the offending instruction.",
                        "id": "ESP_DEBUG_OCDAWARE",
                        "name": "ESP_DEBUG_OCDAWARE",
                        "range": null,
                        "title": "Make exception and panic handlers JTAG/OCD aware",
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "IDF_TARGET_ESP32 && <choice ESP_SYSTEM_CHECK_INT_LEVEL>",
                                "help": "Using level 5 interrupt for Interrupt Watchdog, IPC_ISR and other system checks.",
                                "id": "ESP_SYSTEM_CHECK_INT_LEVEL_5",
                                "name": "ESP_SYSTEM_CHECK_INT_LEVEL_5",
                                "range": null,
                                "title": "Level 5 interrupt",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "!BTDM_CTRL_HLI && <choice ESP_SYSTEM_CHECK_INT_LEVEL>",
                                "help": "Using level 4 interrupt for Interrupt Watchdog, IPC_ISR and other system checks.",
                                "id": "ESP_SYSTEM_CHECK_INT_LEVEL_4",
                                "name": "ESP_SYSTEM_CHECK_INT_LEVEL_4",
                                "range": null,
                                "title": "Level 4 interrupt",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "help": "Interrupt level to use for Interrupt Watchdog, IPC_ISR and other system checks.",
                        "id": "component-config-esp-system-settings-interrupt-level-to-use-for-interrupt-watchdog-and-other-system-checks",
                        "name": "ESP_SYSTEM_CHECK_INT_LEVEL",
                        "title": "Interrupt level to use for Interrupt Watchdog and other system checks",
                        "type": "choice"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "If set, the first time the app boots it will disable the BASIC ROM Console\npermanently (by burning an eFuse).\n\nOtherwise, the BASIC ROM Console starts on reset if no valid bootloader is\nread from the flash.\n\n(Enabling secure boot also disables the BASIC ROM Console by default.)",
                        "id": "ESP32_DISABLE_BASIC_ROM_CONSOLE",
                        "name": "ESP32_DISABLE_BASIC_ROM_CONSOLE",
                        "range": null,
                        "title": "Permanently disable BASIC ROM Console",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "!ESP_SYSTEM_SINGLE_CORE_MODE && SPIRAM",
                        "help": null,
                        "id": "ESP32_ECO3_CACHE_LOCK_FIX",
                        "name": "ESP32_ECO3_CACHE_LOCK_FIX",
                        "range": null,
                        "title": null,
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "SOC_ASSIST_DEBUG_SUPPORTED && !SECURE_ENABLE_TEE",
                        "help": "This config allows to trigger a panic interrupt when Stack Pointer register goes out of allocated stack\nmemory bounds.",
                        "id": "ESP_SYSTEM_HW_STACK_GUARD",
                        "name": "ESP_SYSTEM_HW_STACK_GUARD",
                        "range": null,
                        "title": "Hardware stack guard",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "IDF_TARGET_ESP32C2 || IDF_TARGET_ESP32S3 || IDF_TARGET_ESP32C6 || IDF_TARGET_ESP32H2",
                        "help": "This configuration helps to address an BBPLL inaccurate issue when boot from certain bootloader version,\nwhich may increase about the boot-up time by about 200 us. Disable this when your bootloader is built with\nESP-IDF version v5.2 and above.",
                        "id": "ESP_SYSTEM_BBPLL_RECALIB",
                        "name": "ESP_SYSTEM_BBPLL_RECALIB",
                        "range": null,
                        "title": "Re-calibration BBPLL at startup",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "SOC_ASSIST_DEBUG_SUPPORTED",
                        "help": "This option will enable the PC recording function of assist_debug module. The PC value of the CPU will be\nrecorded to PC record register in assist_debug module in real time. When an exception occurs and the CPU\nis reset, this register will be kept, then we can use the recorded PC to debug the causes of the reset.",
                        "id": "ESP_SYSTEM_HW_PC_RECORD",
                        "name": "ESP_SYSTEM_HW_PC_RECORD",
                        "range": null,
                        "title": "Hardware PC recording",
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "id": "component-config-esp-system-settings",
                "title": "ESP System Settings",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Configure the IPC tasks stack size. An IPC task runs on each core (in dual core mode), and allows for\ncross-core function calls. See IPC documentation for more details. The default IPC stack size should be\nenough for most common simple use cases. However, users can increase/decrease the stack size to their\nneeds.",
                        "id": "ESP_IPC_TASK_STACK_SIZE",
                        "name": "ESP_IPC_TASK_STACK_SIZE",
                        "range": [
                            512,
                            65536
                        ],
                        "title": "Inter-Processor Call (IPC) task stack size",
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": "!FREERTOS_UNICORE",
                        "help": "If this option is not enabled then the IPC task will keep behavior same as prior to that of ESP-IDF v4.0,\nhence IPC task will run at (configMAX_PRIORITIES - 1) priority.",
                        "id": "ESP_IPC_USES_CALLERS_PRIORITY",
                        "name": "ESP_IPC_USES_CALLERS_PRIORITY",
                        "range": null,
                        "title": "IPC runs at caller's priority",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "The IPC ISR feature is similar to the IPC feature except that the callback function is executed in the\ncontext of a High Priority Interrupt. The IPC ISR feature is intended for low latency execution of simple\ncallbacks written in assembly on another CPU. Due to being run in a High Priority Interrupt, the assembly\ncallbacks must be written with particular restrictions (see \"IPC\" and \"High-Level Interrupt\" docs for more\ndetails).",
                        "id": "ESP_IPC_ISR_ENABLE",
                        "name": "ESP_IPC_ISR_ENABLE",
                        "range": null,
                        "title": null,
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "id": "component-config-ipc-inter-processor-call-",
                "title": "IPC (Inter-Processor Call)",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "If enabled, esp_timer_dump will dump information such as number of times the timer was started,\nnumber of times the timer has triggered, and the total time it took for the callback to run.\nThis option has some effect on timer performance and the amount of memory used for timer\nstorage, and should only be used for debugging/testing purposes.",
                        "id": "ESP_TIMER_PROFILING",
                        "name": "ESP_TIMER_PROFILING",
                        "range": null,
                        "title": "Enable esp_timer profiling features",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": null,
                        "id": "ESP_TIME_FUNCS_USE_RTC_TIMER",
                        "name": "ESP_TIME_FUNCS_USE_RTC_TIMER",
                        "range": null,
                        "title": null,
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": null,
                        "id": "ESP_TIME_FUNCS_USE_ESP_TIMER",
                        "name": "ESP_TIME_FUNCS_USE_ESP_TIMER",
                        "range": null,
                        "title": null,
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": null,
                        "id": "ESP_TIME_FUNCS_USE_NONE",
                        "name": "ESP_TIME_FUNCS_USE_NONE",
                        "range": null,
                        "title": null,
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Configure the stack size of \"timer_task\" task. This task is used\nto dispatch callbacks of timers created using ets_timer and esp_timer\nAPIs. If you are seing stack overflow errors in timer task, increase\nthis value.\n\nNote that this is not the same as FreeRTOS timer task. To configure\nFreeRTOS timer task size, see \"FreeRTOS timer task stack size\" option\nin \"FreeRTOS\".",
                        "id": "ESP_TIMER_TASK_STACK_SIZE",
                        "name": "ESP_TIMER_TASK_STACK_SIZE",
                        "range": [
                            2048,
                            65536
                        ],
                        "title": "High-resolution timer task stack size",
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "This sets the interrupt priority level for esp_timer ISR.\nA higher value reduces interrupt latency by minimizing the timer processing delay.",
                        "id": "ESP_TIMER_INTERRUPT_LEVEL",
                        "name": "ESP_TIMER_INTERRUPT_LEVEL",
                        "range": [
                            1,
                            3
                        ],
                        "title": "Interrupt level",
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "This shows some hidden features of esp_timer.\nNote that they may break other features, use them with care.",
                        "id": "ESP_TIMER_SHOW_EXPERIMENTAL",
                        "name": "ESP_TIMER_SHOW_EXPERIMENTAL",
                        "range": null,
                        "title": "show esp_timer's experimental features",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": null,
                        "id": "ESP_TIMER_TASK_AFFINITY",
                        "name": "ESP_TIMER_TASK_AFFINITY",
                        "range": null,
                        "title": null,
                        "type": "hex"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "<choice ESP_TIMER_TASK_AFFINITY>",
                                "help": null,
                                "id": "ESP_TIMER_TASK_AFFINITY_CPU0",
                                "name": "ESP_TIMER_TASK_AFFINITY_CPU0",
                                "range": null,
                                "title": "CPU0",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "!FREERTOS_UNICORE && ESP_TIMER_SHOW_EXPERIMENTAL && <choice ESP_TIMER_TASK_AFFINITY>",
                                "help": null,
                                "id": "ESP_TIMER_TASK_AFFINITY_CPU1",
                                "name": "ESP_TIMER_TASK_AFFINITY_CPU1",
                                "range": null,
                                "title": "CPU1",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "!FREERTOS_UNICORE && ESP_TIMER_SHOW_EXPERIMENTAL && <choice ESP_TIMER_TASK_AFFINITY>",
                                "help": null,
                                "id": "ESP_TIMER_TASK_AFFINITY_NO_AFFINITY",
                                "name": "ESP_TIMER_TASK_AFFINITY_NO_AFFINITY",
                                "range": null,
                                "title": "No affinity",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "help": "The default settings: timer TASK on CPU0 and timer ISR on CPU0.\nOther settings may help in certain cases, but note that they may break\nother features, use them with care.\n- \"CPU0\": (default) esp_timer task is processed by CPU0.\n- \"CPU1\": esp_timer task is processed by CPU1.\n- \"No affinity\": esp_timer task can be processed by any CPU.",
                        "id": "component-config-esp-timer-high-resolution-timer--esp_timer-task-core-affinity",
                        "name": "ESP_TIMER_TASK_AFFINITY",
                        "title": "esp_timer task core affinity",
                        "type": "choice"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "<choice ESP_TIMER_ISR_AFFINITY>",
                                "help": null,
                                "id": "ESP_TIMER_ISR_AFFINITY_CPU0",
                                "name": "ESP_TIMER_ISR_AFFINITY_CPU0",
                                "range": null,
                                "title": "CPU0",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "!FREERTOS_UNICORE && ESP_TIMER_SHOW_EXPERIMENTAL && <choice ESP_TIMER_ISR_AFFINITY>",
                                "help": null,
                                "id": "ESP_TIMER_ISR_AFFINITY_CPU1",
                                "name": "ESP_TIMER_ISR_AFFINITY_CPU1",
                                "range": null,
                                "title": "CPU1",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "!FREERTOS_UNICORE && ESP_TIMER_SHOW_EXPERIMENTAL && <choice ESP_TIMER_ISR_AFFINITY>",
                                "help": null,
                                "id": "ESP_TIMER_ISR_AFFINITY_NO_AFFINITY",
                                "name": "ESP_TIMER_ISR_AFFINITY_NO_AFFINITY",
                                "range": null,
                                "title": "No affinity",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "help": "The default settings: timer TASK on CPU0 and timer ISR on CPU0.\nOther settings may help in certain cases, but note that they may break\nother features, use them with care.\n- \"CPU0\": (default) timer interrupt is processed by CPU0.\n- \"CPU1\": timer interrupt is processed by CPU1.\n- \"No affinity\": timer interrupt can be processed by any CPU. It helps\nto reduce latency but there is a disadvantage it leads to the timer ISR\nrunning on every core. It increases the CPU time usage for timer ISRs\nby N on an N-core system.",
                        "id": "component-config-esp-timer-high-resolution-timer--timer-interrupt-core-affinity",
                        "name": "ESP_TIMER_ISR_AFFINITY",
                        "title": "timer interrupt core affinity",
                        "type": "choice"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Allows using ESP_TIMER_ISR dispatch method (ESP_TIMER_TASK dispatch method is also avalible).\n- ESP_TIMER_TASK - Timer callbacks are dispatched from a high-priority esp_timer task.\n- ESP_TIMER_ISR - Timer callbacks are dispatched directly from the timer interrupt handler.\nThe ISR dispatch can be used, in some cases, when a callback is very simple\nor need a lower-latency.",
                        "id": "ESP_TIMER_SUPPORTS_ISR_DISPATCH_METHOD",
                        "name": "ESP_TIMER_SUPPORTS_ISR_DISPATCH_METHOD",
                        "range": null,
                        "title": "Support ISR dispatch method",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "IDF_TARGET_ESP32",
                        "help": null,
                        "id": "ESP_TIMER_IMPL_TG0_LAC",
                        "name": "ESP_TIMER_IMPL_TG0_LAC",
                        "range": null,
                        "title": null,
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "!IDF_TARGET_ESP32",
                        "help": null,
                        "id": "ESP_TIMER_IMPL_SYSTIMER",
                        "name": "ESP_TIMER_IMPL_SYSTIMER",
                        "range": null,
                        "title": null,
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "id": "component-config-esp-timer-high-resolution-timer-",
                "title": "ESP Timer (High Resolution Timer)",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "!IDF_TARGET_ESP32P4",
                                "help": "Amazon has released an SMP version of the FreeRTOS Kernel which can be found via the following link:\nhttps://github.com/FreeRTOS/FreeRTOS-Kernel/tree/smp\n\nIDF has added an experimental port of this SMP kernel located in\ncomponents/freertos/FreeRTOS-Kernel-SMP. Enabling this option will cause IDF to use the Amazon SMP\nkernel. Note that THIS FEATURE IS UNDER ACTIVE DEVELOPMENT, users use this at their own risk.\n\nLeaving this option disabled will mean the IDF FreeRTOS kernel is used instead, which is located in:\ncomponents/freertos/FreeRTOS-Kernel. Both kernel versions are SMP capable, but differ in\ntheir implementation and features.",
                                "id": "FREERTOS_SMP",
                                "name": "FREERTOS_SMP",
                                "range": null,
                                "title": "Run the Amazon SMP FreeRTOS kernel instead (FEATURE UNDER DEVELOPMENT)",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "This version of FreeRTOS normally takes control of all cores of the CPU. Select this if you only want\nto start it on the first core. This is needed when e.g. another process needs complete control over the\nsecond core.",
                                "id": "FREERTOS_UNICORE",
                                "name": "FREERTOS_UNICORE",
                                "range": null,
                                "title": "Run FreeRTOS only on first core",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "Sets the FreeRTOS tick interrupt frequency in Hz (see configTICK_RATE_HZ documentation for more\ndetails).",
                                "id": "FREERTOS_HZ",
                                "name": "FREERTOS_HZ",
                                "range": [
                                    1,
                                    1000
                                ],
                                "title": "configTICK_RATE_HZ",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": "FREERTOS_UNICORE && !FREERTOS_SMP",
                                "help": "Enables port specific task selection method. This option can speed up the search of ready tasks\nwhen scheduling (see configUSE_PORT_OPTIMISED_TASK_SELECTION documentation for more details).",
                                "id": "FREERTOS_OPTIMIZED_SCHEDULER",
                                "name": "FREERTOS_OPTIMIZED_SCHEDULER",
                                "range": null,
                                "title": "configUSE_PORT_OPTIMISED_TASK_SELECTION",
                                "type": "bool"
                            },
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": "<choice FREERTOS_CHECK_STACKOVERFLOW>",
                                        "help": "Do not check for stack overflows (configCHECK_FOR_STACK_OVERFLOW = 0)",
                                        "id": "FREERTOS_CHECK_STACKOVERFLOW_NONE",
                                        "name": "FREERTOS_CHECK_STACKOVERFLOW_NONE",
                                        "range": null,
                                        "title": "No checking",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "<choice FREERTOS_CHECK_STACKOVERFLOW>",
                                        "help": "Check for stack overflows on each context switch by checking if the stack pointer is in a valid\nrange. Quick but does not detect stack overflows that happened between context switches\n(configCHECK_FOR_STACK_OVERFLOW = 1)",
                                        "id": "FREERTOS_CHECK_STACKOVERFLOW_PTRVAL",
                                        "name": "FREERTOS_CHECK_STACKOVERFLOW_PTRVAL",
                                        "range": null,
                                        "title": "Check by stack pointer value (Method 1)",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "<choice FREERTOS_CHECK_STACKOVERFLOW>",
                                        "help": "Places some magic bytes at the end of the stack area and on each context switch, check if these\nbytes are still intact. More thorough than just checking the pointer, but also slightly slower.\n(configCHECK_FOR_STACK_OVERFLOW = 2)",
                                        "id": "FREERTOS_CHECK_STACKOVERFLOW_CANARY",
                                        "name": "FREERTOS_CHECK_STACKOVERFLOW_CANARY",
                                        "range": null,
                                        "title": "Check using canary bytes (Method 2)",
                                        "type": "bool"
                                    }
                                ],
                                "depends_on": null,
                                "help": "Enables FreeRTOS to check for stack overflows (see configCHECK_FOR_STACK_OVERFLOW documentation for\nmore details).\n\nNote: If users do not provide their own ``vApplicationStackOverflowHook()`` function, a default\nfunction will be provided by ESP-IDF.",
                                "id": "component-config-freertos-kernel-configcheck_for_stack_overflow",
                                "name": "FREERTOS_CHECK_STACKOVERFLOW",
                                "title": "configCHECK_FOR_STACK_OVERFLOW",
                                "type": "choice"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "Set the number of thread local storage pointers in each task (see\nconfigNUM_THREAD_LOCAL_STORAGE_POINTERS documentation for more details).\n\nNote: In ESP-IDF, this value must be at least 1. Index 0 is reserved for use by the pthreads API\nthread-local-storage. Other indexes can be used for any desired purpose.",
                                "id": "FREERTOS_THREAD_LOCAL_STORAGE_POINTERS",
                                "name": "FREERTOS_THREAD_LOCAL_STORAGE_POINTERS",
                                "range": [
                                    1,
                                    256
                                ],
                                "title": "configNUM_THREAD_LOCAL_STORAGE_POINTERS",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "Sets the idle task stack size in bytes (see configMINIMAL_STACK_SIZE documentation for more details).\n\nNote:\n\n- ESP-IDF specifies stack sizes in bytes instead of words.\n- The default size is enough for most use cases.\n- The stack size may need to be increased above the default if the app installs idle or thread local\n  storage cleanup hooks that use a lot of stack memory.\n- Conversely, the stack size can be reduced to the minimum if non of the idle features are used.",
                                "id": "FREERTOS_IDLE_TASK_STACKSIZE",
                                "name": "FREERTOS_IDLE_TASK_STACKSIZE",
                                "range": [
                                    768,
                                    32768
                                ],
                                "title": "configMINIMAL_STACK_SIZE (Idle task stack size)",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "Enables the idle task application hook (see configUSE_IDLE_HOOK documentation for more details).\n\nNote:\n\n- The application must provide the hook function ``void vApplicationIdleHook( void );``\n- ``vApplicationIdleHook()`` is called from FreeRTOS idle task(s)\n- The FreeRTOS idle hook is NOT the same as the ESP-IDF Idle Hook, but both can be enabled\n  simultaneously.",
                                "id": "FREERTOS_USE_IDLE_HOOK",
                                "name": "FREERTOS_USE_IDLE_HOOK",
                                "range": null,
                                "title": "configUSE_IDLE_HOOK",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "FREERTOS_SMP",
                                "help": "Enables the minimal idle task application hook (see configUSE_IDLE_HOOK documentation for more\ndetails).\n\nNote:\n\n- The application must provide the hook function ``void vApplicationPassiveIdleHook( void );``\n- ``vApplicationPassiveIdleHook()`` is called from FreeRTOS minimal idle task(s)",
                                "id": "FREERTOS_USE_PASSIVE_IDLE_HOOK",
                                "name": "FREERTOS_USE_PASSIVE_IDLE_HOOK",
                                "range": null,
                                "title": "Use FreeRTOS minimal idle hook",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "Enables the tick hook (see configUSE_TICK_HOOK documentation for more details).\n\nNote:\n\n- The application must provide the hook function ``void vApplicationTickHook( void );``\n- ``vApplicationTickHook()`` is called from FreeRTOS's tick handling function ``xTaskIncrementTick()``\n- The FreeRTOS tick hook is NOT the same as the ESP-IDF Tick Interrupt Hook, but both can be enabled\n  simultaneously.",
                                "id": "FREERTOS_USE_TICK_HOOK",
                                "name": "FREERTOS_USE_TICK_HOOK",
                                "range": null,
                                "title": "configUSE_TICK_HOOK",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "Sets the maximum number of characters for task names (see configMAX_TASK_NAME_LEN documentation for\nmore details).\n\nNote: For most uses, the default of 16 characters is sufficient.",
                                "id": "FREERTOS_MAX_TASK_NAME_LEN",
                                "name": "FREERTOS_MAX_TASK_NAME_LEN",
                                "range": [
                                    1,
                                    256
                                ],
                                "title": "configMAX_TASK_NAME_LEN",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": "!IDF_TARGET_LINUX",
                                "help": "Enable backward compatibility with APIs prior to FreeRTOS v8.0.0. (see\nconfigENABLE_BACKWARD_COMPATIBILITY documentation for more details).",
                                "id": "FREERTOS_ENABLE_BACKWARD_COMPATIBILITY",
                                "name": "FREERTOS_ENABLE_BACKWARD_COMPATIBILITY",
                                "range": null,
                                "title": "configENABLE_BACKWARD_COMPATIBILITY",
                                "type": "bool"
                            },
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": "FREERTOS_USE_TIMERS",
                                        "help": "Sets the timer task's name (see configTIMER_SERVICE_TASK_NAME documentation for more details).",
                                        "id": "FREERTOS_TIMER_SERVICE_TASK_NAME",
                                        "name": "FREERTOS_TIMER_SERVICE_TASK_NAME",
                                        "range": null,
                                        "title": "configTIMER_SERVICE_TASK_NAME",
                                        "type": "string"
                                    },
                                    {
                                        "children": [
                                            {
                                                "children": [],
                                                "depends_on": "<choice FREERTOS_TIMER_SERVICE_TASK_CORE_AFFINITY>",
                                                "help": null,
                                                "id": "FREERTOS_TIMER_TASK_AFFINITY_CPU0",
                                                "name": "FREERTOS_TIMER_TASK_AFFINITY_CPU0",
                                                "range": null,
                                                "title": "CPU0",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "!FREERTOS_UNICORE && <choice FREERTOS_TIMER_SERVICE_TASK_CORE_AFFINITY>",
                                                "help": null,
                                                "id": "FREERTOS_TIMER_TASK_AFFINITY_CPU1",
                                                "name": "FREERTOS_TIMER_TASK_AFFINITY_CPU1",
                                                "range": null,
                                                "title": "CPU1",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice FREERTOS_TIMER_SERVICE_TASK_CORE_AFFINITY>",
                                                "help": null,
                                                "id": "FREERTOS_TIMER_TASK_NO_AFFINITY",
                                                "name": "FREERTOS_TIMER_TASK_NO_AFFINITY",
                                                "range": null,
                                                "title": "No affinity",
                                                "type": "bool"
                                            }
                                        ],
                                        "depends_on": "FREERTOS_USE_TIMERS",
                                        "help": "Sets the timer task's core affinity\n(see configTIMER_SERVICE_TASK_CORE_AFFINITY documentation for more details).",
                                        "id": "component-config-freertos-kernel-configuse_timers-configtimer_service_task_core_affinity",
                                        "name": "FREERTOS_TIMER_SERVICE_TASK_CORE_AFFINITY",
                                        "title": "configTIMER_SERVICE_TASK_CORE_AFFINITY",
                                        "type": "choice"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "FREERTOS_USE_TIMERS",
                                        "help": null,
                                        "id": "FREERTOS_TIMER_SERVICE_TASK_CORE_AFFINITY",
                                        "name": "FREERTOS_TIMER_SERVICE_TASK_CORE_AFFINITY",
                                        "range": null,
                                        "title": null,
                                        "type": "hex"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "FREERTOS_USE_TIMERS",
                                        "help": "Sets the timer task's priority (see configTIMER_TASK_PRIORITY documentation for more details).",
                                        "id": "FREERTOS_TIMER_TASK_PRIORITY",
                                        "name": "FREERTOS_TIMER_TASK_PRIORITY",
                                        "range": [
                                            1,
                                            25
                                        ],
                                        "title": "configTIMER_TASK_PRIORITY",
                                        "type": "int"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "FREERTOS_USE_TIMERS",
                                        "help": "Set the timer task's stack size (see configTIMER_TASK_STACK_DEPTH documentation for more details).",
                                        "id": "FREERTOS_TIMER_TASK_STACK_DEPTH",
                                        "name": "FREERTOS_TIMER_TASK_STACK_DEPTH",
                                        "range": [
                                            1536,
                                            32768
                                        ],
                                        "title": "configTIMER_TASK_STACK_DEPTH",
                                        "type": "int"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "FREERTOS_USE_TIMERS",
                                        "help": "Set the timer task's command queue length (see configTIMER_QUEUE_LENGTH documentation for more\ndetails).",
                                        "id": "FREERTOS_TIMER_QUEUE_LENGTH",
                                        "name": "FREERTOS_TIMER_QUEUE_LENGTH",
                                        "range": [
                                            5,
                                            20
                                        ],
                                        "title": "configTIMER_QUEUE_LENGTH",
                                        "type": "int"
                                    }
                                ],
                                "depends_on": null,
                                "help": "Enable FreeRTOS Software Timers. Normally the timer task will only get pulled into the build\nand created if any software timer related functions are used. This is achieved through IDF\ndefining a weak empty function for xTimerCreateTimerTask, which should take effect if timers.c\nis not pulled into the build.\n\nIn certain special cases (if you use configUSE_TRACE_FACILITY=y and event groups) the linker will\nstill pull in the xTimerCreateTimerTask from timers.c even if the function that utilized it gets\ndiscarded due to not being used.\n\nIn these cases you can use this option to force the timer task to be disabled.",
                                "id": "FREERTOS_USE_TIMERS",
                                "name": "FREERTOS_USE_TIMERS",
                                "range": null,
                                "title": "configUSE_TIMERS",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "Set the size of the queue registry (see configQUEUE_REGISTRY_SIZE documentation for more details).\n\nNote: A value of 0 will disable queue registry functionality",
                                "id": "FREERTOS_QUEUE_REGISTRY_SIZE",
                                "name": "FREERTOS_QUEUE_REGISTRY_SIZE",
                                "range": [
                                    0,
                                    20
                                ],
                                "title": "configQUEUE_REGISTRY_SIZE",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "Set the size of the task notification array of each task. When increasing this value, keep in\nmind that this means additional memory for each and every task on the system.\nHowever, task notifications in general are more light weight compared to alternatives\nsuch as semaphores.",
                                "id": "FREERTOS_TASK_NOTIFICATION_ARRAY_ENTRIES",
                                "name": "FREERTOS_TASK_NOTIFICATION_ARRAY_ENTRIES",
                                "range": [
                                    1,
                                    32
                                ],
                                "title": "configTASK_NOTIFICATION_ARRAY_ENTRIES",
                                "type": "int"
                            },
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": "FREERTOS_USE_TRACE_FACILITY",
                                        "help": "Set configUSE_TRACE_FACILITY and configUSE_STATS_FORMATTING_FUNCTIONS to 1 to include the\n``vTaskList()`` and ``vTaskGetRunTimeStats()`` functions in the build (see\nconfigUSE_STATS_FORMATTING_FUNCTIONS documentation for more details).",
                                        "id": "FREERTOS_USE_STATS_FORMATTING_FUNCTIONS",
                                        "name": "FREERTOS_USE_STATS_FORMATTING_FUNCTIONS",
                                        "range": null,
                                        "title": "configUSE_STATS_FORMATTING_FUNCTIONS",
                                        "type": "bool"
                                    }
                                ],
                                "depends_on": null,
                                "help": "Enables additional structure members and functions to assist with execution visualization and tracing\n(see configUSE_TRACE_FACILITY documentation for more details).",
                                "id": "FREERTOS_USE_TRACE_FACILITY",
                                "name": "FREERTOS_USE_TRACE_FACILITY",
                                "range": null,
                                "title": "configUSE_TRACE_FACILITY",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "Enable list integrity checker\n(see configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES documentation for more details).",
                                "id": "FREERTOS_USE_LIST_DATA_INTEGRITY_CHECK_BYTES",
                                "name": "FREERTOS_USE_LIST_DATA_INTEGRITY_CHECK_BYTES",
                                "range": null,
                                "title": "configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "!FREERTOS_SMP && FREERTOS_USE_STATS_FORMATTING_FUNCTIONS",
                                "help": "If enabled, this will include an extra column when vTaskList is called to display the CoreID the task\nis pinned to (0,1) or -1 if not pinned.",
                                "id": "FREERTOS_VTASKLIST_INCLUDE_COREID",
                                "name": "FREERTOS_VTASKLIST_INCLUDE_COREID",
                                "range": null,
                                "title": "Enable display of xCoreID in vTaskList",
                                "type": "bool"
                            },
                            {
                                "children": [
                                    {
                                        "children": [
                                            {
                                                "children": [],
                                                "depends_on": "<choice FREERTOS_RUN_TIME_COUNTER_TYPE>",
                                                "help": "configRUN_TIME_COUNTER_TYPE is set to uint32_t",
                                                "id": "FREERTOS_RUN_TIME_COUNTER_TYPE_U32",
                                                "name": "FREERTOS_RUN_TIME_COUNTER_TYPE_U32",
                                                "range": null,
                                                "title": "uint32_t",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice FREERTOS_RUN_TIME_COUNTER_TYPE>",
                                                "help": "configRUN_TIME_COUNTER_TYPE is set to uint64_t",
                                                "id": "FREERTOS_RUN_TIME_COUNTER_TYPE_U64",
                                                "name": "FREERTOS_RUN_TIME_COUNTER_TYPE_U64",
                                                "range": null,
                                                "title": "uint64_t",
                                                "type": "bool"
                                            }
                                        ],
                                        "depends_on": "FREERTOS_GENERATE_RUN_TIME_STATS && !FREERTOS_SMP",
                                        "help": "Sets the data type used for the FreeRTOS run time stats. A larger data type can be used to reduce the\nfrequency of the counter overflowing.",
                                        "id": "component-config-freertos-kernel-configgenerate_run_time_stats-configrun_time_counter_type",
                                        "name": "FREERTOS_RUN_TIME_COUNTER_TYPE",
                                        "title": "configRUN_TIME_COUNTER_TYPE",
                                        "type": "choice"
                                    }
                                ],
                                "depends_on": null,
                                "help": "Enables collection of run time statistics for each task (see configGENERATE_RUN_TIME_STATS\ndocumentation for more details).\n\nNote: The clock used for run time statistics can be configured in FREERTOS_RUN_TIME_STATS_CLK.",
                                "id": "FREERTOS_GENERATE_RUN_TIME_STATS",
                                "name": "FREERTOS_GENERATE_RUN_TIME_STATS",
                                "range": null,
                                "title": "configGENERATE_RUN_TIME_STATS",
                                "type": "bool"
                            },
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": "FREERTOS_USE_TICKLESS_IDLE",
                                        "help": "FreeRTOS will enter light sleep mode if no tasks need to run for this number of ticks.\nYou can enable PM_PROFILING feature in esp_pm components and dump the sleep status with\nesp_pm_dump_locks, if the proportion of rejected sleeps is too high, please increase\nthis value to improve scheduling efficiency",
                                        "id": "FREERTOS_IDLE_TIME_BEFORE_SLEEP",
                                        "name": "FREERTOS_IDLE_TIME_BEFORE_SLEEP",
                                        "range": null,
                                        "title": "configEXPECTED_IDLE_TIME_BEFORE_SLEEP",
                                        "type": "int"
                                    }
                                ],
                                "depends_on": "PM_ENABLE",
                                "help": "If power management support is enabled, FreeRTOS will be able to put the system into light sleep mode\nwhen no tasks need to run for a number of ticks. This number can be set using\nFREERTOS_IDLE_TIME_BEFORE_SLEEP option. This feature is also known as \"automatic light sleep\".\n\nNote that timers created using esp_timer APIs may prevent the system from entering sleep mode, even\nwhen no tasks need to run. To skip unnecessary wake-up initialize a timer with the\n\"skip_unhandled_events\" option as true.\n\nIf disabled, automatic light sleep support will be disabled.",
                                "id": "FREERTOS_USE_TICKLESS_IDLE",
                                "name": "FREERTOS_USE_TICKLESS_IDLE",
                                "range": null,
                                "title": "configUSE_TICKLESS_IDLE",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "Enables task tagging functionality and its associated API (see configUSE_APPLICATION_TASK_TAG\ndocumentation for more details).",
                                "id": "FREERTOS_USE_APPLICATION_TASK_TAG",
                                "name": "FREERTOS_USE_APPLICATION_TASK_TAG",
                                "range": null,
                                "title": "configUSE_APPLICATION_TASK_TAG",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "id": "component-config-freertos-kernel",
                        "title": "Kernel",
                        "type": "menu"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "COMPILER_OPTIMIZATION_DEBUG || ESP_COREDUMP_ENABLE || ESP_SYSTEM_PANIC_GDBSTUB || ESP_SYSTEM_GDBSTUB_RUNTIME",
                                "help": "If enabled, all FreeRTOS task functions will be enclosed in a wrapper function. If a task function\nmistakenly returns (i.e. does not delete), the call flow will return to the wrapper function. The\nwrapper function will then log an error and abort the application. This option is also required for GDB\nbacktraces and C++ exceptions to work correctly inside top-level task functions.",
                                "id": "FREERTOS_TASK_FUNCTION_WRAPPER",
                                "name": "FREERTOS_TASK_FUNCTION_WRAPPER",
                                "range": null,
                                "title": "Wrap task functions",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "FreeRTOS can check if a stack has overflown its bounds by checking either the value of the stack\npointer or by checking the integrity of canary bytes. (See FREERTOS_CHECK_STACKOVERFLOW for more\ninformation.) These checks only happen on a context switch, and the situation that caused the stack\noverflow may already be long gone by then. This option will use the last debug memory watchpoint to\nallow breaking into the debugger (or panic'ing) as soon as any of the last 32 bytes on the stack of a\ntask are overwritten. The side effect is that using gdb, you effectively have one hardware watchpoint\nless because the last one is overwritten as soon as a task switch happens.\n\nAnother consequence is that due to alignment requirements of the watchpoint, the usable stack size\ndecreases by up to 60 bytes. This is because the watchpoint region has to be aligned to its size and\nthe size for the stack watchpoint in IDF is 32 bytes.\n\nThis check only triggers if the stack overflow writes within 32 bytes near the end of the stack, rather\nthan overshooting further, so it is worth combining this approach with one of the other stack overflow\ncheck methods.\n\nWhen this watchpoint is hit, gdb will stop with a SIGTRAP message. When no JTAG OCD is attached,\nesp-idf will panic on an unhandled debug exception.",
                                "id": "FREERTOS_WATCHPOINT_END_OF_STACK",
                                "name": "FREERTOS_WATCHPOINT_END_OF_STACK",
                                "range": null,
                                "title": "Enable stack overflow debug watchpoint",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "FREERTOS_THREAD_LOCAL_STORAGE_POINTERS > 0",
                                "help": "ESP-IDF provides users with the ability to free TLSP memory by registering TLSP deletion callbacks.\nThese callbacks are automatically called by FreeRTOS when a task is deleted. When this option is turned\non, the memory reserved for TLSPs in the TCB is doubled to make space for storing the deletion\ncallbacks. If the user does not wish to use TLSP deletion callbacks then this option could be turned\noff to save space in the TCB memory.",
                                "id": "FREERTOS_TLSP_DELETION_CALLBACKS",
                                "name": "FREERTOS_TLSP_DELETION_CALLBACKS",
                                "range": null,
                                "title": "Enable thread local storage pointers deletion callbacks",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "!FREERTOS_ENABLE_STATIC_TASK_CLEAN_UP",
                                "help": "Enable this option to make FreeRTOS call a user provided hook function right before it deletes a task\n(i.e., frees/releases a dynamically/statically allocated task's memory). This is useful if users want\nto know when a task is actually deleted (in case the task's deletion is delegated to the IDLE task).\n\nIf this config option is enabled, users must define a ``void vTaskPreDeletionHook( void * pxTCB )``\nhook function in their application.",
                                "id": "FREERTOS_TASK_PRE_DELETION_HOOK",
                                "name": "FREERTOS_TASK_PRE_DELETION_HOOK",
                                "range": null,
                                "title": "Enable task pre-deletion hook",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "THIS OPTION IS DEPRECATED. Use FREERTOS_TASK_PRE_DELETION_HOOK instead.\n\nEnable this option to make FreeRTOS call the static task clean up hook when a task is deleted.\n\nNote: Users will need to provide a ``void vPortCleanUpTCB ( void *pxTCB )`` callback",
                                "id": "FREERTOS_ENABLE_STATIC_TASK_CLEAN_UP",
                                "name": "FREERTOS_ENABLE_STATIC_TASK_CLEAN_UP",
                                "range": null,
                                "title": "Enable static task clean up hook (DEPRECATED)",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "!FREERTOS_SMP",
                                "help": "If enabled, assert that when a mutex semaphore is given, the task giving the semaphore is the task\nwhich is currently holding the mutex.",
                                "id": "FREERTOS_CHECK_MUTEX_GIVEN_BY_OWNER",
                                "name": "FREERTOS_CHECK_MUTEX_GIVEN_BY_OWNER",
                                "range": null,
                                "title": "Check that mutex semaphore is given by owner task",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "The interrupt handlers have their own stack. The size of the stack can be defined here. Each processor\nhas its own stack, so the total size occupied will be twice this.",
                                "id": "FREERTOS_ISR_STACKSIZE",
                                "name": "FREERTOS_ISR_STACKSIZE",
                                "range": [
                                    1536,
                                    32768
                                ],
                                "title": "ISR stack size",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "If this option is enabled, interrupt stack frame will be modified to point to the code of the\ninterrupted task as its return address. This helps the debugger (or the panic handler) show a backtrace\nfrom the interrupt to the task which was interrupted. This also works for nested interrupts: higher\nlevel interrupt stack can be traced back to the lower level interrupt. This option adds 4 instructions\nto the interrupt dispatching code.",
                                "id": "FREERTOS_INTERRUPT_BACKTRACE",
                                "name": "FREERTOS_INTERRUPT_BACKTRACE",
                                "range": null,
                                "title": "Enable backtrace from interrupt to task context",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "SOC_CPU_HAS_FPU && (IDF_TARGET_ESP32 || IDF_TARGET_ESP32S3)",
                                "help": "When enabled, the usage of float type is allowed inside Level 1 ISRs. Note that usage of float types in\nhigher level interrupts is still not permitted.",
                                "id": "FREERTOS_FPU_IN_ISR",
                                "name": "FREERTOS_FPU_IN_ISR",
                                "range": null,
                                "title": "Use float in Level 1 ISR",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": null,
                                "id": "FREERTOS_TICK_SUPPORT_CORETIMER",
                                "name": "FREERTOS_TICK_SUPPORT_CORETIMER",
                                "range": null,
                                "title": null,
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": null,
                                "id": "FREERTOS_TICK_SUPPORT_SYSTIMER",
                                "name": "FREERTOS_TICK_SUPPORT_SYSTIMER",
                                "range": null,
                                "title": null,
                                "type": "bool"
                            },
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": "FREERTOS_TICK_SUPPORT_CORETIMER && <choice FREERTOS_CORETIMER>",
                                        "help": "Select this to use timer 0",
                                        "id": "FREERTOS_CORETIMER_0",
                                        "name": "FREERTOS_CORETIMER_0",
                                        "range": null,
                                        "title": "Timer 0 (int 6, level 1)",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "FREERTOS_TICK_SUPPORT_CORETIMER && <choice FREERTOS_CORETIMER>",
                                        "help": "Select this to use timer 1",
                                        "id": "FREERTOS_CORETIMER_1",
                                        "name": "FREERTOS_CORETIMER_1",
                                        "range": null,
                                        "title": "Timer 1 (int 15, level 3)",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "FREERTOS_TICK_SUPPORT_SYSTIMER && <choice FREERTOS_CORETIMER>",
                                        "help": "Select this to use systimer with the 1 interrupt priority.",
                                        "id": "FREERTOS_CORETIMER_SYSTIMER_LVL1",
                                        "name": "FREERTOS_CORETIMER_SYSTIMER_LVL1",
                                        "range": null,
                                        "title": "SYSTIMER 0 (level 1)",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "FREERTOS_TICK_SUPPORT_SYSTIMER && <choice FREERTOS_CORETIMER>",
                                        "help": "Select this to use systimer with the 3 interrupt priority.",
                                        "id": "FREERTOS_CORETIMER_SYSTIMER_LVL3",
                                        "name": "FREERTOS_CORETIMER_SYSTIMER_LVL3",
                                        "range": null,
                                        "title": "SYSTIMER 0 (level 3)",
                                        "type": "bool"
                                    }
                                ],
                                "depends_on": null,
                                "help": "FreeRTOS needs a timer with an associated interrupt to use as the main tick source to increase\ncounters, run timers and do pre-emptive multitasking with. There are multiple timers available to do\nthis, with different interrupt priorities.",
                                "id": "component-config-freertos-port-tick-timer-source-xtensa-only-",
                                "name": "FREERTOS_CORETIMER",
                                "title": "Tick timer source (Xtensa Only)",
                                "type": "choice"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": null,
                                "id": "FREERTOS_SYSTICK_USES_SYSTIMER",
                                "name": "FREERTOS_SYSTICK_USES_SYSTIMER",
                                "range": null,
                                "title": null,
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": null,
                                "id": "FREERTOS_SYSTICK_USES_CCOUNT",
                                "name": "FREERTOS_SYSTICK_USES_CCOUNT",
                                "range": null,
                                "title": null,
                                "type": "bool"
                            },
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": "<choice FREERTOS_RUN_TIME_STATS_CLK>",
                                        "help": "ESP Timer will be used as the clock source for FreeRTOS run time stats. The ESP Timer runs at a\nfrequency of 1MHz regardless of Dynamic Frequency Scaling. Therefore the ESP Timer will overflow in\napproximately 4290 seconds.",
                                        "id": "FREERTOS_RUN_TIME_STATS_USING_ESP_TIMER",
                                        "name": "FREERTOS_RUN_TIME_STATS_USING_ESP_TIMER",
                                        "range": null,
                                        "title": "Use ESP TIMER for run time stats",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "FREERTOS_SYSTICK_USES_CCOUNT && <choice FREERTOS_RUN_TIME_STATS_CLK>",
                                        "help": "CPU Clock will be used as the clock source for the generation of run time stats. The CPU Clock has\na frequency dependent on ESP_DEFAULT_CPU_FREQ_MHZ and Dynamic Frequency Scaling (DFS). Therefore\nthe CPU Clock frequency can fluctuate between 80 to 240MHz. Run time stats generated using the CPU\nClock represents the number of CPU cycles each task is allocated and DOES NOT reflect the amount of\ntime each task runs for (as CPU clock frequency can change). If the CPU clock consistently runs at\nthe maximum frequency of 240MHz, it will overflow in approximately 17 seconds.",
                                        "id": "FREERTOS_RUN_TIME_STATS_USING_CPU_CLK",
                                        "name": "FREERTOS_RUN_TIME_STATS_USING_CPU_CLK",
                                        "range": null,
                                        "title": "Use CPU Clock for run time stats",
                                        "type": "bool"
                                    }
                                ],
                                "depends_on": "FREERTOS_GENERATE_RUN_TIME_STATS",
                                "help": "Choose the clock source for FreeRTOS run time stats. Options are CPU0's CPU Clock or the ESP Timer.\nBoth clock sources are 32 bits. The CPU Clock can run at a higher frequency hence provide a finer\nresolution but will overflow much quicker. Note that run time stats are only valid until the clock\nsource overflows.",
                                "id": "component-config-freertos-port-choose-the-clock-source-for-run-time-stats",
                                "name": "FREERTOS_RUN_TIME_STATS_CLK",
                                "title": "Choose the clock source for run time stats",
                                "type": "choice"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "When enabled the selected Non-ISR FreeRTOS functions will be placed into Flash memory instead of IRAM.\nThis saves up to 8KB of IRAM depending on which functions are used.",
                                "id": "FREERTOS_PLACE_FUNCTIONS_INTO_FLASH",
                                "name": "FREERTOS_PLACE_FUNCTIONS_INTO_FLASH",
                                "range": null,
                                "title": "Place FreeRTOS functions into Flash",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "If enabled, context of port*_CRITICAL calls (ISR or Non-ISR) would be checked to be in compliance with\nVanilla FreeRTOS. e.g Calling port*_CRITICAL from ISR context would cause assert failure",
                                "id": "FREERTOS_CHECK_PORT_CRITICAL_COMPLIANCE",
                                "name": "FREERTOS_CHECK_PORT_CRITICAL_COMPLIANCE",
                                "range": null,
                                "title": "Tests compliance with Vanilla FreeRTOS port*_CRITICAL calls",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "id": "component-config-freertos-port",
                        "title": "Port",
                        "type": "menu"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "SPIRAM && FREERTOS_SUPPORT_STATIC_ALLOCATION",
                                "help": "Accessing memory in PSRAM has certain restrictions, so task stacks allocated by xTaskCreate\nare by default allocated from internal RAM.\n\nThis option allows for passing memory allocated from SPIRAM to be passed to xTaskCreateStatic.\nThis should only be used for tasks where the stack is never accessed while the cache is disabled.\n\nExtra notes for ESP32:\n\nBecause some bits of the ESP32 code environment cannot be recompiled with the cache workaround,\nnormally tasks cannot be safely run with their stack residing in external memory; for this reason\nxTaskCreate (and related task creation functions) always allocate stack in internal memory and\nxTaskCreateStatic will check if the memory passed to it is in internal memory.\nIf you have a task that needs a large amount of stack and does not call on ROM code in any way\n(no direct calls, but also no Bluetooth/WiFi), you can try enable this to\ncause xTaskCreateStatic to allow tasks stack in external memory.",
                                "id": "FREERTOS_TASK_CREATE_ALLOW_EXT_MEM",
                                "name": "FREERTOS_TASK_CREATE_ALLOW_EXT_MEM",
                                "range": null,
                                "title": "Allow external memory as an argument to xTaskCreateStatic (READ HELP)",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "id": "component-config-freertos-extra",
                        "title": "Extra",
                        "type": "menu"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": null,
                        "id": "FREERTOS_PORT",
                        "name": "FREERTOS_PORT",
                        "range": null,
                        "title": null,
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": null,
                        "id": "FREERTOS_NO_AFFINITY",
                        "name": "FREERTOS_NO_AFFINITY",
                        "range": null,
                        "title": null,
                        "type": "hex"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": null,
                        "id": "FREERTOS_SUPPORT_STATIC_ALLOCATION",
                        "name": "FREERTOS_SUPPORT_STATIC_ALLOCATION",
                        "range": null,
                        "title": null,
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Hidden option, gets selected by CONFIG_ESP_DEBUG_OCDAWARE",
                        "id": "FREERTOS_DEBUG_OCDAWARE",
                        "name": "FREERTOS_DEBUG_OCDAWARE",
                        "range": null,
                        "title": null,
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": null,
                        "id": "FREERTOS_ENABLE_TASK_SNAPSHOT",
                        "name": "FREERTOS_ENABLE_TASK_SNAPSHOT",
                        "range": null,
                        "title": null,
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "!ESP_PANIC_HANDLER_IRAM",
                        "help": null,
                        "id": "FREERTOS_PLACE_SNAPSHOT_FUNS_INTO_FLASH",
                        "name": "FREERTOS_PLACE_SNAPSHOT_FUNS_INTO_FLASH",
                        "range": null,
                        "title": null,
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": null,
                        "id": "FREERTOS_NUMBER_OF_CORES",
                        "name": "FREERTOS_NUMBER_OF_CORES",
                        "range": [
                            1,
                            2
                        ],
                        "title": null,
                        "type": "int"
                    }
                ],
                "depends_on": null,
                "id": "component-config-freertos",
                "title": "FreeRTOS",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "<choice HAL_DEFAULT_ASSERTION_LEVEL>",
                                "help": null,
                                "id": "HAL_ASSERTION_EQUALS_SYSTEM",
                                "name": "HAL_ASSERTION_EQUALS_SYSTEM",
                                "range": null,
                                "title": "Same as system assertion level",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "COMPILER_OPTIMIZATION_ASSERTION_LEVEL >= 0 && <choice HAL_DEFAULT_ASSERTION_LEVEL>",
                                "help": null,
                                "id": "HAL_ASSERTION_DISABLE",
                                "name": "HAL_ASSERTION_DISABLE",
                                "range": null,
                                "title": "Disabled",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "COMPILER_OPTIMIZATION_ASSERTION_LEVEL >= 1 && <choice HAL_DEFAULT_ASSERTION_LEVEL>",
                                "help": null,
                                "id": "HAL_ASSERTION_SILENT",
                                "name": "HAL_ASSERTION_SILENT",
                                "range": null,
                                "title": "Silent",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "COMPILER_OPTIMIZATION_ASSERTION_LEVEL >= 2 && <choice HAL_DEFAULT_ASSERTION_LEVEL>",
                                "help": null,
                                "id": "HAL_ASSERTION_ENABLE",
                                "name": "HAL_ASSERTION_ENABLE",
                                "range": null,
                                "title": "Enabled",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "help": "Set the assert behavior / level for HAL component.\nHAL component assert level can be set separately,\nbut the level can't exceed the system assertion level.\ne.g. If the system assertion is disabled, then the HAL\nassertion can't be enabled either. If the system assertion\nis enable, then the HAL assertion can still be disabled\nby this Kconfig option.",
                        "id": "component-config-hardware-abstraction-layer-hal-and-low-level-ll--default-hal-assertion-level",
                        "name": "HAL_DEFAULT_ASSERTION_LEVEL",
                        "title": "Default HAL assertion level",
                        "type": "choice"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": null,
                        "id": "HAL_DEFAULT_ASSERTION_LEVEL",
                        "name": "HAL_DEFAULT_ASSERTION_LEVEL",
                        "range": null,
                        "title": null,
                        "type": "int"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "<choice HAL_LOG_LEVEL>",
                                "help": null,
                                "id": "HAL_LOG_LEVEL_NONE",
                                "name": "HAL_LOG_LEVEL_NONE",
                                "range": null,
                                "title": "No output",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice HAL_LOG_LEVEL>",
                                "help": null,
                                "id": "HAL_LOG_LEVEL_ERROR",
                                "name": "HAL_LOG_LEVEL_ERROR",
                                "range": null,
                                "title": "Error",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice HAL_LOG_LEVEL>",
                                "help": null,
                                "id": "HAL_LOG_LEVEL_WARN",
                                "name": "HAL_LOG_LEVEL_WARN",
                                "range": null,
                                "title": "Warning",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice HAL_LOG_LEVEL>",
                                "help": null,
                                "id": "HAL_LOG_LEVEL_INFO",
                                "name": "HAL_LOG_LEVEL_INFO",
                                "range": null,
                                "title": "Info",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice HAL_LOG_LEVEL>",
                                "help": null,
                                "id": "HAL_LOG_LEVEL_DEBUG",
                                "name": "HAL_LOG_LEVEL_DEBUG",
                                "range": null,
                                "title": "Debug",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice HAL_LOG_LEVEL>",
                                "help": null,
                                "id": "HAL_LOG_LEVEL_VERBOSE",
                                "name": "HAL_LOG_LEVEL_VERBOSE",
                                "range": null,
                                "title": "Verbose",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "!LOG_DEFAULT_LEVEL_NONE && !LOG_DEFAULT_LEVEL_ERROR && !LOG_DEFAULT_LEVEL_WARN && !LOG_DEFAULT_LEVEL_INFO && !LOG_DEFAULT_LEVEL_DEBUG && !LOG_DEFAULT_LEVEL_VERBOSE",
                        "help": "Specify how much output to see in HAL logs.",
                        "id": "component-config-hardware-abstraction-layer-hal-and-low-level-ll--hal-layer-log-verbosity",
                        "name": "HAL_LOG_LEVEL",
                        "title": "HAL layer log verbosity",
                        "type": "choice"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": null,
                        "id": "HAL_LOG_LEVEL",
                        "name": "HAL_LOG_LEVEL",
                        "range": null,
                        "title": null,
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": "ESP_ROM_HAS_HAL_SYSTIMER",
                        "help": "Enable this flag to use HAL functions from ROM instead of ESP-IDF.\n\nIf keeping this as \"n\" in your project, you will have less free IRAM.\nIf making this as \"y\" in your project, you will increase free IRAM,\nbut you will lose the possibility to debug this module, and some new\nfeatures will be added and bugs will be fixed in the IDF source\nbut cannot be synced to ROM.",
                        "id": "HAL_SYSTIMER_USE_ROM_IMPL",
                        "name": "HAL_SYSTIMER_USE_ROM_IMPL",
                        "range": null,
                        "title": "Use ROM implementation of SysTimer HAL driver",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "ESP_ROM_HAS_HAL_WDT",
                        "help": "Enable this flag to use HAL functions from ROM instead of ESP-IDF.\n\nIf keeping this as \"n\" in your project, you will have less free IRAM.\nIf making this as \"y\" in your project, you will increase free IRAM,\nbut you will lose the possibility to debug this module, and some new\nfeatures will be added and bugs will be fixed in the IDF source\nbut cannot be synced to ROM.",
                        "id": "HAL_WDT_USE_ROM_IMPL",
                        "name": "HAL_WDT_USE_ROM_IMPL",
                        "range": null,
                        "title": "Use ROM implementation of WDT HAL driver",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "SPI_MASTER_ISR_IN_IRAM",
                        "help": "Enable this option to place SPI master hal layer functions into IRAM.",
                        "id": "HAL_SPI_MASTER_FUNC_IN_IRAM",
                        "name": "HAL_SPI_MASTER_FUNC_IN_IRAM",
                        "range": null,
                        "title": null,
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "SPI_SLAVE_ISR_IN_IRAM",
                        "help": "Enable this option to place SPI slave hal layer functions into IRAM.",
                        "id": "HAL_SPI_SLAVE_FUNC_IN_IRAM",
                        "name": "HAL_SPI_SLAVE_FUNC_IN_IRAM",
                        "range": null,
                        "title": null,
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Enable this option to apply the countermeasure for ECDSA signature operation\nThis countermeasure masks the real ECDSA sign operation\nunder dummy sign operations to add randomness in the generated power signature.",
                        "id": "HAL_ECDSA_GEN_SIG_CM",
                        "name": "HAL_ECDSA_GEN_SIG_CM",
                        "range": null,
                        "title": "Enable countermeasure for ECDSA signature generation",
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "id": "component-config-hardware-abstraction-layer-hal-and-low-level-ll-",
                "title": "Hardware Abstraction Layer (HAL) and Low Level (LL)",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "<choice HEAP_CORRUPTION_DETECTION>",
                                "help": null,
                                "id": "HEAP_POISONING_DISABLED",
                                "name": "HEAP_POISONING_DISABLED",
                                "range": null,
                                "title": "Basic (no poisoning)",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice HEAP_CORRUPTION_DETECTION>",
                                "help": null,
                                "id": "HEAP_POISONING_LIGHT",
                                "name": "HEAP_POISONING_LIGHT",
                                "range": null,
                                "title": "Light impact",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice HEAP_CORRUPTION_DETECTION>",
                                "help": null,
                                "id": "HEAP_POISONING_COMPREHENSIVE",
                                "name": "HEAP_POISONING_COMPREHENSIVE",
                                "range": null,
                                "title": "Comprehensive",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "help": "Enable heap poisoning features to detect heap corruption caused by out-of-bounds access to heap memory.\n\nSee the \"Heap Memory Debugging\" page of the IDF documentation\nfor a description of each level of heap corruption detection.",
                        "id": "component-config-heap-memory-debugging-heap-corruption-detection",
                        "name": "HEAP_CORRUPTION_DETECTION",
                        "title": "Heap corruption detection",
                        "type": "choice"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "<choice HEAP_TRACING_DEST>",
                                "help": null,
                                "id": "HEAP_TRACING_OFF",
                                "name": "HEAP_TRACING_OFF",
                                "range": null,
                                "title": "Disabled",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice HEAP_TRACING_DEST>",
                                "help": null,
                                "id": "HEAP_TRACING_STANDALONE",
                                "name": "HEAP_TRACING_STANDALONE",
                                "range": null,
                                "title": "Standalone",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice HEAP_TRACING_DEST>",
                                "help": null,
                                "id": "HEAP_TRACING_TOHOST",
                                "name": "HEAP_TRACING_TOHOST",
                                "range": null,
                                "title": "Host-based",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "help": "Enables the heap tracing API defined in esp_heap_trace.h.\n\nThis function causes a moderate increase in IRAM code side and a minor increase in heap function\n(malloc/free/realloc) CPU overhead, even when the tracing feature is not used.\nSo it's best to keep it disabled unless tracing is being used.",
                        "id": "component-config-heap-memory-debugging-heap-tracing",
                        "name": "HEAP_TRACING_DEST",
                        "title": "Heap tracing",
                        "type": "choice"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Enables/disables heap tracing API.",
                        "id": "HEAP_TRACING",
                        "name": "HEAP_TRACING",
                        "range": null,
                        "title": null,
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "SPIRAM && HEAP_TRACE_HASH_MAP",
                                "help": "When enabled this configuration forces the hash map to be placed in external RAM.",
                                "id": "HEAP_TRACE_HASH_MAP_IN_EXT_RAM",
                                "name": "HEAP_TRACE_HASH_MAP_IN_EXT_RAM",
                                "range": null,
                                "title": "Place hash map in external RAM",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "HEAP_TRACE_HASH_MAP",
                                "help": "Defines the number of entries in the heap trace hashmap. Each entry takes 8 bytes.\nThe bigger this number is, the better the performance. Recommended range: 200 - 2000.",
                                "id": "HEAP_TRACE_HASH_MAP_SIZE",
                                "name": "HEAP_TRACE_HASH_MAP_SIZE",
                                "range": null,
                                "title": "The number of entries in the hash map",
                                "type": "int"
                            }
                        ],
                        "depends_on": "HEAP_TRACING_STANDALONE",
                        "help": "Enable this flag to use a hash map to increase performance in handling\nheap trace records.\n\nHeap trace standalone supports storing records as a list, or a list + hash map.\n\nUsing only a list takes less memory, but calls to 'free' will get slower as the\nlist grows. This is particularly affected when using HEAP_TRACE_ALL mode.\n\nBy using a list + hash map, calls to 'free' remain fast, at the cost of\nadditional memory to store the hash map.",
                        "id": "HEAP_TRACE_HASH_MAP",
                        "name": "HEAP_TRACE_HASH_MAP",
                        "range": null,
                        "title": "Use hash map mechanism to access heap trace records",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "HEAP_TRACING",
                        "help": "Number of stack frames to save when tracing heap operation callers.\n\nMore stack frames uses more memory in the heap trace buffer (and slows down allocation), but\ncan provide useful information.",
                        "id": "HEAP_TRACING_STACK_DEPTH",
                        "name": "HEAP_TRACING_STACK_DEPTH",
                        "range": null,
                        "title": "Heap tracing stack depth",
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Enable the user to implement function hooks triggered for each successful allocation and free.",
                        "id": "HEAP_USE_HOOKS",
                        "name": "HEAP_USE_HOOKS",
                        "range": null,
                        "title": "Use allocation and free hooks",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Enables tracking the task responsible for each heap allocation.\n\nThis function depends on heap poisoning being enabled and adds four more bytes of overhead for each block\nallocated.",
                        "id": "HEAP_TASK_TRACKING",
                        "name": "HEAP_TASK_TRACKING",
                        "range": null,
                        "title": "Enable heap task tracking",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "When enabled, if a memory allocation operation fails it will cause a system abort.",
                        "id": "HEAP_ABORT_WHEN_ALLOCATION_FAILS",
                        "name": "HEAP_ABORT_WHEN_ALLOCATION_FAILS",
                        "range": null,
                        "title": "Abort if memory allocation fails",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "ESP_ROM_HAS_HEAP_TLSF",
                        "help": "Enable this flag to use heap functions from ROM instead of ESP-IDF.\n\nIf keeping this as \"n\" in your project, you will have less free IRAM.\nIf making this as \"y\" in your project, you will increase free IRAM,\nbut you will lose the possibility to debug this module, and some new\nfeatures will be added and bugs will be fixed in the IDF source\nbut cannot be synced to ROM.",
                        "id": "HEAP_TLSF_USE_ROM_IMPL",
                        "name": "HEAP_TLSF_USE_ROM_IMPL",
                        "range": null,
                        "title": "Use ROM implementation of heap tlsf library",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "!HEAP_TLSF_USE_ROM_IMPL",
                        "help": "Enable this flag to save up RAM space by placing the heap component in the flash memory\n\nNote that it is only safe to enable this configuration if no functions from esp_heap_caps.h\nor esp_heap_trace.h are called from ISR.",
                        "id": "HEAP_PLACE_FUNCTION_INTO_FLASH",
                        "name": "HEAP_PLACE_FUNCTION_INTO_FLASH",
                        "range": null,
                        "title": "Force the entire heap component to be placed in flash memory",
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "id": "component-config-heap-memory-debugging",
                "title": "Heap memory debugging",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "<choice LOG_VERSION>",
                                "help": "Select this option to use Log V1. Recommended for projects with strict stack constraints\nor that prioritize performance over flexibility.",
                                "id": "LOG_VERSION_1",
                                "name": "LOG_VERSION_1",
                                "range": null,
                                "title": "V1",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice LOG_VERSION>",
                                "help": "Select this option to use Log V2. Recommended for projects that require smaller binaries,\nruntime log formatting configuration, or advanced logging features.",
                                "id": "LOG_VERSION_2",
                                "name": "LOG_VERSION_2",
                                "range": null,
                                "title": "V2",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "help": "Select the log version to be used by the ESP log component.\n\n- \"V1\": This version integrates log formatting into the format string provided by the user.\n        Logs are processed and formatted during compile time, leading to a larger binary file.\n        Example: ESP_LOGI(\"boot\", \"chip revision: v%d.%d\", major, minor);\n        Output: I (56) boot: chip revision: v3.0\n        Note: Log strings are stored in Flash with added formatting characters.\n        Format string on flash: \"[0;32mI (%lu) %s: chip revision: v%d.%d [0m\"\n\n- \"V2\": This version centralizes log formatting within the esp_log() function.\n        User-supplied format strings are stored without added formatting, reducing binary size.\n        Example: ESP_LOGI(\"boot\", \"chip revision: v%d.%d\", major, minor);\n        Output: I (56) boot: chip revision: v3.0\n        Note: This version supports runtime configuration of formatting and is more flexible,\n        logging from constrained environments (ex.: ISR, Startup, Cache disabled).\n        It may consumes a bit more stack and affect performance.\n        Format string on flash: \"chip revision: v%d.%d\"\n\nUse V1 for minimal stack usage and simpler implementation.\nUse V2 for smaller binary sizes, more flexible log formatting, and advanced features like disabling\ncolors or timestamps.",
                        "id": "component-config-log-log-version",
                        "name": "LOG_VERSION",
                        "title": "Log version",
                        "type": "choice"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "This configuration sets the log version number based on the chosen log version.",
                        "id": "LOG_VERSION",
                        "name": "LOG_VERSION",
                        "range": null,
                        "title": null,
                        "type": "int"
                    },
                    {
                        "children": [
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": "<choice LOG_DEFAULT_LEVEL>",
                                        "help": null,
                                        "id": "LOG_DEFAULT_LEVEL_NONE",
                                        "name": "LOG_DEFAULT_LEVEL_NONE",
                                        "range": null,
                                        "title": "No output",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "<choice LOG_DEFAULT_LEVEL>",
                                        "help": null,
                                        "id": "LOG_DEFAULT_LEVEL_ERROR",
                                        "name": "LOG_DEFAULT_LEVEL_ERROR",
                                        "range": null,
                                        "title": "Error",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "<choice LOG_DEFAULT_LEVEL>",
                                        "help": null,
                                        "id": "LOG_DEFAULT_LEVEL_WARN",
                                        "name": "LOG_DEFAULT_LEVEL_WARN",
                                        "range": null,
                                        "title": "Warning",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "<choice LOG_DEFAULT_LEVEL>",
                                        "help": null,
                                        "id": "LOG_DEFAULT_LEVEL_INFO",
                                        "name": "LOG_DEFAULT_LEVEL_INFO",
                                        "range": null,
                                        "title": "Info",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "<choice LOG_DEFAULT_LEVEL>",
                                        "help": null,
                                        "id": "LOG_DEFAULT_LEVEL_DEBUG",
                                        "name": "LOG_DEFAULT_LEVEL_DEBUG",
                                        "range": null,
                                        "title": "Debug",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "<choice LOG_DEFAULT_LEVEL>",
                                        "help": null,
                                        "id": "LOG_DEFAULT_LEVEL_VERBOSE",
                                        "name": "LOG_DEFAULT_LEVEL_VERBOSE",
                                        "range": null,
                                        "title": "Verbose",
                                        "type": "bool"
                                    }
                                ],
                                "depends_on": null,
                                "help": "Specify how much output to see in logs by default.\nYou can set lower verbosity level at runtime using\nesp_log_level_set() function if LOG_DYNAMIC_LEVEL_CONTROL\nis enabled.\n\nBy default, this setting limits which log statements\nare compiled into the program. For example, selecting\n\"Warning\" would mean that changing log level to \"Debug\"\nat runtime will not be possible. To allow increasing log\nlevel above the default at runtime, see the next option.",
                                "id": "component-config-log-log-level-default-log-verbosity",
                                "name": "LOG_DEFAULT_LEVEL",
                                "title": "Default log verbosity",
                                "type": "choice"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": null,
                                "id": "LOG_DEFAULT_LEVEL",
                                "name": "LOG_DEFAULT_LEVEL",
                                "range": null,
                                "title": null,
                                "type": "int"
                            },
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": "<choice LOG_MAXIMUM_LEVEL>",
                                        "help": null,
                                        "id": "LOG_MAXIMUM_EQUALS_DEFAULT",
                                        "name": "LOG_MAXIMUM_EQUALS_DEFAULT",
                                        "range": null,
                                        "title": "Same as default",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "LOG_DEFAULT_LEVEL < 1 && <choice LOG_MAXIMUM_LEVEL>",
                                        "help": null,
                                        "id": "LOG_MAXIMUM_LEVEL_ERROR",
                                        "name": "LOG_MAXIMUM_LEVEL_ERROR",
                                        "range": null,
                                        "title": "Error",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "LOG_DEFAULT_LEVEL < 2 && <choice LOG_MAXIMUM_LEVEL>",
                                        "help": null,
                                        "id": "LOG_MAXIMUM_LEVEL_WARN",
                                        "name": "LOG_MAXIMUM_LEVEL_WARN",
                                        "range": null,
                                        "title": "Warning",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "LOG_DEFAULT_LEVEL < 3 && <choice LOG_MAXIMUM_LEVEL>",
                                        "help": null,
                                        "id": "LOG_MAXIMUM_LEVEL_INFO",
                                        "name": "LOG_MAXIMUM_LEVEL_INFO",
                                        "range": null,
                                        "title": "Info",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "LOG_DEFAULT_LEVEL < 4 && <choice LOG_MAXIMUM_LEVEL>",
                                        "help": null,
                                        "id": "LOG_MAXIMUM_LEVEL_DEBUG",
                                        "name": "LOG_MAXIMUM_LEVEL_DEBUG",
                                        "range": null,
                                        "title": "Debug",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "LOG_DEFAULT_LEVEL < 5 && <choice LOG_MAXIMUM_LEVEL>",
                                        "help": null,
                                        "id": "LOG_MAXIMUM_LEVEL_VERBOSE",
                                        "name": "LOG_MAXIMUM_LEVEL_VERBOSE",
                                        "range": null,
                                        "title": "Verbose",
                                        "type": "bool"
                                    }
                                ],
                                "depends_on": null,
                                "help": "This config option sets the highest log verbosity that it's possible to select\nat runtime by calling esp_log_level_set(). This level may be higher than\nthe default verbosity level which is set when the app starts up.\n\nThis can be used enable debugging output only at a critical point, for a particular\ntag, or to minimize startup time but then enable more logs once the firmware has\nloaded.\n\nNote that increasing the maximum available log level will increase the firmware\nbinary size.\n\nThis option only applies to logging from the app, the bootloader log level is\nfixed at compile time to the separate \"Bootloader log verbosity\" setting.",
                                "id": "component-config-log-log-level-maximum-log-verbosity",
                                "name": "LOG_MAXIMUM_LEVEL",
                                "title": "Maximum log verbosity",
                                "type": "choice"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": null,
                                "id": "LOG_MAXIMUM_LEVEL",
                                "name": "LOG_MAXIMUM_LEVEL",
                                "range": null,
                                "title": null,
                                "type": "int"
                            },
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": null,
                                        "help": "Enables an additional global \"master\" log level check that occurs before a log tag cache\nlookup. This is useful if you want to compile in a lot of logs that are selectable at\nruntime, but avoid the performance hit during periods where you don't want log output.\n\nExamples include remote log forwarding, or disabling logs during a time-critical or\nCPU-intensive section and re-enabling them later. Results in larger program size\ndepending on number of logs compiled in.\n\nIf enabled, defaults to LOG_DEFAULT_LEVEL and can be set using\nesp_log_set_level_master(). This check takes precedence over ESP_LOG_LEVEL_LOCAL.",
                                        "id": "LOG_MASTER_LEVEL",
                                        "name": "LOG_MASTER_LEVEL",
                                        "range": null,
                                        "title": "Enable global master log level",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": null,
                                        "help": "Enabling this option allows dynamic changes to the log level at runtime\n(using esp_log_level_set()), providing the ability to increase or decrease\nthe log level during program execution.\nIf disabled, the log level remains static once set at compile-time and calling\nesp_log_level_set() will have no effect.\nIf binary size is a critical consideration and dynamic log level changes are not needed,\nconsider disabling this option when LOG_TAG_LEVEL_IMPL_NONE=y to minimize program size.",
                                        "id": "LOG_DYNAMIC_LEVEL_CONTROL",
                                        "name": "LOG_DYNAMIC_LEVEL_CONTROL",
                                        "range": null,
                                        "title": "Enable dynamic log level changes at runtime",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [
                                            {
                                                "children": [],
                                                "depends_on": "<choice LOG_TAG_LEVEL_IMPL>",
                                                "help": "This option disables the ability to set the log level per tag.\nThe ability to change the log level at runtime depends on LOG_DYNAMIC_LEVEL_CONTROL.\nIf LOG_DYNAMIC_LEVEL_CONTROL is disabled, then changing the log level at runtime\nusing `esp_log_level_set()` is not possible.\nThis implementation is suitable for highly constrained environments.",
                                                "id": "LOG_TAG_LEVEL_IMPL_NONE",
                                                "name": "LOG_TAG_LEVEL_IMPL_NONE",
                                                "range": null,
                                                "title": "None",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice LOG_TAG_LEVEL_IMPL>",
                                                "help": "Select this option to use the linked list-only implementation (no cache) for log level retrieval.\nThis approach searches the linked list of all tags for the log level, which may be slower\nfor a large number of tags but may have lower memory requirements than the CACHE approach.\nThe linked list approach compares the whole strings of log tags for finding the log level.",
                                                "id": "LOG_TAG_LEVEL_IMPL_LINKED_LIST",
                                                "name": "LOG_TAG_LEVEL_IMPL_LINKED_LIST",
                                                "range": null,
                                                "title": "Linked List",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice LOG_TAG_LEVEL_IMPL>",
                                                "help": "Select this option to use a hybrid mode: cache in combination with the linked list\nfor log tag level checks. This hybrid approach offers a balance between speed and memory usage.\n\nThe cache stores recently accessed log tags and their corresponding log levels, providing\nfaster lookups for frequently used tags. The cache approach compares the tag pointers, which is\nfaster than comparing the whole strings.\n\nFor less frequently used tags, the linked list is used to search for the log level, which may be\nslower for a large number of tags but has lower memory requirements compared to a full cache.\n\nThis hybrid approach aims to improve the efficiency of log level retrieval by combining the benefits\nof both cache and linked list implementations.",
                                                "id": "LOG_TAG_LEVEL_IMPL_CACHE_AND_LINKED_LIST",
                                                "name": "LOG_TAG_LEVEL_IMPL_CACHE_AND_LINKED_LIST",
                                                "range": null,
                                                "title": "Cache + Linked List",
                                                "type": "bool"
                                            }
                                        ],
                                        "depends_on": null,
                                        "help": "Choose the per-tag log level implementation for the log library. This functionality is used\nto enable/disable logs for a particular tag at run time. Applicable only for\napplication logs (i.e., not bootloader logs).",
                                        "id": "component-config-log-log-level-level-settings-method-of-tag-level-checks",
                                        "name": "LOG_TAG_LEVEL_IMPL",
                                        "title": "Method of tag level checks",
                                        "type": "choice"
                                    },
                                    {
                                        "children": [
                                            {
                                                "children": [],
                                                "depends_on": "<choice LOG_TAG_LEVEL_CACHE_IMPL>",
                                                "help": "This option enables the use of a simple array-based cache implementation for storing and\nretrieving log tag levels. There is no additional code that reorders the cache for fast lookups.\nSuitable for projects where memory usage optimization is crucial and the simplicity of implementation\nis preferred.",
                                                "id": "LOG_TAG_LEVEL_CACHE_ARRAY",
                                                "name": "LOG_TAG_LEVEL_CACHE_ARRAY",
                                                "range": null,
                                                "title": "Array",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice LOG_TAG_LEVEL_CACHE_IMPL>",
                                                "help": "This option enables the use of a binary min-heap-based cache implementation for efficient\nstorage and retrieval of log tag levels. It does automatically optimizing cache for fast lookups.\nSuitable for projects where speed of lookup is critical and memory usage can accommodate\nthe overhead of maintaining a binary min-heap structure.",
                                                "id": "LOG_TAG_LEVEL_CACHE_BINARY_MIN_HEAP",
                                                "name": "LOG_TAG_LEVEL_CACHE_BINARY_MIN_HEAP",
                                                "range": null,
                                                "title": "Binary Min-Heap",
                                                "type": "bool"
                                            }
                                        ],
                                        "depends_on": "LOG_TAG_LEVEL_IMPL_CACHE_AND_LINKED_LIST",
                                        "help": "The cache stores recently accessed log tags (address of tag) and their corresponding log levels,\nproviding faster lookups for frequently used tags. Cache size can be configured using the\nLOG_TAG_LEVEL_IMPL_CACHE_SIZE option. The cache approach compares the tag pointers, which is\nfaster than comparing the whole strings.",
                                        "id": "component-config-log-log-level-level-settings-cache-implementation",
                                        "name": "LOG_TAG_LEVEL_CACHE_IMPL",
                                        "title": "Cache implementation",
                                        "type": "choice"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "LOG_TAG_LEVEL_CACHE_ARRAY || LOG_TAG_LEVEL_CACHE_BINARY_MIN_HEAP",
                                        "help": "This option sets the size of the cache used for log tag entries. The cache stores recently accessed\nlog tags and their corresponding log levels, which helps improve the efficiency of log level retrieval.\nThe value must be a power of 2 minus 1 (e.g., 1, 3, 7, 15, 31, 63, 127, 255, ...)\nto ensure proper cache behavior. For LOG_TAG_LEVEL_CACHE_ARRAY option the value can be any,\nwithout restrictions.\n\nNote: A larger cache size can improve lookup performance for frequently used log tags but may consume\nmore memory. Conversely, a smaller cache size reduces memory usage but may lead to more frequent cache\nevictions for less frequently used log tags.",
                                        "id": "LOG_TAG_LEVEL_IMPL_CACHE_SIZE",
                                        "name": "LOG_TAG_LEVEL_IMPL_CACHE_SIZE",
                                        "range": null,
                                        "title": "Log Tag Cache Size",
                                        "type": "int"
                                    }
                                ],
                                "depends_on": null,
                                "id": "component-config-log-log-level-level-settings",
                                "title": "Level Settings",
                                "type": "menu"
                            }
                        ],
                        "depends_on": null,
                        "id": "component-config-log-log-level",
                        "title": "Log Level",
                        "type": "menu"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "Enable ANSI terminal color codes. Logs (info, errors, warnings) will contain color codes.\nIn order to view these, your terminal program must support ANSI color codes.",
                                "id": "LOG_COLORS",
                                "name": "LOG_COLORS",
                                "range": null,
                                "title": "Color",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "LOG_VERSION_2",
                                "help": "Enables support for color codes in the esp_log() function. If CONFIG_LOG_COLORS is enabled, this option\nis always active. If CONFIG_LOG_COLORS is disabled, this option allows you to still handle color codes\nin specific files by defining ESP_LOG_COLOR_DISABLED as 0 before including esp_log.h.\n\nNote that enabling this option may slightly increase IRAM usage due to additional color handling\nfunctionality. It provides flexibility to manage color output even when CONFIG_LOG_COLORS is turned off.",
                                "id": "LOG_COLORS_SUPPORT",
                                "name": "LOG_COLORS_SUPPORT",
                                "range": null,
                                "title": "Allow enabling color output at run time",
                                "type": "bool"
                            },
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": "LOG_VERSION_2 && <choice LOG_TIMESTAMP_SOURCE>",
                                        "help": null,
                                        "id": "LOG_TIMESTAMP_SOURCE_NONE",
                                        "name": "LOG_TIMESTAMP_SOURCE_NONE",
                                        "range": null,
                                        "title": "None",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "<choice LOG_TIMESTAMP_SOURCE>",
                                        "help": null,
                                        "id": "LOG_TIMESTAMP_SOURCE_RTOS",
                                        "name": "LOG_TIMESTAMP_SOURCE_RTOS",
                                        "range": null,
                                        "title": "Milliseconds Since Boot",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "<choice LOG_TIMESTAMP_SOURCE>",
                                        "help": null,
                                        "id": "LOG_TIMESTAMP_SOURCE_SYSTEM",
                                        "name": "LOG_TIMESTAMP_SOURCE_SYSTEM",
                                        "range": null,
                                        "title": "System Time (HH:MM:SS.sss)",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "LOG_VERSION_2 && <choice LOG_TIMESTAMP_SOURCE>",
                                        "help": null,
                                        "id": "LOG_TIMESTAMP_SOURCE_SYSTEM_FULL",
                                        "name": "LOG_TIMESTAMP_SOURCE_SYSTEM_FULL",
                                        "range": null,
                                        "title": "System Time (YY-MM-DD HH:MM:SS.sss)",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "LOG_VERSION_2 && <choice LOG_TIMESTAMP_SOURCE>",
                                        "help": null,
                                        "id": "LOG_TIMESTAMP_SOURCE_UNIX",
                                        "name": "LOG_TIMESTAMP_SOURCE_UNIX",
                                        "range": null,
                                        "title": "Unix time in milliseconds",
                                        "type": "bool"
                                    }
                                ],
                                "depends_on": null,
                                "help": "Choose what sort of timestamp is displayed in the log output:\n\n- \"None\" - The log will only contain the actual log messages themselves\n  without any time-related information. Avoiding timestamps can help conserve\n  processing power and memory. It might useful when you\n  perform log analysis or debugging, sometimes it's more straightforward\n  to work with logs that lack timestamps, especially if the time of occurrence\n  is not critical for understanding the issues.\n\n- \"Milliseconds since boot\" is calculated from the RTOS tick count multiplied\n  by the tick period. This time will reset after a software reboot.\n  e.g. (90000)\n\n- \"System time (HH:MM:SS.sss)\" is taken from POSIX time functions which use the chip's\n  RTC and high resolution timers to maintain an accurate time. The system time is\n  initialized to 0 on startup, it can be set with an SNTP sync, or with\n  POSIX time functions. This time will not reset after a software reboot.\n  e.g. (00:01:30.000)\n\n- \"System time (YY-MM-DD HH:MM:SS.sss)\" it is the same as the above,\n  but also prints the date as well.\n\n- \"Unix time in milliseconds\" is the same as the two above,\n  but in Unix time format and in milliseconds.\n  e.g. (1718795571035).\n\n- NOTE: Currently this will not get used in logging from binary blobs\n  (i.e WiFi & Bluetooth libraries), these will always print\n  milliseconds since boot.",
                                "id": "component-config-log-format-timestamp",
                                "name": "LOG_TIMESTAMP_SOURCE",
                                "title": "Timestamp",
                                "type": "choice"
                            },
                            {
                                "children": [],
                                "depends_on": "LOG_VERSION_2",
                                "help": "Enables support for timestamp in the esp_log() function.\nIf CONFIG_LOG_TIMESTAMP_SOURCE_NONE, this option allows you to still handle timestamp\nin specific files by defining ESP_LOG_TIMESTAMP_DISABLED as 0 before including esp_log.h.\n\nNote that enabling this option may slightly increase IRAM usage due to additional timestamp handling\nfunctionality. It provides flexibility to manage timestamp output even when\nCONFIG_LOG_TIMESTAMP_SOURCE_NONE.",
                                "id": "LOG_TIMESTAMP_SUPPORT",
                                "name": "LOG_TIMESTAMP_SUPPORT",
                                "range": null,
                                "title": "Allow enabling timestamp output at run time",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "id": "component-config-log-format",
                        "title": "Format",
                        "type": "menu"
                    }
                ],
                "depends_on": null,
                "id": "component-config-log",
                "title": "Log",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "<choice MBEDTLS_MEM_ALLOC_MODE>",
                                "help": null,
                                "id": "MBEDTLS_INTERNAL_MEM_ALLOC",
                                "name": "MBEDTLS_INTERNAL_MEM_ALLOC",
                                "range": null,
                                "title": "Internal memory",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "(SPIRAM_USE_CAPS_ALLOC || SPIRAM_USE_MALLOC) && <choice MBEDTLS_MEM_ALLOC_MODE>",
                                "help": null,
                                "id": "MBEDTLS_EXTERNAL_MEM_ALLOC",
                                "name": "MBEDTLS_EXTERNAL_MEM_ALLOC",
                                "range": null,
                                "title": "External SPIRAM",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice MBEDTLS_MEM_ALLOC_MODE>",
                                "help": null,
                                "id": "MBEDTLS_DEFAULT_MEM_ALLOC",
                                "name": "MBEDTLS_DEFAULT_MEM_ALLOC",
                                "range": null,
                                "title": "Default alloc mode",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice MBEDTLS_MEM_ALLOC_MODE>",
                                "help": null,
                                "id": "MBEDTLS_CUSTOM_MEM_ALLOC",
                                "name": "MBEDTLS_CUSTOM_MEM_ALLOC",
                                "range": null,
                                "title": "Custom alloc mode",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "ESP32_IRAM_AS_8BIT_ACCESSIBLE_MEMORY && <choice MBEDTLS_MEM_ALLOC_MODE>",
                                "help": "Allows to use IRAM memory region as 8bit accessible region.\n\nTLS input and output buffers will be allocated in IRAM section which is 32bit aligned\nmemory. Every unaligned (8bit or 16bit) access will result in an exception\nand incur penalty of certain clock cycles per unaligned read/write.",
                                "id": "MBEDTLS_IRAM_8BIT_MEM_ALLOC",
                                "name": "MBEDTLS_IRAM_8BIT_MEM_ALLOC",
                                "range": null,
                                "title": "Internal IRAM",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "help": "Allocation strategy for mbedTLS, essentially provides ability to\nallocate all required dynamic allocations from,\n\n- Internal DRAM memory only\n- External SPIRAM memory only\n- Either internal or external memory based on default malloc()\n  behavior in ESP-IDF\n- Custom allocation mode, by overwriting calloc()/free() using\n  mbedtls_platform_set_calloc_free() function\n- Internal IRAM memory wherever applicable else internal DRAM\n\nRecommended mode here is always internal (*), since that is most preferred\nfrom security perspective. But if application requirement does not\nallow sufficient free internal memory then alternate mode can be\nselected.\n\n(*) In case of ESP32-S2/ESP32-S3, hardware allows encryption of external\nSPIRAM contents provided hardware flash encryption feature is enabled.\nIn that case, using external SPIRAM allocation strategy is also safe choice\nfrom security perspective.",
                        "id": "component-config-mbedtls-memory-allocation-strategy",
                        "name": "MBEDTLS_MEM_ALLOC_MODE",
                        "title": "Memory allocation strategy",
                        "type": "choice"
                    },
                    {
                        "children": [],
                        "depends_on": "!MBEDTLS_ASYMMETRIC_CONTENT_LEN",
                        "help": "Maximum TLS message length (in bytes) supported by mbedTLS.\n\n16384 is the default and this value is required to comply\nfully with TLS standards.\n\nHowever you can set a lower value in order to save RAM. This\nis safe if the other end of the connection supports Maximum\nFragment Length Negotiation Extension (max_fragment_length,\nsee RFC6066) or you know for certain that it will never send a\nmessage longer than a certain number of bytes.\n\nIf the value is set too low, symptoms are a failed TLS\nhandshake or a return value of MBEDTLS_ERR_SSL_INVALID_RECORD\n(-0x7200).",
                        "id": "MBEDTLS_SSL_MAX_CONTENT_LEN",
                        "name": "MBEDTLS_SSL_MAX_CONTENT_LEN",
                        "range": null,
                        "title": "TLS maximum message content length",
                        "type": "int"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "MBEDTLS_ASYMMETRIC_CONTENT_LEN",
                                "help": "This defines maximum incoming fragment length, overriding default\nmaximum content length (MBEDTLS_SSL_MAX_CONTENT_LEN).",
                                "id": "MBEDTLS_SSL_IN_CONTENT_LEN",
                                "name": "MBEDTLS_SSL_IN_CONTENT_LEN",
                                "range": [
                                    512,
                                    16384
                                ],
                                "title": "TLS maximum incoming fragment length",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": "MBEDTLS_ASYMMETRIC_CONTENT_LEN",
                                "help": "This defines maximum outgoing fragment length, overriding default\nmaximum content length (MBEDTLS_SSL_MAX_CONTENT_LEN).",
                                "id": "MBEDTLS_SSL_OUT_CONTENT_LEN",
                                "name": "MBEDTLS_SSL_OUT_CONTENT_LEN",
                                "range": [
                                    512,
                                    16384
                                ],
                                "title": "TLS maximum outgoing fragment length",
                                "type": "int"
                            }
                        ],
                        "depends_on": null,
                        "help": "If enabled, this option allows customizing TLS in/out fragment length\nin asymmetric way. Please note that enabling this with default values\nsaves 12KB of dynamic memory per TLS connection.",
                        "id": "MBEDTLS_ASYMMETRIC_CONTENT_LEN",
                        "name": "MBEDTLS_ASYMMETRIC_CONTENT_LEN",
                        "range": null,
                        "title": "Asymmetric in/out fragment length",
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": "MBEDTLS_DYNAMIC_FREE_CONFIG_DATA",
                                        "help": "Free CA certificate after its usage in the handshake process.\nThis option will decrease the heap footprint for the TLS handshake, but may lead to a problem:\nIf the respective ssl object needs to perform the TLS handshake again,\nthe CA certificate should once again be registered to the ssl object.",
                                        "id": "MBEDTLS_DYNAMIC_FREE_CA_CERT",
                                        "name": "MBEDTLS_DYNAMIC_FREE_CA_CERT",
                                        "range": null,
                                        "title": "Free SSL CA certificate after its usage",
                                        "type": "bool"
                                    }
                                ],
                                "depends_on": "MBEDTLS_DYNAMIC_BUFFER",
                                "help": "Free private key and DHM data after its usage in handshake process.\n\nThe option will decrease heap cost when handshake, but also lead to problem:\n\nBecause all certificate, private key and DHM data are freed so users should register\ncertificate and private key to ssl config object again.",
                                "id": "MBEDTLS_DYNAMIC_FREE_CONFIG_DATA",
                                "name": "MBEDTLS_DYNAMIC_FREE_CONFIG_DATA",
                                "range": null,
                                "title": "Free private key and DHM data after its usage",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "!IDF_TARGET_LINUX && !MBEDTLS_SSL_PROTO_DTLS && !MBEDTLS_SSL_VARIABLE_BUFFER_LENGTH",
                        "help": "Using dynamic TX/RX buffer. After enabling this option, mbedTLS will\nallocate TX buffer when need to send data and then free it if all data\nis sent, allocate RX buffer when need to receive data and then free it\nwhen all data is used or read by upper layer.\n\nBy default, when SSL is initialized, mbedTLS also allocate TX and\nRX buffer with the default value of \"MBEDTLS_SSL_OUT_CONTENT_LEN\" or\n\"MBEDTLS_SSL_IN_CONTENT_LEN\", so to save more heap, users can set\nthe options to be an appropriate value.",
                        "id": "MBEDTLS_DYNAMIC_BUFFER",
                        "name": "MBEDTLS_DYNAMIC_BUFFER",
                        "range": null,
                        "title": "Using dynamic TX/RX buffer",
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": "<choice MBEDTLS_DEBUG_LEVEL>",
                                        "help": null,
                                        "id": "MBEDTLS_DEBUG_LEVEL_WARN",
                                        "name": "MBEDTLS_DEBUG_LEVEL_WARN",
                                        "range": null,
                                        "title": "Warning",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "<choice MBEDTLS_DEBUG_LEVEL>",
                                        "help": null,
                                        "id": "MBEDTLS_DEBUG_LEVEL_INFO",
                                        "name": "MBEDTLS_DEBUG_LEVEL_INFO",
                                        "range": null,
                                        "title": "Info",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "<choice MBEDTLS_DEBUG_LEVEL>",
                                        "help": null,
                                        "id": "MBEDTLS_DEBUG_LEVEL_DEBUG",
                                        "name": "MBEDTLS_DEBUG_LEVEL_DEBUG",
                                        "range": null,
                                        "title": "Debug",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "<choice MBEDTLS_DEBUG_LEVEL>",
                                        "help": null,
                                        "id": "MBEDTLS_DEBUG_LEVEL_VERBOSE",
                                        "name": "MBEDTLS_DEBUG_LEVEL_VERBOSE",
                                        "range": null,
                                        "title": "Verbose",
                                        "type": "bool"
                                    }
                                ],
                                "depends_on": "MBEDTLS_DEBUG",
                                "help": "Set mbedTLS debugging level",
                                "id": "component-config-mbedtls-enable-mbedtls-debugging-set-mbedtls-debugging-level",
                                "name": "MBEDTLS_DEBUG_LEVEL",
                                "title": "Set mbedTLS debugging level",
                                "type": "choice"
                            }
                        ],
                        "depends_on": null,
                        "help": "Enable mbedTLS debugging functions at compile time.\n\nIf this option is enabled, you can include\n\"mbedtls/esp_debug.h\" and call mbedtls_esp_enable_debug_log()\nat runtime in order to enable mbedTLS debug output via the ESP\nlog mechanism.",
                        "id": "MBEDTLS_DEBUG",
                        "name": "MBEDTLS_DEBUG",
                        "range": null,
                        "title": "Enable mbedTLS debugging",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": null,
                        "id": "MBEDTLS_DEBUG_LEVEL",
                        "name": "MBEDTLS_DEBUG_LEVEL",
                        "range": null,
                        "title": null,
                        "type": "int"
                    },
                    {
                        "children": [
                            {
                                "children": [
                                    {
                                        "children": [
                                            {
                                                "children": [],
                                                "depends_on": "MBEDTLS_SSL_PROTO_TLS1_3",
                                                "help": null,
                                                "id": "MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE",
                                                "name": "MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE",
                                                "range": null,
                                                "title": "TLS 1.3 middlebox compatibility mode",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "MBEDTLS_SSL_PROTO_TLS1_3",
                                                "help": null,
                                                "id": "MBEDTLS_SSL_TLS1_3_KEXM_PSK",
                                                "name": "MBEDTLS_SSL_TLS1_3_KEXM_PSK",
                                                "range": null,
                                                "title": "TLS 1.3 PSK key exchange mode",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "MBEDTLS_SSL_PROTO_TLS1_3",
                                                "help": null,
                                                "id": "MBEDTLS_SSL_TLS1_3_KEXM_EPHEMERAL",
                                                "name": "MBEDTLS_SSL_TLS1_3_KEXM_EPHEMERAL",
                                                "range": null,
                                                "title": "TLS 1.3 ephemeral key exchange mode",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "MBEDTLS_SSL_PROTO_TLS1_3",
                                                "help": null,
                                                "id": "MBEDTLS_SSL_TLS1_3_KEXM_PSK_EPHEMERAL",
                                                "name": "MBEDTLS_SSL_TLS1_3_KEXM_PSK_EPHEMERAL",
                                                "range": null,
                                                "title": "TLS 1.3 PSK ephemeral key exchange mode",
                                                "type": "bool"
                                            }
                                        ],
                                        "depends_on": "MBEDTLS_SSL_PROTO_TLS1_3",
                                        "id": "component-config-mbedtls-mbedtls-v3-x-related-support-tls-1-3-protocol-tls-1-3-related-configurations",
                                        "title": "TLS 1.3 related configurations",
                                        "type": "menu"
                                    }
                                ],
                                "depends_on": "MBEDTLS_TLS_ENABLED && MBEDTLS_SSL_KEEP_PEER_CERTIFICATE && !MBEDTLS_DYNAMIC_BUFFER",
                                "help": null,
                                "id": "MBEDTLS_SSL_PROTO_TLS1_3",
                                "name": "MBEDTLS_SSL_PROTO_TLS1_3",
                                "range": null,
                                "title": "Support TLS 1.3 protocol",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "This enables the SSL buffer to be resized automatically\nbased on the negotiated maximum fragment length in each direction.",
                                "id": "MBEDTLS_SSL_VARIABLE_BUFFER_LENGTH",
                                "name": "MBEDTLS_SSL_VARIABLE_BUFFER_LENGTH",
                                "range": null,
                                "title": "Variable SSL buffer length",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "MBEDTLS_ECDH_C && MBEDTLS_ECP_RESTARTABLE",
                                "help": "Use the legacy ECDH context format.\nDefine this option only if you enable MBEDTLS_ECP_RESTARTABLE or if you\nwant to access ECDH context fields directly.",
                                "id": "MBEDTLS_ECDH_LEGACY_CONTEXT",
                                "name": "MBEDTLS_ECDH_LEGACY_CONTEXT",
                                "range": null,
                                "title": "Use a backward compatible ECDH context (Experimental)",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "Enables users to configure the set of trusted certificates\nthrough a callback instead of a linked list.\n\nSee mbedTLS documentation for required API and more details.",
                                "id": "MBEDTLS_X509_TRUSTED_CERT_CALLBACK",
                                "name": "MBEDTLS_X509_TRUSTED_CERT_CALLBACK",
                                "range": null,
                                "title": "Enable trusted certificate callbacks",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "MBEDTLS_GCM_C || MBEDTLS_CCM_C || MBEDTLS_CHACHAPOLY_C",
                                "help": "Enable serialization of the TLS context structures\nThis is a local optimization in handling a single, potentially long-lived connection.\n\nSee mbedTLS documentation for required API and more details.\nDisabling this option will save some code size.",
                                "id": "MBEDTLS_SSL_CONTEXT_SERIALIZATION",
                                "name": "MBEDTLS_SSL_CONTEXT_SERIALIZATION",
                                "range": null,
                                "title": "Enable serialization of the TLS context structures",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "Keep the peer's certificate after completion of the handshake.\nDisabling this option will save about 4kB of heap and some code size.\n\nSee mbedTLS documentation for required API and more details.",
                                "id": "MBEDTLS_SSL_KEEP_PEER_CERTIFICATE",
                                "name": "MBEDTLS_SSL_KEEP_PEER_CERTIFICATE",
                                "range": null,
                                "title": "Keep peer certificate after handshake completion",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "MBEDTLS_X509_CRL_PARSE_C",
                                "help": "Enable PKCS number 7 core for using PKCS number 7-formatted signatures.",
                                "id": "MBEDTLS_PKCS7_C",
                                "name": "MBEDTLS_PKCS7_C",
                                "range": null,
                                "title": "Enable PKCS number 7",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "MBEDTLS_SSL_PROTO_TLS1_3 || MBEDTLS_SSL_DTLS_CONNECTION_ID",
                                "help": "Controls the use of record plaintext padding in TLS 1.3 and\nwhen using the Connection ID extension in DTLS 1.2.\n\nThe padding will always be chosen so that the length of the\npadded plaintext is a multiple of the value of this option.\n\nNotes:\n    A value of 1 means that no padding will be used for outgoing records.\n    On systems lacking division instructions, a power of two should be preferred.",
                                "id": "MBEDTLS_SSL_CID_PADDING_GRANULARITY",
                                "name": "MBEDTLS_SSL_CID_PADDING_GRANULARITY",
                                "range": null,
                                "title": "Record plaintext padding",
                                "type": "int"
                            },
                            {
                                "children": [
                                    {
                                        "children": [
                                            {
                                                "children": [],
                                                "depends_on": "MBEDTLS_SSL_DTLS_CONNECTION_ID && MBEDTLS_SSL_PROTO_DTLS",
                                                "help": "Maximum length of CIDs used for incoming DTLS messages",
                                                "id": "MBEDTLS_SSL_CID_IN_LEN_MAX",
                                                "name": "MBEDTLS_SSL_CID_IN_LEN_MAX",
                                                "range": null,
                                                "title": "Maximum length of CIDs used for incoming DTLS messages",
                                                "type": "int"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "MBEDTLS_SSL_DTLS_CONNECTION_ID && MBEDTLS_SSL_PROTO_DTLS",
                                                "help": "Maximum length of CIDs used for outgoing DTLS messages",
                                                "id": "MBEDTLS_SSL_CID_OUT_LEN_MAX",
                                                "name": "MBEDTLS_SSL_CID_OUT_LEN_MAX",
                                                "range": null,
                                                "title": "Maximum length of CIDs used for outgoing DTLS messages",
                                                "type": "int"
                                            }
                                        ],
                                        "depends_on": "MBEDTLS_SSL_PROTO_DTLS",
                                        "help": "Enable support for the DTLS Connection ID extension which allows to\nidentify DTLS connections across changes in the underlying transport.",
                                        "id": "MBEDTLS_SSL_DTLS_CONNECTION_ID",
                                        "name": "MBEDTLS_SSL_DTLS_CONNECTION_ID",
                                        "range": null,
                                        "title": "Support for the DTLS Connection ID extension",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "MBEDTLS_SSL_PROTO_DTLS",
                                        "help": "Enable support for negotiation of DTLS-SRTP (RFC 5764) through the use_srtp extension.\n\nSee mbedTLS documentation for required API and more details.\nDisabling this option will save some code size.",
                                        "id": "MBEDTLS_SSL_DTLS_SRTP",
                                        "name": "MBEDTLS_SSL_DTLS_SRTP",
                                        "range": null,
                                        "title": "Enable support for negotiation of DTLS-SRTP (RFC 5764)",
                                        "type": "bool"
                                    }
                                ],
                                "depends_on": "MBEDTLS_SSL_PROTO_DTLS",
                                "id": "component-config-mbedtls-mbedtls-v3-x-related-dtls-based-configurations",
                                "title": "DTLS-based configurations",
                                "type": "menu"
                            }
                        ],
                        "depends_on": null,
                        "id": "component-config-mbedtls-mbedtls-v3-x-related",
                        "title": "mbedTLS v3.x related",
                        "type": "menu"
                    },
                    {
                        "children": [
                            {
                                "children": [
                                    {
                                        "children": [
                                            {
                                                "children": [],
                                                "depends_on": "<choice MBEDTLS_DEFAULT_CERTIFICATE_BUNDLE>",
                                                "help": null,
                                                "id": "MBEDTLS_CERTIFICATE_BUNDLE_DEFAULT_FULL",
                                                "name": "MBEDTLS_CERTIFICATE_BUNDLE_DEFAULT_FULL",
                                                "range": null,
                                                "title": "Use the full default certificate bundle",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice MBEDTLS_DEFAULT_CERTIFICATE_BUNDLE>",
                                                "help": "Use only the most common certificates from the default bundles, reducing the size with 50%,\nwhile still having around 99% coverage.",
                                                "id": "MBEDTLS_CERTIFICATE_BUNDLE_DEFAULT_CMN",
                                                "name": "MBEDTLS_CERTIFICATE_BUNDLE_DEFAULT_CMN",
                                                "range": null,
                                                "title": "Use only the most common certificates from the default bundles",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice MBEDTLS_DEFAULT_CERTIFICATE_BUNDLE>",
                                                "help": null,
                                                "id": "MBEDTLS_CERTIFICATE_BUNDLE_DEFAULT_NONE",
                                                "name": "MBEDTLS_CERTIFICATE_BUNDLE_DEFAULT_NONE",
                                                "range": null,
                                                "title": "Do not use the default certificate bundle",
                                                "type": "bool"
                                            }
                                        ],
                                        "depends_on": "MBEDTLS_CERTIFICATE_BUNDLE",
                                        "help": null,
                                        "id": "component-config-mbedtls-certificate-bundle-enable-trusted-root-certificate-bundle-default-certificate-bundle-options",
                                        "name": "MBEDTLS_DEFAULT_CERTIFICATE_BUNDLE",
                                        "title": "Default certificate bundle options",
                                        "type": "choice"
                                    },
                                    {
                                        "children": [
                                            {
                                                "children": [],
                                                "depends_on": "MBEDTLS_CUSTOM_CERTIFICATE_BUNDLE",
                                                "help": "Name of the custom certificate directory or file. This path is evaluated\nrelative to the project root directory.",
                                                "id": "MBEDTLS_CUSTOM_CERTIFICATE_BUNDLE_PATH",
                                                "name": "MBEDTLS_CUSTOM_CERTIFICATE_BUNDLE_PATH",
                                                "range": null,
                                                "title": "Custom certificate bundle path",
                                                "type": "string"
                                            }
                                        ],
                                        "depends_on": "MBEDTLS_CERTIFICATE_BUNDLE",
                                        "help": null,
                                        "id": "MBEDTLS_CUSTOM_CERTIFICATE_BUNDLE",
                                        "name": "MBEDTLS_CUSTOM_CERTIFICATE_BUNDLE",
                                        "range": null,
                                        "title": "Add custom certificates to the default bundle",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "MBEDTLS_CERTIFICATE_BUNDLE && !MBEDTLS_CERTIFICATE_BUNDLE_DEFAULT_NONE",
                                        "help": "Include the deprecated list of root certificates in the bundle.\nThis list gets updated when a certificate is removed from the Mozilla's\nNSS root certificate store. This config can be enabled if you would like\nto ensure that none of the certificates that were deployed in the product\nare affected because of the update to bundle. In turn, enabling this\nconfig keeps expired, retracted certificates in the bundle and it may\npose a security risk.\n\n- Deprecated cert list may grow based based on sync with upstream bundle\n- Deprecated certs would be be removed in ESP-IDF (next) major release",
                                        "id": "MBEDTLS_CERTIFICATE_BUNDLE_DEPRECATED_LIST",
                                        "name": "MBEDTLS_CERTIFICATE_BUNDLE_DEPRECATED_LIST",
                                        "range": null,
                                        "title": "Add deprecated root certificates",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "MBEDTLS_CERTIFICATE_BUNDLE",
                                        "help": null,
                                        "id": "MBEDTLS_CERTIFICATE_BUNDLE_MAX_CERTS",
                                        "name": "MBEDTLS_CERTIFICATE_BUNDLE_MAX_CERTS",
                                        "range": null,
                                        "title": "Maximum no of certificates allowed in certificate bundle",
                                        "type": "int"
                                    }
                                ],
                                "depends_on": null,
                                "help": "Enable support for large number of default root certificates\n\nWhen enabled this option allows user to store default as well\nas customer specific root certificates in compressed format rather\nthan storing full certificate. For the root certificates the public key and the subject name\nwill be stored.",
                                "id": "MBEDTLS_CERTIFICATE_BUNDLE",
                                "name": "MBEDTLS_CERTIFICATE_BUNDLE",
                                "range": null,
                                "title": "Enable trusted root certificate bundle",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "id": "component-config-mbedtls-certificate-bundle",
                        "title": "Certificate Bundle",
                        "type": "menu"
                    },
                    {
                        "children": [],
                        "depends_on": "MBEDTLS_ECP_C",
                        "help": "Enable \"non-blocking\" ECC operations that can return early and be resumed.",
                        "id": "MBEDTLS_ECP_RESTARTABLE",
                        "name": "MBEDTLS_ECP_RESTARTABLE",
                        "range": null,
                        "title": "Enable mbedTLS ecp restartable",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "MBEDTLS_AES_C || MBEDTLS_DES_C",
                        "help": "Enable the CMAC (Cipher-based Message Authentication Code) mode for\nblock ciphers.",
                        "id": "MBEDTLS_CMAC_C",
                        "name": "MBEDTLS_CMAC_C",
                        "range": null,
                        "title": "Enable CMAC mode for block ciphers",
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": "MBEDTLS_AES_USE_INTERRUPT",
                                        "help": "This config helps to set the interrupt priority level for the AES peripheral.\nValue 0 (default) means that there is no preference regarding the interrupt\npriority level and any level from 1 to 3 can be selected (based on the availability).\nNote: Higher value indicates high interrupt priority.",
                                        "id": "MBEDTLS_AES_INTERRUPT_LEVEL",
                                        "name": "MBEDTLS_AES_INTERRUPT_LEVEL",
                                        "range": null,
                                        "title": "AES hardware interrupt level",
                                        "type": "int"
                                    }
                                ],
                                "depends_on": "!IDF_TARGET_ESP32 && MBEDTLS_HARDWARE_AES",
                                "help": "Use an interrupt to coordinate long AES operations.\n\nThis allows other code to run on the CPU while an AES operation is pending.\nOtherwise the CPU busy-waits.",
                                "id": "MBEDTLS_AES_USE_INTERRUPT",
                                "name": "MBEDTLS_AES_USE_INTERRUPT",
                                "range": null,
                                "title": "Use interrupt for long AES operations",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "!SPIRAM_CACHE_WORKAROUND_STRATEGY_DUPLDST && SOC_AES_SUPPORTED",
                        "help": "Enable hardware accelerated AES encryption & decryption.\n\nNote that if the ESP32 CPU is running at 240MHz, hardware AES does not\noffer any speed boost over software AES.",
                        "id": "MBEDTLS_HARDWARE_AES",
                        "name": "MBEDTLS_HARDWARE_AES",
                        "range": null,
                        "title": "Enable hardware AES acceleration",
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": "<choice MBEDTLS_AES_USE_PSEUDO_ROUND_FUNC_STRENGTH>",
                                        "help": null,
                                        "id": "MBEDTLS_AES_USE_PSEUDO_ROUND_FUNC_STRENGTH_LOW",
                                        "name": "MBEDTLS_AES_USE_PSEUDO_ROUND_FUNC_STRENGTH_LOW",
                                        "range": null,
                                        "title": "Low",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "<choice MBEDTLS_AES_USE_PSEUDO_ROUND_FUNC_STRENGTH>",
                                        "help": null,
                                        "id": "MBEDTLS_AES_USE_PSEUDO_ROUND_FUNC_STRENGTH_MEDIUM",
                                        "name": "MBEDTLS_AES_USE_PSEUDO_ROUND_FUNC_STRENGTH_MEDIUM",
                                        "range": null,
                                        "title": "Medium",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "<choice MBEDTLS_AES_USE_PSEUDO_ROUND_FUNC_STRENGTH>",
                                        "help": null,
                                        "id": "MBEDTLS_AES_USE_PSEUDO_ROUND_FUNC_STRENGTH_HIGH",
                                        "name": "MBEDTLS_AES_USE_PSEUDO_ROUND_FUNC_STRENGTH_HIGH",
                                        "range": null,
                                        "title": "High",
                                        "type": "bool"
                                    }
                                ],
                                "depends_on": "MBEDTLS_AES_USE_PSEUDO_ROUND_FUNC",
                                "help": "The strength of the pseudo rounds functions can be configured to low, medium and high.\nYou can configure the strength of the pseudo rounds functions according to your use cases,\nfor example, increasing the strength would provide higher security but would slow down the\nhardware AES encryption/decryption operations.",
                                "id": "component-config-mbedtls-enable-aes-hardware-s-pseudo-round-function-strength-of-the-pseudo-rounds-function",
                                "name": "MBEDTLS_AES_USE_PSEUDO_ROUND_FUNC_STRENGTH",
                                "title": "Strength of the pseudo rounds function",
                                "type": "choice"
                            }
                        ],
                        "depends_on": "SOC_AES_SUPPORT_PSEUDO_ROUND_FUNCTION",
                        "help": "Enables the pseudo round function of the AES peripheral.\nEnabling this would impact the performance of the AES operations.\nFor more info regarding the performance impact, please checkout the pseudo round function section of the\nsecurity guide.",
                        "id": "MBEDTLS_AES_USE_PSEUDO_ROUND_FUNC",
                        "name": "MBEDTLS_AES_USE_PSEUDO_ROUND_FUNC",
                        "range": null,
                        "title": "Enable AES hardware's pseudo round function",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": null,
                        "id": "MBEDTLS_AES_USE_PSEUDO_ROUND_FUNC_STRENGTH",
                        "name": "MBEDTLS_AES_USE_PSEUDO_ROUND_FUNC_STRENGTH",
                        "range": null,
                        "title": null,
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": "SOC_AES_SUPPORT_GCM && MBEDTLS_HARDWARE_AES",
                        "help": "Enable partially hardware accelerated GCM. GHASH calculation is still done\nin software.\n\nIf MBEDTLS_HARDWARE_GCM is disabled and MBEDTLS_HARDWARE_AES is enabled then\nmbedTLS will still use the hardware accelerated AES block operation, but\non a single block at a time.",
                        "id": "MBEDTLS_HARDWARE_GCM",
                        "name": "MBEDTLS_HARDWARE_GCM",
                        "range": null,
                        "title": "Enable partially hardware accelerated GCM",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "MBEDTLS_HARDWARE_AES",
                        "help": "Enable this config to support fallback to software definitions for a non-AES\ncipher GCM operation as we support hardware acceleration only for AES cipher.\nSome of the non-AES ciphers used in a GCM operation are DES, ARIA, CAMELLIA,\nCHACHA20, BLOWFISH.\n\nIf this config is disabled, performing a non-AES cipher GCM operation with\nthe config MBEDTLS_HARDWARE_AES enabled will result in calculation of an\nAES-GCM operation instead for the given input values and thus could lead\nto failure in certificate validation which would ultimately lead to a SSL\nhandshake failure.\n\nThis config being by-default enabled leads to an increase in binary size\nfootprint of ~2.5KB.\nIn case you are sure that your use case (for example, client and server\nconfigurations in case of a TLS handshake) would not involve any GCM\noperations using a non-AES cipher, you can safely disable this config,\nleading to reduction in binary size footprint.",
                        "id": "MBEDTLS_GCM_SUPPORT_NON_AES_CIPHER",
                        "name": "MBEDTLS_GCM_SUPPORT_NON_AES_CIPHER",
                        "range": null,
                        "title": "Enable support for non-AES ciphers in GCM operation",
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "MBEDTLS_HARDWARE_MPI",
                                "help": "Fallback to software implementation for RSA key lengths\nlarger than SOC_RSA_MAX_BIT_LEN. If this is not active\nthen the ESP will be unable to process keys greater\nthan SOC_RSA_MAX_BIT_LEN.",
                                "id": "MBEDTLS_LARGE_KEY_SOFTWARE_MPI",
                                "name": "MBEDTLS_LARGE_KEY_SOFTWARE_MPI",
                                "range": null,
                                "title": "Fallback to software implementation for larger MPI values",
                                "type": "bool"
                            },
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": "MBEDTLS_MPI_USE_INTERRUPT",
                                        "help": "This config helps to set the interrupt priority level for the MPI peripheral.\nValue 0 (default) means that there is no preference regarding the interrupt\npriority level and any level from 1 to 3 can be selected (based on the availability).\nNote: Higher value indicates high interrupt priority.",
                                        "id": "MBEDTLS_MPI_INTERRUPT_LEVEL",
                                        "name": "MBEDTLS_MPI_INTERRUPT_LEVEL",
                                        "range": null,
                                        "title": "MPI hardware interrupt level",
                                        "type": "int"
                                    }
                                ],
                                "depends_on": "!IDF_TARGET_ESP32 && MBEDTLS_HARDWARE_MPI",
                                "help": "Use an interrupt to coordinate long MPI operations.\n\nThis allows other code to run on the CPU while an MPI operation is pending.\nOtherwise the CPU busy-waits.",
                                "id": "MBEDTLS_MPI_USE_INTERRUPT",
                                "name": "MBEDTLS_MPI_USE_INTERRUPT",
                                "range": null,
                                "title": "Use interrupt for MPI exp-mod operations",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "!SPIRAM_CACHE_WORKAROUND_STRATEGY_DUPLDST && SOC_MPI_SUPPORTED",
                        "help": "Enable hardware accelerated multiple precision integer operations.\n\nHardware accelerated multiplication, modulo multiplication,\nand modular exponentiation for up to SOC_RSA_MAX_BIT_LEN bit results.\n\nThese operations are used by RSA.",
                        "id": "MBEDTLS_HARDWARE_MPI",
                        "name": "MBEDTLS_HARDWARE_MPI",
                        "range": null,
                        "title": "Enable hardware MPI (bignum) acceleration",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "!SPIRAM_CACHE_WORKAROUND_STRATEGY_DUPLDST && SOC_SHA_SUPPORTED",
                        "help": "Enable hardware accelerated SHA1, SHA256, SHA384 & SHA512 in mbedTLS.\n\nDue to a hardware limitation, on the ESP32 hardware acceleration is only\nguaranteed if SHA digests are calculated one at a time. If more\nthan one SHA digest is calculated at the same time, one will\nbe calculated fully in hardware and the rest will be calculated\n(at least partially calculated) in software. This happens automatically.\n\nSHA hardware acceleration is faster than software in some situations but\nslower in others. You should benchmark to find the best setting for you.",
                        "id": "MBEDTLS_HARDWARE_SHA",
                        "name": "MBEDTLS_HARDWARE_SHA",
                        "range": null,
                        "title": "Enable hardware SHA acceleration",
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "MBEDTLS_HARDWARE_ECC",
                                "help": "Fallback to software implementation of ECC point multiplication and point verification\nfor curves not supported in hardware.",
                                "id": "MBEDTLS_ECC_OTHER_CURVES_SOFT_FALLBACK",
                                "name": "MBEDTLS_ECC_OTHER_CURVES_SOFT_FALLBACK",
                                "range": null,
                                "title": "Fallback to software implementation for curves not supported in hardware",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "SOC_ECC_SUPPORTED",
                        "help": "Enable hardware accelerated ECC point multiplication and point verification for points\non curve SECP192R1 and SECP256R1 in mbedTLS",
                        "id": "MBEDTLS_HARDWARE_ECC",
                        "name": "MBEDTLS_HARDWARE_ECC",
                        "range": null,
                        "title": "Enable hardware ECC acceleration",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Use ROM MD5 in mbedTLS.",
                        "id": "MBEDTLS_ROM_MD5",
                        "name": "MBEDTLS_ROM_MD5",
                        "range": null,
                        "title": "Use MD5 implementation in ROM",
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": "MBEDTLS_HARDWARE_ECDSA_SIGN && IDF_TARGET_ESP32H2",
                                        "help": "The ECDSA peripheral before ECO5 does not offer constant time ECDSA sign operation.\nThis time can be observed through power profiling of the device,\nmaking the ECDSA private key vulnerable to side-channel timing attacks.\nThis countermeasure masks the real ECDSA sign operation\nunder dummy sign operations to add randomness in the generated power signature.\nIt is highly recommended to also enable Secure Boot for the device in addition to this countermeasure\nso that only trusted software can execute on the device.",
                                        "id": "MBEDTLS_HARDWARE_ECDSA_SIGN_MASKING_CM",
                                        "name": "MBEDTLS_HARDWARE_ECDSA_SIGN_MASKING_CM",
                                        "range": null,
                                        "title": "Mask original ECDSA sign operation under dummy sign operations",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "MBEDTLS_HARDWARE_ECDSA_SIGN && IDF_TARGET_ESP32H2",
                                        "help": "This option adds a delay after the actual ECDSA signature operation\nso that the entire operation appears to be constant time for the software.\nThis fix helps in protecting the device only in case of remote timing attack on the ECDSA private key.\nFor e.g., When an interface is exposed by the device to perform ECDSA signature\nof an arbitrary message.\nThe signature time would appear to be constant to the external entity after enabling\nthis option.",
                                        "id": "MBEDTLS_HARDWARE_ECDSA_SIGN_CONSTANT_TIME_CM",
                                        "name": "MBEDTLS_HARDWARE_ECDSA_SIGN_CONSTANT_TIME_CM",
                                        "range": null,
                                        "title": "Make ECDSA signature operation pseudo constant time for software",
                                        "type": "bool"
                                    }
                                ],
                                "depends_on": "MBEDTLS_HARDWARE_ECDSA_SIGN && IDF_TARGET_ESP32H2",
                                "id": "component-config-mbedtls-enable-ecdsa-signing-using-on-chip-ecdsa-peripheral-enable-software-countermeasure-for-ecdsa-signing-using-on-chip-ecdsa-peripheral",
                                "title": "Enable Software Countermeasure for ECDSA signing using on-chip ECDSA peripheral",
                                "type": "menu"
                            }
                        ],
                        "depends_on": "SOC_ECDSA_SUPPORTED",
                        "help": "Enable hardware accelerated ECDSA peripheral to sign data\non curve SECP192R1 and SECP256R1 in mbedTLS.\n\nNote that for signing, the private key has to be burnt in an efuse key block\nwith key purpose set to ECDSA_KEY.\nIf no key is burnt, it will report an error\n\nThe key should be burnt in little endian format. espefuse.py utility handles it internally\nbut care needs to be taken while burning using esp_efuse APIs",
                        "id": "MBEDTLS_HARDWARE_ECDSA_SIGN",
                        "name": "MBEDTLS_HARDWARE_ECDSA_SIGN",
                        "range": null,
                        "title": "Enable ECDSA signing using on-chip ECDSA peripheral",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "SOC_ECDSA_SUPPORTED",
                        "help": "Enable hardware accelerated ECDSA peripheral to verify signature\non curve SECP192R1 and SECP256R1 in mbedTLS.",
                        "id": "MBEDTLS_HARDWARE_ECDSA_VERIFY",
                        "name": "MBEDTLS_HARDWARE_ECDSA_VERIFY",
                        "range": null,
                        "title": "Enable ECDSA signature verification using on-chip ECDSA peripheral",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "This option enables hardware acceleration for ECDSA sign function, only\nwhen using ATECC608A cryptoauth chip.",
                        "id": "MBEDTLS_ATCA_HW_ECDSA_SIGN",
                        "name": "MBEDTLS_ATCA_HW_ECDSA_SIGN",
                        "range": null,
                        "title": "Enable hardware ECDSA sign acceleration when using ATECC608A",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "This option enables hardware acceleration for ECDSA sign function, only\nwhen using ATECC608A cryptoauth chip.",
                        "id": "MBEDTLS_ATCA_HW_ECDSA_VERIFY",
                        "name": "MBEDTLS_ATCA_HW_ECDSA_VERIFY",
                        "range": null,
                        "title": "Enable hardware ECDSA verify acceleration when using ATECC608A",
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "MBEDTLS_HAVE_TIME",
                                "help": "Enabling this config will provide users with a function\n\"mbedtls_platform_set_time()\" that allows to set an alternative\ntime function pointer.",
                                "id": "MBEDTLS_PLATFORM_TIME_ALT",
                                "name": "MBEDTLS_PLATFORM_TIME_ALT",
                                "range": null,
                                "title": "Enable mbedtls time support: platform-specific",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "MBEDTLS_HAVE_TIME",
                                "help": "Enables X.509 certificate expiry checks in mbedTLS.\n\nIf this option is disabled (default) then X.509 certificate\n\"valid from\" and \"valid to\" timestamp fields are ignored.\n\nIf this option is enabled, these fields are compared with the\ncurrent system date and time. The time is retrieved using the\nstandard time() and gmtime() functions. If the certificate is not\nvalid for the current system time then verification will fail with\ncode MBEDTLS_X509_BADCERT_FUTURE or MBEDTLS_X509_BADCERT_EXPIRED.\n\nEnabling this option requires adding functionality in the firmware\nto set the system clock to a valid timestamp before using TLS. The\nrecommended way to do this is via ESP-IDF's SNTP functionality, but\nany method can be used.\n\nIn the case where only a small number of certificates are trusted by\nthe device, please carefully consider the tradeoffs of enabling this\noption. There may be undesired consequences, for example if all\ntrusted certificates expire while the device is offline and a TLS\nconnection is required to update. Or if an issue with the SNTP\nserver means that the system time is invalid for an extended period\nafter a reset.",
                                "id": "MBEDTLS_HAVE_TIME_DATE",
                                "name": "MBEDTLS_HAVE_TIME_DATE",
                                "range": null,
                                "title": "Enable mbedtls certificate expiry check",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "!ESP_TIME_FUNCS_USE_NONE",
                        "help": "Enable use of time.h functions (time() and gmtime()) by mbedTLS.\n\nThis option doesn't require the system time to be correct, but enables\nfunctionality that requires relative timekeeping - for example periodic\nexpiry of TLS session tickets or session cache entries.\n\nDisabling this option will save some firmware size, particularly if\nthe rest of the firmware doesn't call any standard timekeeeping\nfunctions.",
                        "id": "MBEDTLS_HAVE_TIME",
                        "name": "MBEDTLS_HAVE_TIME",
                        "range": null,
                        "title": "Enable mbedtls time support",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Standard ECDSA is \"fragile\" in the sense that lack of entropy when signing\nmay result in a compromise of the long-term signing key.",
                        "id": "MBEDTLS_ECDSA_DETERMINISTIC",
                        "name": "MBEDTLS_ECDSA_DETERMINISTIC",
                        "range": null,
                        "title": "Enable deterministic ECDSA",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Enable MBEDTLS_SHA512_C adds support for SHA-384 and SHA-512.",
                        "id": "MBEDTLS_SHA512_C",
                        "name": "MBEDTLS_SHA512_C",
                        "range": null,
                        "title": "Enable the SHA-384 and SHA-512 cryptographic hash algorithms",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Enabling MBEDTLS_SHA3_C adds support for SHA3.\nEnabling this configuration option increases the flash footprint\nby almost 4KB.",
                        "id": "MBEDTLS_SHA3_C",
                        "name": "MBEDTLS_SHA3_C",
                        "range": null,
                        "title": "Enable the SHA3 cryptographic hash algorithm",
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "<choice MBEDTLS_TLS_MODE>",
                                "help": null,
                                "id": "MBEDTLS_TLS_SERVER_AND_CLIENT",
                                "name": "MBEDTLS_TLS_SERVER_AND_CLIENT",
                                "range": null,
                                "title": "Server & Client",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice MBEDTLS_TLS_MODE>",
                                "help": null,
                                "id": "MBEDTLS_TLS_SERVER_ONLY",
                                "name": "MBEDTLS_TLS_SERVER_ONLY",
                                "range": null,
                                "title": "Server",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice MBEDTLS_TLS_MODE>",
                                "help": null,
                                "id": "MBEDTLS_TLS_CLIENT_ONLY",
                                "name": "MBEDTLS_TLS_CLIENT_ONLY",
                                "range": null,
                                "title": "Client",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice MBEDTLS_TLS_MODE>",
                                "help": null,
                                "id": "MBEDTLS_TLS_DISABLED",
                                "name": "MBEDTLS_TLS_DISABLED",
                                "range": null,
                                "title": "None",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "help": "mbedTLS can be compiled with protocol support for the TLS\nserver, TLS client, or both server and client.\n\nReducing the number of TLS roles supported saves code size.",
                        "id": "component-config-mbedtls-tls-protocol-role",
                        "name": "MBEDTLS_TLS_MODE",
                        "title": "TLS Protocol Role",
                        "type": "choice"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": null,
                        "id": "MBEDTLS_TLS_SERVER",
                        "name": "MBEDTLS_TLS_SERVER",
                        "range": null,
                        "title": null,
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": null,
                        "id": "MBEDTLS_TLS_CLIENT",
                        "name": "MBEDTLS_TLS_CLIENT",
                        "range": null,
                        "title": null,
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": null,
                        "id": "MBEDTLS_TLS_ENABLED",
                        "name": "MBEDTLS_TLS_ENABLED",
                        "range": null,
                        "title": null,
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": "MBEDTLS_PSK_MODES && MBEDTLS_TLS_ENABLED",
                                        "help": "Enable to support symmetric key PSK (pre-shared-key) TLS key exchange modes.",
                                        "id": "MBEDTLS_KEY_EXCHANGE_PSK",
                                        "name": "MBEDTLS_KEY_EXCHANGE_PSK",
                                        "range": null,
                                        "title": "Enable PSK based ciphersuite modes",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "MBEDTLS_PSK_MODES && MBEDTLS_DHM_C && MBEDTLS_TLS_ENABLED",
                                        "help": "Enable to support Diffie-Hellman PSK (pre-shared-key) TLS authentication modes.",
                                        "id": "MBEDTLS_KEY_EXCHANGE_DHE_PSK",
                                        "name": "MBEDTLS_KEY_EXCHANGE_DHE_PSK",
                                        "range": null,
                                        "title": "Enable DHE-PSK based ciphersuite modes",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "MBEDTLS_PSK_MODES && MBEDTLS_ECDH_C && MBEDTLS_TLS_ENABLED",
                                        "help": "Enable to support Elliptic-Curve-Diffie-Hellman PSK (pre-shared-key) TLS authentication modes.",
                                        "id": "MBEDTLS_KEY_EXCHANGE_ECDHE_PSK",
                                        "name": "MBEDTLS_KEY_EXCHANGE_ECDHE_PSK",
                                        "range": null,
                                        "title": "Enable ECDHE-PSK based ciphersuite modes",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "MBEDTLS_PSK_MODES && MBEDTLS_TLS_ENABLED",
                                        "help": "Enable to support RSA PSK (pre-shared-key) TLS authentication modes.",
                                        "id": "MBEDTLS_KEY_EXCHANGE_RSA_PSK",
                                        "name": "MBEDTLS_KEY_EXCHANGE_RSA_PSK",
                                        "range": null,
                                        "title": "Enable RSA-PSK based ciphersuite modes",
                                        "type": "bool"
                                    }
                                ],
                                "depends_on": "MBEDTLS_TLS_ENABLED",
                                "help": "Enable to show configuration for different types of pre-shared-key TLS authentatication methods.\n\nLeaving this options disabled will save code size if they are not used.",
                                "id": "MBEDTLS_PSK_MODES",
                                "name": "MBEDTLS_PSK_MODES",
                                "range": null,
                                "title": "Enable pre-shared-key ciphersuites",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "MBEDTLS_TLS_ENABLED",
                                "help": "Enable to support ciphersuites with prefix TLS-RSA-WITH-",
                                "id": "MBEDTLS_KEY_EXCHANGE_RSA",
                                "name": "MBEDTLS_KEY_EXCHANGE_RSA",
                                "range": null,
                                "title": "Enable RSA-only based ciphersuite modes",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "MBEDTLS_DHM_C && MBEDTLS_TLS_ENABLED",
                                "help": "Enable to support ciphersuites with prefix TLS-DHE-RSA-WITH-",
                                "id": "MBEDTLS_KEY_EXCHANGE_DHE_RSA",
                                "name": "MBEDTLS_KEY_EXCHANGE_DHE_RSA",
                                "range": null,
                                "title": "Enable DHE-RSA based ciphersuite modes",
                                "type": "bool"
                            },
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": "MBEDTLS_KEY_EXCHANGE_ELLIPTIC_CURVE && MBEDTLS_ECDH_C && MBEDTLS_TLS_ENABLED",
                                        "help": "Enable to support ciphersuites with prefix TLS-ECDHE-RSA-WITH-",
                                        "id": "MBEDTLS_KEY_EXCHANGE_ECDHE_RSA",
                                        "name": "MBEDTLS_KEY_EXCHANGE_ECDHE_RSA",
                                        "range": null,
                                        "title": "Enable ECDHE-RSA based ciphersuite modes",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "MBEDTLS_KEY_EXCHANGE_ELLIPTIC_CURVE && MBEDTLS_ECDH_C && MBEDTLS_ECDSA_C && MBEDTLS_TLS_ENABLED",
                                        "help": "Enable to support ciphersuites with prefix TLS-ECDHE-ECDSA-WITH-",
                                        "id": "MBEDTLS_KEY_EXCHANGE_ECDHE_ECDSA",
                                        "name": "MBEDTLS_KEY_EXCHANGE_ECDHE_ECDSA",
                                        "range": null,
                                        "title": "Enable ECDHE-ECDSA based ciphersuite modes",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "MBEDTLS_KEY_EXCHANGE_ELLIPTIC_CURVE && MBEDTLS_ECDH_C && MBEDTLS_ECDSA_C && MBEDTLS_TLS_ENABLED",
                                        "help": "Enable to support ciphersuites with prefix TLS-ECDH-ECDSA-WITH-",
                                        "id": "MBEDTLS_KEY_EXCHANGE_ECDH_ECDSA",
                                        "name": "MBEDTLS_KEY_EXCHANGE_ECDH_ECDSA",
                                        "range": null,
                                        "title": "Enable ECDH-ECDSA based ciphersuite modes",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "MBEDTLS_KEY_EXCHANGE_ELLIPTIC_CURVE && MBEDTLS_ECDH_C && MBEDTLS_TLS_ENABLED",
                                        "help": "Enable to support ciphersuites with prefix TLS-ECDH-RSA-WITH-",
                                        "id": "MBEDTLS_KEY_EXCHANGE_ECDH_RSA",
                                        "name": "MBEDTLS_KEY_EXCHANGE_ECDH_RSA",
                                        "range": null,
                                        "title": "Enable ECDH-RSA based ciphersuite modes",
                                        "type": "bool"
                                    }
                                ],
                                "depends_on": "MBEDTLS_ECP_C && MBEDTLS_TLS_ENABLED",
                                "help": "Enable to show Elliptic Curve based ciphersuite mode options.\n\nDisabling all Elliptic Curve ciphersuites saves code size and\ncan give slightly faster TLS handshakes, provided the server supports\nRSA-only ciphersuite modes.",
                                "id": "MBEDTLS_KEY_EXCHANGE_ELLIPTIC_CURVE",
                                "name": "MBEDTLS_KEY_EXCHANGE_ELLIPTIC_CURVE",
                                "range": null,
                                "title": "Support Elliptic Curve based ciphersuites",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "MBEDTLS_ECJPAKE_C && MBEDTLS_ECP_DP_SECP256R1_ENABLED && MBEDTLS_TLS_ENABLED",
                                "help": "Enable to support ciphersuites with prefix TLS-ECJPAKE-WITH-",
                                "id": "MBEDTLS_KEY_EXCHANGE_ECJPAKE",
                                "name": "MBEDTLS_KEY_EXCHANGE_ECJPAKE",
                                "range": null,
                                "title": "Enable ECJPAKE based ciphersuite modes",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "MBEDTLS_TLS_ENABLED",
                        "id": "component-config-mbedtls-tls-key-exchange-methods",
                        "title": "TLS Key Exchange Methods",
                        "type": "menu"
                    },
                    {
                        "children": [],
                        "depends_on": "MBEDTLS_TLS_ENABLED && MBEDTLS_SSL_PROTO_TLS1_2",
                        "help": "The two main uses of renegotiation are (1) refresh keys on long-lived\nconnections and (2) client authentication after the initial handshake.\nIf you don't need renegotiation, disabling it will save code size and\nreduce the possibility of abuse/vulnerability.",
                        "id": "MBEDTLS_SSL_RENEGOTIATION",
                        "name": "MBEDTLS_SSL_RENEGOTIATION",
                        "range": null,
                        "title": "Support TLS renegotiation",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "MBEDTLS_TLS_ENABLED",
                        "help": null,
                        "id": "MBEDTLS_SSL_PROTO_TLS1_2",
                        "name": "MBEDTLS_SSL_PROTO_TLS1_2",
                        "range": null,
                        "title": "Support TLS 1.2 protocol",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "MBEDTLS_TLS_ENABLED",
                        "help": "Provisions for GM/T SSL 1.1 support",
                        "id": "MBEDTLS_SSL_PROTO_GMTSSL1_1",
                        "name": "MBEDTLS_SSL_PROTO_GMTSSL1_1",
                        "range": null,
                        "title": "Support GM/T SSL 1.1 protocol",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "MBEDTLS_SSL_PROTO_TLS1_2",
                        "help": "Requires TLS 1.2 to be enabled for DTLS 1.2",
                        "id": "MBEDTLS_SSL_PROTO_DTLS",
                        "name": "MBEDTLS_SSL_PROTO_DTLS",
                        "range": null,
                        "title": "Support DTLS protocol (all versions)",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "MBEDTLS_TLS_ENABLED",
                        "help": "Disabling this option will save some code size if it is not needed.",
                        "id": "MBEDTLS_SSL_ALPN",
                        "name": "MBEDTLS_SSL_ALPN",
                        "range": null,
                        "title": "Support ALPN (Application Layer Protocol Negotiation)",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "MBEDTLS_TLS_ENABLED",
                        "help": "Client support for RFC 5077 session tickets. See mbedTLS documentation for more details.\nDisabling this option will save some code size.",
                        "id": "MBEDTLS_CLIENT_SSL_SESSION_TICKETS",
                        "name": "MBEDTLS_CLIENT_SSL_SESSION_TICKETS",
                        "range": null,
                        "title": "TLS: Client Support for RFC 5077 SSL session tickets",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "MBEDTLS_TLS_ENABLED && (MBEDTLS_GCM_C || MBEDTLS_CCM_C || MBEDTLS_CHACHAPOLY_C)",
                        "help": "Server support for RFC 5077 session tickets. See mbedTLS documentation for more details.\nDisabling this option will save some code size.",
                        "id": "MBEDTLS_SERVER_SSL_SESSION_TICKETS",
                        "name": "MBEDTLS_SERVER_SSL_SESSION_TICKETS",
                        "range": null,
                        "title": "TLS: Server Support for RFC 5077 SSL session tickets",
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": null,
                                "help": null,
                                "id": "MBEDTLS_AES_C",
                                "name": "MBEDTLS_AES_C",
                                "range": null,
                                "title": "AES block cipher",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": null,
                                "id": "MBEDTLS_CAMELLIA_C",
                                "name": "MBEDTLS_CAMELLIA_C",
                                "range": null,
                                "title": "Camellia block cipher",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "Enables the DES block cipher to support 3DES-based TLS ciphersuites.\n\n3DES is vulnerable to the Sweet32 attack and should only be enabled\nif absolutely necessary.",
                                "id": "MBEDTLS_DES_C",
                                "name": "MBEDTLS_DES_C",
                                "range": null,
                                "title": "DES block cipher (legacy, insecure)",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "Enables the Blowfish block cipher (not used for TLS sessions.)\n\nThe Blowfish cipher is not used for mbedTLS TLS sessions but can be\nused for other purposes. Read up on the limitations of Blowfish (including\nSweet32) before enabling.",
                                "id": "MBEDTLS_BLOWFISH_C",
                                "name": "MBEDTLS_BLOWFISH_C",
                                "range": null,
                                "title": "Blowfish block cipher (read help)",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "Enables the XTEA block cipher.",
                                "id": "MBEDTLS_XTEA_C",
                                "name": "MBEDTLS_XTEA_C",
                                "range": null,
                                "title": "XTEA block cipher",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "MBEDTLS_AES_C || MBEDTLS_CAMELLIA_C",
                                "help": "Enable Counter with CBC-MAC (CCM) modes for AES and/or Camellia ciphers.\n\nDisabling this option saves some code size.",
                                "id": "MBEDTLS_CCM_C",
                                "name": "MBEDTLS_CCM_C",
                                "range": null,
                                "title": "CCM (Counter with CBC-MAC) block cipher modes",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "MBEDTLS_AES_C || MBEDTLS_CAMELLIA_C",
                                "help": "Enable Galois/Counter Mode for AES and/or Camellia ciphers.\n\nThis option is generally faster than CCM.",
                                "id": "MBEDTLS_GCM_C",
                                "name": "MBEDTLS_GCM_C",
                                "range": null,
                                "title": "GCM (Galois/Counter) block cipher modes",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "MBEDTLS_AES_C",
                                "help": "Enable NIST key wrapping and key wrapping padding.",
                                "id": "MBEDTLS_NIST_KW_C",
                                "name": "MBEDTLS_NIST_KW_C",
                                "range": null,
                                "title": "NIST key wrapping (KW) and KW padding (KWP)",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "id": "component-config-mbedtls-symmetric-ciphers",
                        "title": "Symmetric Ciphers",
                        "type": "menu"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Enable the RIPEMD-160 hash algorithm.",
                        "id": "MBEDTLS_RIPEMD160_C",
                        "name": "MBEDTLS_RIPEMD160_C",
                        "range": null,
                        "title": "Enable RIPEMD-160 hash algorithm",
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "Enable decoding/parsing of PEM formatted certificates.\n\nIf your certificates are all in the simpler DER format, disabling\nthis option will save some code size.",
                                "id": "MBEDTLS_PEM_PARSE_C",
                                "name": "MBEDTLS_PEM_PARSE_C",
                                "range": null,
                                "title": "Read & Parse PEM formatted certificates",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "Enable writing of PEM formatted certificates.\n\nIf writing certificate data only in DER format, disabling this\noption will save some code size.",
                                "id": "MBEDTLS_PEM_WRITE_C",
                                "name": "MBEDTLS_PEM_WRITE_C",
                                "range": null,
                                "title": "Write PEM formatted certificates",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "Support for parsing X.509 Certificate Revocation Lists.",
                                "id": "MBEDTLS_X509_CRL_PARSE_C",
                                "name": "MBEDTLS_X509_CRL_PARSE_C",
                                "range": null,
                                "title": "X.509 CRL parsing",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "Support for parsing X.509 Certificate Signing Requests",
                                "id": "MBEDTLS_X509_CSR_PARSE_C",
                                "name": "MBEDTLS_X509_CSR_PARSE_C",
                                "range": null,
                                "title": "X.509 CSR parsing",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "id": "component-config-mbedtls-certificates",
                        "title": "Certificates",
                        "type": "menu"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "MBEDTLS_ECP_C",
                                "help": "Enhance support for reading EC keys using variants of SEC1 not allowed by\nRFC 5915 and RFC 5480.",
                                "id": "MBEDTLS_PK_PARSE_EC_EXTENDED",
                                "name": "MBEDTLS_PK_PARSE_EC_EXTENDED",
                                "range": null,
                                "title": "Enhance support for reading EC keys",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "MBEDTLS_ECP_C",
                                "help": "Enable the support for parsing public keys of type Short Weierstrass\n(MBEDTLS_ECP_DP_SECP_XXX and MBEDTLS_ECP_DP_BP_XXX) which are using the\ncompressed point format. This parsing is done through ECP module's functions.",
                                "id": "MBEDTLS_PK_PARSE_EC_COMPRESSED",
                                "name": "MBEDTLS_PK_PARSE_EC_COMPRESSED",
                                "range": null,
                                "title": "Enable the support for parsing public keys of type Short Weierstrass",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "help": null,
                        "id": "MBEDTLS_ECP_C",
                        "is_menuconfig": true,
                        "name": "MBEDTLS_ECP_C",
                        "range": null,
                        "title": "Elliptic Curve Ciphers",
                        "type": "menu"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Enable DHM. Needed to use DHE-xxx TLS ciphersuites.\n\nNote that the security of Diffie-Hellman key exchanges depends on\na suitable prime being used for the exchange. Please see detailed\nwarning text about this in file `mbedtls/dhm.h` file.",
                        "id": "MBEDTLS_DHM_C",
                        "name": "MBEDTLS_DHM_C",
                        "range": null,
                        "title": "Diffie-Hellman-Merkle key exchange (DHM)",
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "MBEDTLS_ECDH_C",
                                "help": "Enable ECDSA. Needed to use ECDSA-xxx TLS ciphersuites.",
                                "id": "MBEDTLS_ECDSA_C",
                                "name": "MBEDTLS_ECDSA_C",
                                "range": null,
                                "title": "Elliptic Curve DSA",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "MBEDTLS_ECP_C",
                        "help": "Enable ECDH. Needed to use ECDHE-xxx TLS ciphersuites.",
                        "id": "MBEDTLS_ECDH_C",
                        "name": "MBEDTLS_ECDH_C",
                        "range": null,
                        "title": "Elliptic Curve Diffie-Hellman (ECDH)",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "MBEDTLS_ECP_C",
                        "help": "Enable ECJPAKE. Needed to use ECJPAKE-xxx TLS ciphersuites.",
                        "id": "MBEDTLS_ECJPAKE_C",
                        "name": "MBEDTLS_ECJPAKE_C",
                        "range": null,
                        "title": "Elliptic curve J-PAKE",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "MBEDTLS_ECP_C",
                        "help": "Enable support for SECP192R1 Elliptic Curve.",
                        "id": "MBEDTLS_ECP_DP_SECP192R1_ENABLED",
                        "name": "MBEDTLS_ECP_DP_SECP192R1_ENABLED",
                        "range": null,
                        "title": "Enable SECP192R1 curve",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "MBEDTLS_ECP_C",
                        "help": "Enable support for SECP224R1 Elliptic Curve.",
                        "id": "MBEDTLS_ECP_DP_SECP224R1_ENABLED",
                        "name": "MBEDTLS_ECP_DP_SECP224R1_ENABLED",
                        "range": null,
                        "title": "Enable SECP224R1 curve",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "MBEDTLS_ECP_C",
                        "help": "Enable support for SECP256R1 Elliptic Curve.",
                        "id": "MBEDTLS_ECP_DP_SECP256R1_ENABLED",
                        "name": "MBEDTLS_ECP_DP_SECP256R1_ENABLED",
                        "range": null,
                        "title": "Enable SECP256R1 curve",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "MBEDTLS_ECP_C",
                        "help": "Enable support for SECP384R1 Elliptic Curve.",
                        "id": "MBEDTLS_ECP_DP_SECP384R1_ENABLED",
                        "name": "MBEDTLS_ECP_DP_SECP384R1_ENABLED",
                        "range": null,
                        "title": "Enable SECP384R1 curve",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "MBEDTLS_ECP_C",
                        "help": "Enable support for SECP521R1 Elliptic Curve.",
                        "id": "MBEDTLS_ECP_DP_SECP521R1_ENABLED",
                        "name": "MBEDTLS_ECP_DP_SECP521R1_ENABLED",
                        "range": null,
                        "title": "Enable SECP521R1 curve",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "MBEDTLS_ECP_C",
                        "help": "Enable support for SECP192K1 Elliptic Curve.",
                        "id": "MBEDTLS_ECP_DP_SECP192K1_ENABLED",
                        "name": "MBEDTLS_ECP_DP_SECP192K1_ENABLED",
                        "range": null,
                        "title": "Enable SECP192K1 curve",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "MBEDTLS_ECP_C",
                        "help": "Enable support for SECP224K1 Elliptic Curve.",
                        "id": "MBEDTLS_ECP_DP_SECP224K1_ENABLED",
                        "name": "MBEDTLS_ECP_DP_SECP224K1_ENABLED",
                        "range": null,
                        "title": "Enable SECP224K1 curve",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "MBEDTLS_ECP_C",
                        "help": "Enable support for SECP256K1 Elliptic Curve.",
                        "id": "MBEDTLS_ECP_DP_SECP256K1_ENABLED",
                        "name": "MBEDTLS_ECP_DP_SECP256K1_ENABLED",
                        "range": null,
                        "title": "Enable SECP256K1 curve",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "MBEDTLS_ECP_C",
                        "help": "support for DP Elliptic Curve.",
                        "id": "MBEDTLS_ECP_DP_BP256R1_ENABLED",
                        "name": "MBEDTLS_ECP_DP_BP256R1_ENABLED",
                        "range": null,
                        "title": "Enable BP256R1 curve",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "MBEDTLS_ECP_C",
                        "help": "support for DP Elliptic Curve.",
                        "id": "MBEDTLS_ECP_DP_BP384R1_ENABLED",
                        "name": "MBEDTLS_ECP_DP_BP384R1_ENABLED",
                        "range": null,
                        "title": "Enable BP384R1 curve",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "MBEDTLS_ECP_C",
                        "help": "support for DP Elliptic Curve.",
                        "id": "MBEDTLS_ECP_DP_BP512R1_ENABLED",
                        "name": "MBEDTLS_ECP_DP_BP512R1_ENABLED",
                        "range": null,
                        "title": "Enable BP512R1 curve",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "MBEDTLS_ECP_C",
                        "help": "Enable support for CURVE25519 Elliptic Curve.",
                        "id": "MBEDTLS_ECP_DP_CURVE25519_ENABLED",
                        "name": "MBEDTLS_ECP_DP_CURVE25519_ENABLED",
                        "range": null,
                        "title": "Enable CURVE25519 curve",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "MBEDTLS_ECP_C",
                        "help": "NIST 'modulo p' optimisations increase Elliptic Curve operation performance.\n\nDisabling this option saves some code size.",
                        "id": "MBEDTLS_ECP_NIST_OPTIM",
                        "name": "MBEDTLS_ECP_NIST_OPTIM",
                        "range": null,
                        "title": "NIST 'modulo p' optimisations",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "MBEDTLS_ECP_C",
                        "help": "This configuration option enables optimizations to speedup (about 3 ~ 4 times) the ECP\nfixed point multiplication using pre-computed tables in the flash memory.\nEnabling this configuration option increases the flash footprint\n(about 29KB if all Elliptic Curve selected) in the application binary.\n\n# end of Elliptic Curve options",
                        "id": "MBEDTLS_ECP_FIXED_POINT_OPTIM",
                        "name": "MBEDTLS_ECP_FIXED_POINT_OPTIM",
                        "range": null,
                        "title": "Enable fixed-point multiplication optimisations",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Enable support for Poly1305 MAC algorithm.",
                        "id": "MBEDTLS_POLY1305_C",
                        "name": "MBEDTLS_POLY1305_C",
                        "range": null,
                        "title": "Poly1305 MAC algorithm",
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "MBEDTLS_CHACHA20_C && MBEDTLS_POLY1305_C",
                                "help": "Enable support for ChaCha20-Poly1305 AEAD algorithm.",
                                "id": "MBEDTLS_CHACHAPOLY_C",
                                "name": "MBEDTLS_CHACHAPOLY_C",
                                "range": null,
                                "title": "ChaCha20-Poly1305 AEAD algorithm",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "help": "Enable support for Chacha20 stream cipher.",
                        "id": "MBEDTLS_CHACHA20_C",
                        "name": "MBEDTLS_CHACHA20_C",
                        "range": null,
                        "title": "Chacha20 stream cipher",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Enable support for the Hashed Message Authentication Code\n(HMAC)-based key derivation function (HKDF).",
                        "id": "MBEDTLS_HKDF_C",
                        "name": "MBEDTLS_HKDF_C",
                        "range": null,
                        "title": "HKDF algorithm (RFC 5869)",
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "MBEDTLS_THREADING_C",
                                "help": "Enable threading alt to allow your own alternate threading implementation.",
                                "id": "MBEDTLS_THREADING_ALT",
                                "name": "MBEDTLS_THREADING_ALT",
                                "range": null,
                                "title": "Enable threading alternate implementation",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "MBEDTLS_THREADING_C",
                                "help": "Enable the pthread wrapper layer for the threading layer.",
                                "id": "MBEDTLS_THREADING_PTHREAD",
                                "name": "MBEDTLS_THREADING_PTHREAD",
                                "range": null,
                                "title": "Enable threading pthread implementation",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "help": "If you do intend to use contexts between threads, you will need to enable\nthis layer to prevent race conditions.",
                        "id": "MBEDTLS_THREADING_C",
                        "name": "MBEDTLS_THREADING_C",
                        "range": null,
                        "title": "Enable the threading abstraction layer",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Enables mbedtls_strerror() for converting error codes to error strings.\nDisabling this config can save some code/rodata size as the error\nstring conversion implementation is replaced with an empty stub.",
                        "id": "MBEDTLS_ERROR_STRINGS",
                        "name": "MBEDTLS_ERROR_STRINGS",
                        "range": null,
                        "title": "Enable error code to error string conversion",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "ESP_ROM_HAS_MBEDTLS_CRYPTO_LIB",
                        "help": "Enable this flag to use mbedtls crypto algorithm from ROM instead of ESP-IDF.\n\nThis configuration option saves flash footprint in the application binary.\nNote that the version of mbedtls crypto algorithm library in ROM(ECO1~ECO3) is v2.16.12,\nand the version of mbedtls crypto algorithm library in ROM(ECO4) is v3.6.0.\nWe have done the security analysis of the mbedtls revision in ROM (ECO1~ECO4)\nand ensured that affected symbols have been patched (removed). If in the future\nmbedtls revisions there are security issues that also affects the version in\nROM (ECO1~ECO4) then we shall patch the relevant symbols. This would increase\nthe flash footprint and hence care must be taken to keep some reserved space\nfor the application binary in flash layout.",
                        "id": "MBEDTLS_USE_CRYPTO_ROM_IMPL",
                        "name": "MBEDTLS_USE_CRYPTO_ROM_IMPL",
                        "range": null,
                        "title": "Use ROM implementation of the crypto algorithm",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "(VFS_SUPPORT_IO && VFS_SUPPORT_DIR) || IDF_TARGET_LINUX",
                        "help": "This option enables functions in mbedTLS that use the filesystem.\nIt uses the default filesystem support for the target,\nwhich is added through vfs component for ESP32 based targets or by\nthe host system when the target is Linux.",
                        "id": "MBEDTLS_FS_IO",
                        "name": "MBEDTLS_FS_IO",
                        "range": null,
                        "title": "Enable functions that use the filesystem",
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "id": "component-config-mbedtls",
                "title": "mbedTLS",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "<choice LIBC>",
                                "help": null,
                                "id": "LIBC_NEWLIB",
                                "name": "LIBC_NEWLIB",
                                "range": null,
                                "title": "NewLib",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "!IDF_TOOLCHAIN_CLANG && IDF_EXPERIMENTAL_FEATURES && <choice LIBC>",
                                "help": null,
                                "id": "LIBC_PICOLIBC",
                                "name": "LIBC_PICOLIBC",
                                "range": null,
                                "title": "Picolibc (EXPERIMENTAL)",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "help": null,
                        "id": "component-config-libc-libc-to-build-application-with",
                        "name": "LIBC",
                        "title": "LibC to build application with",
                        "type": "choice"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "<choice LIBC_STDOUT_LINE_ENDING>",
                                "help": null,
                                "id": "LIBC_STDOUT_LINE_ENDING_CRLF",
                                "name": "LIBC_STDOUT_LINE_ENDING_CRLF",
                                "range": null,
                                "title": "CRLF",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice LIBC_STDOUT_LINE_ENDING>",
                                "help": null,
                                "id": "LIBC_STDOUT_LINE_ENDING_LF",
                                "name": "LIBC_STDOUT_LINE_ENDING_LF",
                                "range": null,
                                "title": "LF",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice LIBC_STDOUT_LINE_ENDING>",
                                "help": null,
                                "id": "LIBC_STDOUT_LINE_ENDING_CR",
                                "name": "LIBC_STDOUT_LINE_ENDING_CR",
                                "range": null,
                                "title": "CR",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "VFS_SUPPORT_IO",
                        "help": "This option allows configuring the desired line endings sent to console\nwhen a newline ('\\n', LF) appears on stdout.\nThree options are possible:\n\nCRLF: whenever LF is encountered, prepend it with CR\n\nLF: no modification is applied, stdout is sent as is\n\nCR: each occurrence of LF is replaced with CR\n\nThis option doesn't affect behavior of the UART driver (drivers/uart.h).",
                        "id": "component-config-libc-line-ending-for-console-output",
                        "name": "LIBC_STDOUT_LINE_ENDING",
                        "title": "Line ending for console output",
                        "type": "choice"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "<choice LIBC_STDIN_LINE_ENDING>",
                                "help": null,
                                "id": "LIBC_STDIN_LINE_ENDING_CRLF",
                                "name": "LIBC_STDIN_LINE_ENDING_CRLF",
                                "range": null,
                                "title": "CRLF",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice LIBC_STDIN_LINE_ENDING>",
                                "help": null,
                                "id": "LIBC_STDIN_LINE_ENDING_LF",
                                "name": "LIBC_STDIN_LINE_ENDING_LF",
                                "range": null,
                                "title": "LF",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice LIBC_STDIN_LINE_ENDING>",
                                "help": null,
                                "id": "LIBC_STDIN_LINE_ENDING_CR",
                                "name": "LIBC_STDIN_LINE_ENDING_CR",
                                "range": null,
                                "title": "CR",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "VFS_SUPPORT_IO",
                        "help": "This option allows configuring which input sequence on console produces\na newline ('\\n', LF) on stdin.\nThree options are possible:\n\nCRLF: CRLF is converted to LF\n\nLF: no modification is applied, input is sent to stdin as is\n\nCR: each occurrence of CR is replaced with LF\n\nThis option doesn't affect behavior of the UART driver (drivers/uart.h).",
                        "id": "component-config-libc-line-ending-for-console-input",
                        "name": "LIBC_STDIN_LINE_ENDING",
                        "title": "Line ending for console input",
                        "type": "choice"
                    },
                    {
                        "children": [],
                        "depends_on": "LIBC_NEWLIB",
                        "help": "In most chips the ROM contains parts of newlib C library, including printf/scanf family\nof functions. These functions have been compiled with so-called \"nano\"\nformatting option. This option doesn't support 64-bit integer formats and C99\nfeatures, such as positional arguments.\n\nFor more details about \"nano\" formatting option, please see newlib readme file,\nsearch for '--enable-newlib-nano-formatted-io':\nhttps://sourceware.org/git/?p=newlib-cygwin.git;a=blob_plain;f=newlib/README;hb=HEAD\n\nIf this option is enabled and the ROM contains functions from newlib-nano, the build system\nwill use functions available in ROM, reducing the application binary size.\nFunctions available in ROM run faster than functions which run from flash. Functions available\nin ROM can also run when flash instruction cache is disabled.\n\nSome chips (e.g. ESP32-C6) has the full formatting versions of printf/scanf in ROM instead of\nthe nano versions and in this building with newlib nano might actually increase the size of\nthe binary. Which functions are present in ROM can be seen from ROM caps:\nESP_ROM_HAS_NEWLIB_NANO_FORMAT and ESP_ROM_HAS_NEWLIB_NORMAL_FORMAT.\n\nIf you need 64-bit integer formatting support or C99 features, keep this\noption disabled.",
                        "id": "LIBC_NEWLIB_NANO_FORMAT",
                        "name": "LIBC_NEWLIB_NANO_FORMAT",
                        "range": null,
                        "title": "Enable 'nano' formatting options for printf/scanf family",
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "<choice LIBC_TIME_SYSCALL>",
                                "help": null,
                                "id": "LIBC_TIME_SYSCALL_USE_RTC_HRT",
                                "name": "LIBC_TIME_SYSCALL_USE_RTC_HRT",
                                "range": null,
                                "title": "RTC and high-resolution timer",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice LIBC_TIME_SYSCALL>",
                                "help": null,
                                "id": "LIBC_TIME_SYSCALL_USE_RTC",
                                "name": "LIBC_TIME_SYSCALL_USE_RTC",
                                "range": null,
                                "title": "RTC",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice LIBC_TIME_SYSCALL>",
                                "help": null,
                                "id": "LIBC_TIME_SYSCALL_USE_HRT",
                                "name": "LIBC_TIME_SYSCALL_USE_HRT",
                                "range": null,
                                "title": "High-resolution timer",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice LIBC_TIME_SYSCALL>",
                                "help": null,
                                "id": "LIBC_TIME_SYSCALL_USE_NONE",
                                "name": "LIBC_TIME_SYSCALL_USE_NONE",
                                "range": null,
                                "title": "None",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "help": "This setting defines which hardware timers are used to\nimplement 'gettimeofday' and 'time' functions in C library.\n\n- If both high-resolution (systimer for all targets except ESP32)\n    and RTC timers are used, timekeeping will continue in deep sleep.\n    Time will be reported at 1 microsecond resolution.\n    This is the default, and the recommended option.\n- If only high-resolution timer (systimer) is used, gettimeofday will\n    provide time at microsecond resolution.\n    Time will not be preserved when going into deep sleep mode.\n- If only RTC timer is used, timekeeping will continue in\n    deep sleep, but time will be measured at 6.(6) microsecond\n    resolution. Also the gettimeofday function itself may take\n    longer to run.\n- If no timers are used, gettimeofday and time functions\n    return -1 and set errno to ENOSYS; they are defined as weak,\n    so they could be overridden.\n    If you want to customize gettimeofday() and other time functions,\n    please choose this option and refer to the 'time.c' source file\n    for the exact prototypes of these functions.\n\n- When RTC is used for timekeeping, two RTC_STORE registers are\n    used to keep time in deep sleep mode.",
                        "id": "component-config-libc-timers-used-for-gettimeofday-function",
                        "name": "LIBC_TIME_SYSCALL",
                        "title": "Timers used for gettimeofday function",
                        "type": "choice"
                    }
                ],
                "depends_on": null,
                "id": "component-config-libc",
                "title": "LibC",
                "type": "menu"
            },
            {
                "children": [],
                "depends_on": null,
                "help": null,
                "id": "STDATOMIC_S32C1I_SPIRAM_WORKAROUND",
                "name": "STDATOMIC_S32C1I_SPIRAM_WORKAROUND",
                "range": null,
                "title": null,
                "type": "bool"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "SECURE_FLASH_ENC_ENABLED || SOC_HMAC_SUPPORTED",
                        "help": "This option enables encryption for NVS. When enabled, XTS-AES is used to encrypt\nthe complete NVS data, except the page headers. It requires XTS encryption keys\nto be stored in an encrypted partition (enabling flash encryption is mandatory here)\nor to be derived from an HMAC key burnt in eFuse.",
                        "id": "NVS_ENCRYPTION",
                        "name": "NVS_ENCRYPTION",
                        "range": null,
                        "title": "Enable NVS encryption",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "SECURE_FLASH_ENC_ENABLED",
                        "help": "Enabling this will ignore \"encrypted\" flag for NVS partitions. NVS encryption\nscheme is different than hardware flash encryption and hence it is not recommended\nto have \"encrypted\" flag for NVS partitions. This was not being checked in pre v4.3\nIDF. Hence, if you have any devices where this flag is kept enabled in partition\ntable then enabling this config will allow to have same behavior as pre v4.3 IDF.",
                        "id": "NVS_COMPATIBLE_PRE_V4_3_ENCRYPTION_FLAG",
                        "name": "NVS_COMPATIBLE_PRE_V4_3_ENCRYPTION_FLAG",
                        "range": null,
                        "title": "NVS partition encrypted flag compatible with ESP-IDF before v4.3",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "This option switches error checking type between assertions (y) or return codes (n).",
                        "id": "NVS_ASSERT_ERROR_CHECK",
                        "name": "NVS_ASSERT_ERROR_CHECK",
                        "range": null,
                        "title": "Use assertions for error checking",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Enabling this option will switch the nvs_set() family of functions to the legacy mode:\nwhen called repeatedly with the same key but different data type, the existing value\nin the NVS remains active and the new value is just stored, actually not accessible through\ncorresponding nvs_get() call for the key given. Use this option only when your application\nrelies on such NVS API behaviour.",
                        "id": "NVS_LEGACY_DUP_KEYS_COMPATIBILITY",
                        "name": "NVS_LEGACY_DUP_KEYS_COMPATIBILITY",
                        "range": null,
                        "title": "Enable legacy nvs_set function behavior when same key is reused with different data types",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "SPIRAM && (SPIRAM_USE_CAPS_ALLOC || SPIRAM_USE_MALLOC)",
                        "help": "Enabling this option lets NVS library try to allocate page cache and key hash list in SPIRAM\ninstead of internal RAM. It can help applications using large nvs partitions or large number\nof keys to save heap space in internal RAM. SPIRAM heap allocation negatively impacts speed\nof NVS operations as the CPU accesses NVS cache via SPI instead of direct access to the internal RAM.",
                        "id": "NVS_ALLOCATE_CACHE_IN_SPIRAM",
                        "name": "NVS_ALLOCATE_CACHE_IN_SPIRAM",
                        "range": null,
                        "title": "Prefers allocation of in-memory cache structures in SPI connected PSRAM",
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "id": "component-config-nvs",
                "title": "NVS",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Priority used to create new tasks with default pthread parameters.",
                        "id": "PTHREAD_TASK_PRIO_DEFAULT",
                        "name": "PTHREAD_TASK_PRIO_DEFAULT",
                        "range": [
                            0,
                            255
                        ],
                        "title": "Default task priority",
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Stack size used to create new tasks with default pthread parameters.",
                        "id": "PTHREAD_TASK_STACK_SIZE_DEFAULT",
                        "name": "PTHREAD_TASK_STACK_SIZE_DEFAULT",
                        "range": null,
                        "title": "Default task stack size",
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Minimum allowed pthread stack size set in attributes passed to pthread_create",
                        "id": "PTHREAD_STACK_MIN",
                        "name": "PTHREAD_STACK_MIN",
                        "range": null,
                        "title": "Minimum allowed pthread stack size",
                        "type": "int"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "<choice PTHREAD_TASK_CORE_DEFAULT>",
                                "help": null,
                                "id": "PTHREAD_DEFAULT_CORE_NO_AFFINITY",
                                "name": "PTHREAD_DEFAULT_CORE_NO_AFFINITY",
                                "range": null,
                                "title": "No affinity",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice PTHREAD_TASK_CORE_DEFAULT>",
                                "help": null,
                                "id": "PTHREAD_DEFAULT_CORE_0",
                                "name": "PTHREAD_DEFAULT_CORE_0",
                                "range": null,
                                "title": "Core 0",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice PTHREAD_TASK_CORE_DEFAULT>",
                                "help": null,
                                "id": "PTHREAD_DEFAULT_CORE_1",
                                "name": "PTHREAD_DEFAULT_CORE_1",
                                "range": null,
                                "title": "Core 1",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "!FREERTOS_UNICORE",
                        "help": "The default core to which pthreads are pinned.",
                        "id": "component-config-pthreads-default-pthread-core-affinity",
                        "name": "PTHREAD_TASK_CORE_DEFAULT",
                        "title": "Default pthread core affinity",
                        "type": "choice"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": null,
                        "id": "PTHREAD_TASK_CORE_DEFAULT",
                        "name": "PTHREAD_TASK_CORE_DEFAULT",
                        "range": null,
                        "title": null,
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "The default name of pthreads.",
                        "id": "PTHREAD_TASK_NAME_DEFAULT",
                        "name": "PTHREAD_TASK_NAME_DEFAULT",
                        "range": null,
                        "title": "Default name of pthreads",
                        "type": "string"
                    }
                ],
                "depends_on": null,
                "id": "component-config-pthreads",
                "title": "PThreads",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "SOC_MMU_PAGE_SIZE_8KB_SUPPORTED",
                                "help": null,
                                "id": "MMU_PAGE_SIZE_8KB",
                                "name": "MMU_PAGE_SIZE_8KB",
                                "range": null,
                                "title": null,
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": null,
                                "id": "MMU_PAGE_SIZE_16KB",
                                "name": "MMU_PAGE_SIZE_16KB",
                                "range": null,
                                "title": null,
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": null,
                                "id": "MMU_PAGE_SIZE_32KB",
                                "name": "MMU_PAGE_SIZE_32KB",
                                "range": null,
                                "title": null,
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": null,
                                "id": "MMU_PAGE_SIZE_64KB",
                                "name": "MMU_PAGE_SIZE_64KB",
                                "range": null,
                                "title": null,
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": null,
                                "id": "MMU_PAGE_MODE",
                                "name": "MMU_PAGE_MODE",
                                "range": null,
                                "title": null,
                                "type": "string"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": null,
                                "id": "MMU_PAGE_SIZE",
                                "name": "MMU_PAGE_SIZE",
                                "range": null,
                                "title": null,
                                "type": "hex"
                            }
                        ],
                        "depends_on": null,
                        "id": "component-config-soc-settings-mmu-config",
                        "title": "MMU Config",
                        "type": "menu"
                    }
                ],
                "depends_on": null,
                "id": "component-config-soc-settings",
                "title": "SoC Settings",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "!APP_BUILD_TYPE_PURE_RAM_APP",
                                "help": "When this option is selected, the patch will be enabled for XMC.\nFollow the recommended flow by XMC for better stability.\n\nDO NOT DISABLE UNLESS YOU KNOW WHAT YOU ARE DOING.",
                                "id": "SPI_FLASH_BROWNOUT_RESET_XMC",
                                "name": "SPI_FLASH_BROWNOUT_RESET_XMC",
                                "range": null,
                                "title": "Enable sending reset when brownout for XMC flash chips",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "!APP_BUILD_TYPE_PURE_RAM_APP",
                                "help": "When brownout happens during flash erase/write operations,\nsend reset command to stop the flash operations to improve stability.",
                                "id": "SPI_FLASH_BROWNOUT_RESET",
                                "name": "SPI_FLASH_BROWNOUT_RESET",
                                "range": null,
                                "title": null,
                                "type": "bool"
                            }
                        ],
                        "depends_on": "!APP_BUILD_TYPE_PURE_RAM_APP",
                        "id": "component-config-main-flash-configuration-spi-flash-behavior-when-brownout",
                        "title": "SPI Flash behavior when brownout",
                        "type": "menu"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "!APP_BUILD_TYPE_PURE_RAM_APP",
                                "help": "This is a helper config for HPM. Invisible for users.",
                                "id": "SPI_FLASH_UNDER_HIGH_FREQ",
                                "name": "SPI_FLASH_UNDER_HIGH_FREQ",
                                "range": null,
                                "title": null,
                                "type": "bool"
                            },
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": "<choice SPI_FLASH_HPM>",
                                        "help": null,
                                        "id": "SPI_FLASH_HPM_ENA",
                                        "name": "SPI_FLASH_HPM_ENA",
                                        "range": null,
                                        "title": "Enable",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "<choice SPI_FLASH_HPM>",
                                        "help": null,
                                        "id": "SPI_FLASH_HPM_AUTO",
                                        "name": "SPI_FLASH_HPM_AUTO",
                                        "range": null,
                                        "title": "Auto (Not recommended)",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "<choice SPI_FLASH_HPM>",
                                        "help": null,
                                        "id": "SPI_FLASH_HPM_DIS",
                                        "name": "SPI_FLASH_HPM_DIS",
                                        "range": null,
                                        "title": "Disabled",
                                        "type": "bool"
                                    }
                                ],
                                "depends_on": "(IDF_TARGET_ESP32S3 || IDF_TARGET_ESP32P4) && !ESPTOOLPY_OCT_FLASH && !APP_BUILD_TYPE_PURE_RAM_APP",
                                "help": "Whether the High Performance Mode of Flash is enabled. As an optional feature, user needs to manually\nenable this option as a confirmation. To be back-compatible with earlier IDF version, this option is\nautomatically enabled with warning when Flash running > 80Mhz.",
                                "id": "component-config-main-flash-configuration-optional-and-experimental-features-read-docs-first--high-performance-mode-read-docs-first-80mhz-",
                                "name": "SPI_FLASH_HPM",
                                "title": "High Performance Mode (READ DOCS FIRST, > 80MHz)",
                                "type": "choice"
                            },
                            {
                                "children": [],
                                "depends_on": "!APP_BUILD_TYPE_PURE_RAM_APP",
                                "help": "This option is invisible, and will be selected automatically\nwhen ``ESPTOOLPY_FLASHFREQ_120M`` is selected.",
                                "id": "SPI_FLASH_HPM_ON",
                                "name": "SPI_FLASH_HPM_ON",
                                "range": null,
                                "title": null,
                                "type": "bool"
                            },
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": "<choice SPI_FLASH_HPM_DC>",
                                        "help": null,
                                        "id": "SPI_FLASH_HPM_DC_AUTO",
                                        "name": "SPI_FLASH_HPM_DC_AUTO",
                                        "range": null,
                                        "title": "Auto (Enable when bootloader support enabled (BOOTLOADER_FLASH_DC_AWARE))",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "<choice SPI_FLASH_HPM_DC>",
                                        "help": null,
                                        "id": "SPI_FLASH_HPM_DC_DISABLE",
                                        "name": "SPI_FLASH_HPM_DC_DISABLE",
                                        "range": null,
                                        "title": "Disable (READ DOCS FIRST)",
                                        "type": "bool"
                                    }
                                ],
                                "depends_on": "SPI_FLASH_HPM_ON && !APP_BUILD_TYPE_PURE_RAM_APP",
                                "help": "This feature needs your bootloader to be compiled DC-aware (BOOTLOADER_FLASH_DC_AWARE=y). Otherwise the\nchip will not be able to boot after a reset.",
                                "id": "component-config-main-flash-configuration-optional-and-experimental-features-read-docs-first--support-hpm-using-dc-read-docs-first-",
                                "name": "SPI_FLASH_HPM_DC",
                                "title": "Support HPM using DC (READ DOCS FIRST)",
                                "type": "choice"
                            },
                            {
                                "children": [],
                                "depends_on": "!APP_BUILD_TYPE_PURE_RAM_APP",
                                "help": "This is a helper config for HPM. Whether HPM-DC is enabled is also determined by bootloader.\nInvisible for users.",
                                "id": "SPI_FLASH_HPM_DC_ON",
                                "name": "SPI_FLASH_HPM_DC_ON",
                                "range": null,
                                "title": null,
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "SOC_SPI_MEM_SUPPORT_AUTO_SUSPEND && !SPI_FLASH_ROM_IMPL && !APP_BUILD_TYPE_PURE_RAM_APP",
                                "help": "This option is disabled by default because it is supported only\nfor specific flash chips and for specific Espressif chips.\nTo evaluate if you can use this feature refer to\n`Optional Features for Flash` > `Auto Suspend & Resume` of the `ESP-IDF Programming Guide`.\n\nCAUTION: If you want to OTA to an app with this feature turned on, please make\nsure the bootloader has the support for it. (later than IDF v4.3)\n\nIf you are using an official Espressif module, please contact Espressif Business support\nto check if the module has the flash that support this feature installed.\nAlso refer to `Concurrency Constraints for Flash on SPI1` > `Flash Auto Suspend Feature`\nbefore enabling this option.",
                                "id": "SPI_FLASH_AUTO_SUSPEND",
                                "name": "SPI_FLASH_AUTO_SUSPEND",
                                "range": null,
                                "title": "Auto suspend long erase/write operations (READ DOCS FIRST)",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "!APP_BUILD_TYPE_PURE_RAM_APP",
                                "help": "This config is used for setting Tsus parameter. Tsus means CS# high to next command after\nsuspend. You can refer to the chapter of AC CHARACTERISTICS of flash datasheet.",
                                "id": "SPI_FLASH_SUSPEND_TSUS_VAL_US",
                                "name": "SPI_FLASH_SUSPEND_TSUS_VAL_US",
                                "range": [
                                    20,
                                    100
                                ],
                                "title": "SPI flash tSUS value (refer to chapter AC CHARACTERISTICS)",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": "!APP_BUILD_TYPE_PURE_RAM_APP",
                                "help": "XMC-C series is regarded as not qualified for the Suspend feature, since its specification\nhas a tRS >= 1ms restriction. We strongly do not suggest using it for the Suspend feature.\nHowever, if your product in field has enabled this feature, you may still enable this\nconfig option to keep the legacy behavior.\n\nFor new users, DO NOT enable this config.",
                                "id": "SPI_FLASH_FORCE_ENABLE_XMC_C_SUSPEND",
                                "name": "SPI_FLASH_FORCE_ENABLE_XMC_C_SUSPEND",
                                "range": null,
                                "title": "Enable XMC-C series flash chip suspend feature anyway",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "SPI_FLASH_AUTO_SUSPEND && FREERTOS_UNICORE && IDF_EXPERIMENTAL_FEATURES && !APP_BUILD_TYPE_PURE_RAM_APP",
                                "help": "Enable this config will disable auto-resume from hardware. Thus the software will resume the chip\nafter any higher priority task/interrupt which suspend the chip. The benefit is that the suspend-resume\nwill not disturb the higher priority task and interrupt.\n\nThis currently is only valid on single core chip.",
                                "id": "SPI_FLASH_SOFTWARE_RESUME",
                                "name": "SPI_FLASH_SOFTWARE_RESUME",
                                "range": null,
                                "title": "Resume flash program/erase form suspend state by software control",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "SPI_FLASH_AUTO_SUSPEND && FREERTOS_UNICORE && !APP_BUILD_TYPE_PURE_RAM_APP",
                                "help": "Disable freertos task scheduler when CONFIG_SPI_FLASH_AUTO_SUSPEND is enabled.\nThus only interrupt can trigger a suspend. When SPI_FLASH_AUTO_SUSPEND is enabled,\ndefault behavior is not disable the task scheduler, so both interrupt and high priority\ntask can suspend the erase/program operation. When this option is enabled, task\nscheduler is disabled, only interrupt can suspend erase/program operation.",
                                "id": "SPI_FLASH_DISABLE_SCHEDULER_IN_SUSPEND",
                                "name": "SPI_FLASH_DISABLE_SCHEDULER_IN_SUSPEND",
                                "range": null,
                                "title": "Disable task scheduler when suspend is enabled when SPI1 operation is ongoing",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "SPI_FLASH_AUTO_SUSPEND && !APP_BUILD_TYPE_PURE_RAM_APP",
                                "help": "Majority flash supports to use flash register to judge if flash suspend status is\ndone or not. So enable this config, the behavior would use flash register WIP bit to judge\nwhether suspend is valid instead of waiting for a specific long time, which can save a\nlot of time and benefit for performance improvement.",
                                "id": "SPI_FLASH_AUTO_CHECK_SUSPEND_STATUS",
                                "name": "SPI_FLASH_AUTO_CHECK_SUSPEND_STATUS",
                                "range": null,
                                "title": "Check flash status automatically after flash suspend",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "!APP_BUILD_TYPE_PURE_RAM_APP",
                        "id": "component-config-main-flash-configuration-optional-and-experimental-features-read-docs-first-",
                        "title": "Optional and Experimental Features (READ DOCS FIRST)",
                        "type": "menu"
                    }
                ],
                "depends_on": "!APP_BUILD_TYPE_PURE_RAM_APP",
                "id": "component-config-main-flash-configuration",
                "title": "Main Flash configuration",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "SPI_FLASH_VERIFY_WRITE && !APP_BUILD_TYPE_PURE_RAM_APP",
                                "help": "If this option is enabled, if SPI flash write verification fails then a log error line\nwill be written with the address, expected & actual values. This can be useful when\ndebugging hardware SPI flash problems.",
                                "id": "SPI_FLASH_LOG_FAILED_WRITE",
                                "name": "SPI_FLASH_LOG_FAILED_WRITE",
                                "range": null,
                                "title": "Log errors if verification fails",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "SPI_FLASH_VERIFY_WRITE && !APP_BUILD_TYPE_PURE_RAM_APP",
                                "help": "If this option is enabled, any SPI flash write which tries to set zero bits in the flash to\nones will log a warning. Such writes will not result in the requested data appearing identically\nin flash once written, as SPI NOR flash can only set bits to one when an entire sector is erased.\nAfter erasing, individual bits can only be written from one to zero.\n\nNote that some software (such as SPIFFS) which is aware of SPI NOR flash may write one bits as an\noptimisation, relying on the data in flash becoming a bitwise AND of the new data and any existing data.\nSuch software will log spurious warnings if this option is enabled.",
                                "id": "SPI_FLASH_WARN_SETTING_ZERO_TO_ONE",
                                "name": "SPI_FLASH_WARN_SETTING_ZERO_TO_ONE",
                                "range": null,
                                "title": "Log warning if writing zero bits to ones",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "!SPI_FLASH_ROM_IMPL && !APP_BUILD_TYPE_PURE_RAM_APP",
                        "help": "If this option is enabled, any time SPI flash is written then the data will be read\nback and verified. This can catch hardware problems with SPI flash, or flash which\nwas not erased before verification.",
                        "id": "SPI_FLASH_VERIFY_WRITE",
                        "name": "SPI_FLASH_VERIFY_WRITE",
                        "range": null,
                        "title": "Verify SPI flash writes",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "!APP_BUILD_TYPE_PURE_RAM_APP",
                        "help": "This option enables the following APIs:\n\n- esp_flash_reset_counters\n- esp_flash_dump_counters\n- esp_flash_get_counters\n\nThese APIs may be used to collect performance data for spi_flash APIs\nand to help understand behaviour of libraries which use SPI flash.",
                        "id": "SPI_FLASH_ENABLE_COUNTERS",
                        "name": "SPI_FLASH_ENABLE_COUNTERS",
                        "range": null,
                        "title": "Enable operation counters",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "!APP_BUILD_TYPE_PURE_RAM_APP",
                        "help": "Enable this flag to use patched versions of SPI flash ROM driver functions.\nThis option should be enabled, if any one of the following is true: (1) need to write\nto flash on ESP32-D2WD; (2) main SPI flash is connected to non-default pins; (3) main\nSPI flash chip is manufactured by ISSI.",
                        "id": "SPI_FLASH_ROM_DRIVER_PATCH",
                        "name": "SPI_FLASH_ROM_DRIVER_PATCH",
                        "range": null,
                        "title": "Enable SPI flash ROM driver patched functions",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "ESP_ROM_HAS_SPI_FLASH && !APP_BUILD_TYPE_PURE_RAM_APP",
                        "help": "Enable this flag to use new SPI flash driver functions from ROM instead of ESP-IDF.\n\nIf keeping this as \"n\" in your project, you will have less free IRAM.\nBut you can use all of our flash features.\n\nIf making this as \"y\" in your project, you will increase free IRAM.\nBut you may miss out on some flash features and support for new flash chips.\n\nCurrently the ROM cannot support the following features:\n\n- SPI_FLASH_AUTO_SUSPEND (C3, S3)",
                        "id": "SPI_FLASH_ROM_IMPL",
                        "name": "SPI_FLASH_ROM_IMPL",
                        "range": null,
                        "title": "Use esp_flash implementation in ROM",
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "<choice SPI_FLASH_DANGEROUS_WRITE>",
                                "help": null,
                                "id": "SPI_FLASH_DANGEROUS_WRITE_ABORTS",
                                "name": "SPI_FLASH_DANGEROUS_WRITE_ABORTS",
                                "range": null,
                                "title": "Aborts",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice SPI_FLASH_DANGEROUS_WRITE>",
                                "help": null,
                                "id": "SPI_FLASH_DANGEROUS_WRITE_FAILS",
                                "name": "SPI_FLASH_DANGEROUS_WRITE_FAILS",
                                "range": null,
                                "title": "Fails",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice SPI_FLASH_DANGEROUS_WRITE>",
                                "help": null,
                                "id": "SPI_FLASH_DANGEROUS_WRITE_ALLOWED",
                                "name": "SPI_FLASH_DANGEROUS_WRITE_ALLOWED",
                                "range": null,
                                "title": "Allowed",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "!APP_BUILD_TYPE_PURE_RAM_APP",
                        "help": "SPI flash APIs can optionally abort or return a failure code\nif erasing or writing addresses that fall at the beginning\nof flash (covering the bootloader and partition table) or that\noverlap the app partition that contains the running app.\n\nIt is not recommended to ever write to these regions from an IDF app,\nand this check prevents logic errors or corrupted firmware memory from\ndamaging these regions.\n\nNote that this feature *does not* check calls to the esp_rom_xxx SPI flash\nROM functions. These functions should not be called directly from IDF\napplications.",
                        "id": "component-config-spi-flash-driver-writing-to-dangerous-flash-regions",
                        "name": "SPI_FLASH_DANGEROUS_WRITE",
                        "title": "Writing to dangerous flash regions",
                        "type": "choice"
                    },
                    {
                        "children": [],
                        "depends_on": "IDF_TARGET_ESP32 && !APP_BUILD_TYPE_PURE_RAM_APP",
                        "help": "Each SPI bus needs a lock for arbitration among devices. This allows multiple\ndevices on a same bus, but may reduce the speed of esp_flash driver access to the\nmain flash chip.\n\nIf you only need to use esp_flash driver to access the main flash chip, disable\nthis option, and the lock will be bypassed on SPI1 bus. Otherwise if extra devices\nare needed to attach to SPI1 bus, enable this option.",
                        "id": "SPI_FLASH_SHARE_SPI1_BUS",
                        "name": "SPI_FLASH_SHARE_SPI1_BUS",
                        "range": null,
                        "title": "Support other devices attached to SPI1 bus",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "!APP_BUILD_TYPE_PURE_RAM_APP",
                        "help": "Some flash chips can have very high \"max\" erase times, especially for block erase (32KB or 64KB).\nThis option allows to bypass \"block erase\" and always do sector erase commands.\nThis will be much slower overall in most cases, but improves latency for other code to run.",
                        "id": "SPI_FLASH_BYPASS_BLOCK_ERASE",
                        "name": "SPI_FLASH_BYPASS_BLOCK_ERASE",
                        "range": null,
                        "title": "Bypass a block erase and always do sector erase",
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "SPI_FLASH_YIELD_DURING_ERASE && !APP_BUILD_TYPE_PURE_RAM_APP",
                                "help": "If a duration of one erase command is large\nthen it will yield CPUs after finishing a current command.",
                                "id": "SPI_FLASH_ERASE_YIELD_DURATION_MS",
                                "name": "SPI_FLASH_ERASE_YIELD_DURATION_MS",
                                "range": null,
                                "title": "Duration of erasing to yield CPUs (ms)",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": "SPI_FLASH_YIELD_DURING_ERASE && !APP_BUILD_TYPE_PURE_RAM_APP",
                                "help": "Defines how many ticks will be before returning to continue a erasing.",
                                "id": "SPI_FLASH_ERASE_YIELD_TICKS",
                                "name": "SPI_FLASH_ERASE_YIELD_TICKS",
                                "range": null,
                                "title": "CPU release time (tick) for an erase operation",
                                "type": "int"
                            }
                        ],
                        "depends_on": "!APP_BUILD_TYPE_PURE_RAM_APP",
                        "help": "This allows to yield the CPUs between erase commands.\nPrevents starvation of other tasks.\nPlease use this configuration together with ``SPI_FLASH_ERASE_YIELD_DURATION_MS`` and\n``SPI_FLASH_ERASE_YIELD_TICKS`` after carefully checking flash datasheet to avoid a\nwatchdog timeout.\nFor more information, please check `SPI Flash API` reference documentation\nunder section `OS Function`.",
                        "id": "SPI_FLASH_YIELD_DURING_ERASE",
                        "name": "SPI_FLASH_YIELD_DURING_ERASE",
                        "range": null,
                        "title": "Enables yield operation during flash erase",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "!APP_BUILD_TYPE_PURE_RAM_APP",
                        "help": "Flash write is broken down in terms of multiple (smaller) write operations.\nThis configuration options helps to set individual write chunk size, smaller\nvalue here ensures that cache (and non-IRAM resident interrupts) remains\ndisabled for shorter duration.",
                        "id": "SPI_FLASH_WRITE_CHUNK_SIZE",
                        "name": "SPI_FLASH_WRITE_CHUNK_SIZE",
                        "range": [
                            256,
                            8192
                        ],
                        "title": "Flash write chunk size",
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": "!APP_BUILD_TYPE_PURE_RAM_APP",
                        "help": "SPI Flash driver uses the flash size configured in bootloader header by default.\nEnable this option to override flash size with latest ESPTOOLPY_FLASHSIZE value from\nthe app header if the size in the bootloader header is incorrect.",
                        "id": "SPI_FLASH_SIZE_OVERRIDE",
                        "name": "SPI_FLASH_SIZE_OVERRIDE",
                        "range": null,
                        "title": "Override flash size in bootloader header by ESPTOOLPY_FLASHSIZE",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "!APP_BUILD_TYPE_PURE_RAM_APP",
                        "help": "This option is helpful if you are using a flash chip whose timeout is quite large or unpredictable.",
                        "id": "SPI_FLASH_CHECK_ERASE_TIMEOUT_DISABLED",
                        "name": "SPI_FLASH_CHECK_ERASE_TIMEOUT_DISABLED",
                        "range": null,
                        "title": "Flash timeout checkout disabled",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "!APP_BUILD_TYPE_PURE_RAM_APP",
                        "help": "This option allows the chip driver list to be customized, instead of using the default list provided by\nESP-IDF.\n\nWhen this option is enabled, the default list is no longer compiled or linked. Instead, the\n`default_registered_chips` structure must be provided by the user.\n\nSee example: custom_chip_driver under examples/storage for more details.",
                        "id": "SPI_FLASH_OVERRIDE_CHIP_DRIVER_LIST",
                        "name": "SPI_FLASH_OVERRIDE_CHIP_DRIVER_LIST",
                        "range": null,
                        "title": "Override default chip driver list",
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "!APP_BUILD_TYPE_PURE_RAM_APP",
                                "help": null,
                                "id": "SPI_FLASH_VENDOR_XMC_SUPPORTED",
                                "name": "SPI_FLASH_VENDOR_XMC_SUPPORTED",
                                "range": null,
                                "title": null,
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "!APP_BUILD_TYPE_PURE_RAM_APP",
                                "help": null,
                                "id": "SPI_FLASH_VENDOR_GD_SUPPORTED",
                                "name": "SPI_FLASH_VENDOR_GD_SUPPORTED",
                                "range": null,
                                "title": null,
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "!APP_BUILD_TYPE_PURE_RAM_APP",
                                "help": null,
                                "id": "SPI_FLASH_VENDOR_ISSI_SUPPORTED",
                                "name": "SPI_FLASH_VENDOR_ISSI_SUPPORTED",
                                "range": null,
                                "title": null,
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "!APP_BUILD_TYPE_PURE_RAM_APP",
                                "help": null,
                                "id": "SPI_FLASH_VENDOR_MXIC_SUPPORTED",
                                "name": "SPI_FLASH_VENDOR_MXIC_SUPPORTED",
                                "range": null,
                                "title": null,
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "!APP_BUILD_TYPE_PURE_RAM_APP",
                                "help": null,
                                "id": "SPI_FLASH_VENDOR_WINBOND_SUPPORTED",
                                "name": "SPI_FLASH_VENDOR_WINBOND_SUPPORTED",
                                "range": null,
                                "title": null,
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "!APP_BUILD_TYPE_PURE_RAM_APP",
                                "help": "Enable this to support auto detection of ISSI chips if chip vendor not directly\ngiven by ``chip_drv`` member of the chip struct. This adds support for variant\nchips, however will extend detecting time.",
                                "id": "SPI_FLASH_SUPPORT_ISSI_CHIP",
                                "name": "SPI_FLASH_SUPPORT_ISSI_CHIP",
                                "range": null,
                                "title": "ISSI",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "!APP_BUILD_TYPE_PURE_RAM_APP",
                                "help": "Enable this to support auto detection of MXIC chips if chip vendor not directly\ngiven by ``chip_drv`` member of the chip struct. This adds support for variant\nchips, however will extend detecting time.",
                                "id": "SPI_FLASH_SUPPORT_MXIC_CHIP",
                                "name": "SPI_FLASH_SUPPORT_MXIC_CHIP",
                                "range": null,
                                "title": "MXIC",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "!APP_BUILD_TYPE_PURE_RAM_APP",
                                "help": "Enable this to support auto detection of GD (GigaDevice) chips if chip vendor not\ndirectly given by ``chip_drv`` member of the chip struct. If you are using Wrover\nmodules, please don't disable this, otherwise your flash may not work in 4-bit\nmode.\n\nThis adds support for variant chips, however will extend detecting time and image\nsize. Note that the default chip driver supports the GD chips with product ID\n60H.",
                                "id": "SPI_FLASH_SUPPORT_GD_CHIP",
                                "name": "SPI_FLASH_SUPPORT_GD_CHIP",
                                "range": null,
                                "title": "GigaDevice",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "!APP_BUILD_TYPE_PURE_RAM_APP",
                                "help": "Enable this to support auto detection of Winbond chips if chip vendor not directly\ngiven by ``chip_drv`` member of the chip struct. This adds support for variant\nchips, however will extend detecting time.",
                                "id": "SPI_FLASH_SUPPORT_WINBOND_CHIP",
                                "name": "SPI_FLASH_SUPPORT_WINBOND_CHIP",
                                "range": null,
                                "title": "Winbond",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "!APP_BUILD_TYPE_PURE_RAM_APP",
                                "help": "Enable this to support auto detection of BOYA chips if chip vendor not directly\ngiven by ``chip_drv`` member of the chip struct. This adds support for variant\nchips, however will extend detecting time.",
                                "id": "SPI_FLASH_SUPPORT_BOYA_CHIP",
                                "name": "SPI_FLASH_SUPPORT_BOYA_CHIP",
                                "range": null,
                                "title": "BOYA",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "!APP_BUILD_TYPE_PURE_RAM_APP",
                                "help": "Enable this to support auto detection of TH chips if chip vendor not directly\ngiven by ``chip_drv`` member of the chip struct. This adds support for variant\nchips, however will extend detecting time.",
                                "id": "SPI_FLASH_SUPPORT_TH_CHIP",
                                "name": "SPI_FLASH_SUPPORT_TH_CHIP",
                                "range": null,
                                "title": "TH",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "IDF_TARGET_ESP32S3 && !APP_BUILD_TYPE_PURE_RAM_APP",
                                "help": "Enable this to support auto detection of Octal MXIC chips if chip vendor not directly\ngiven by ``chip_drv`` member of the chip struct. This adds support for variant\nchips, however will extend detecting time.",
                                "id": "SPI_FLASH_SUPPORT_MXIC_OPI_CHIP",
                                "name": "SPI_FLASH_SUPPORT_MXIC_OPI_CHIP",
                                "range": null,
                                "title": "mxic (opi)",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "!APP_BUILD_TYPE_PURE_RAM_APP",
                        "id": "component-config-spi-flash-driver-auto-detect-flash-chips",
                        "title": "Auto-detect flash chips",
                        "type": "menu"
                    },
                    {
                        "children": [],
                        "depends_on": "!APP_BUILD_TYPE_PURE_RAM_APP",
                        "help": "This option enables flash read/write operations to encrypted partition/s. This option\nis kept enabled irrespective of state of flash encryption feature. However, in case\napplication is not using flash encryption feature and is in need of some additional\nmemory from IRAM region (~1KB) then this config can be disabled.",
                        "id": "SPI_FLASH_ENABLE_ENCRYPTED_READ_WRITE",
                        "name": "SPI_FLASH_ENABLE_ENCRYPTED_READ_WRITE",
                        "range": null,
                        "title": "Enable encrypted partition read/write operations",
                        "type": "bool"
                    }
                ],
                "depends_on": "!APP_BUILD_TYPE_PURE_RAM_APP",
                "id": "component-config-spi-flash-driver",
                "title": "SPI Flash driver",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": "SOC_ULP_FSM_SUPPORTED && <choice ULP_COPROC_TYPE>",
                                        "help": null,
                                        "id": "ULP_COPROC_TYPE_FSM",
                                        "name": "ULP_COPROC_TYPE_FSM",
                                        "range": null,
                                        "title": "ULP FSM (Finite State Machine)",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "SOC_RISCV_COPROC_SUPPORTED && <choice ULP_COPROC_TYPE>",
                                        "help": null,
                                        "id": "ULP_COPROC_TYPE_RISCV",
                                        "name": "ULP_COPROC_TYPE_RISCV",
                                        "range": null,
                                        "title": "ULP RISC-V",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "SOC_LP_CORE_SUPPORTED && <choice ULP_COPROC_TYPE>",
                                        "help": null,
                                        "id": "ULP_COPROC_TYPE_LP_CORE",
                                        "name": "ULP_COPROC_TYPE_LP_CORE",
                                        "range": null,
                                        "title": "LP core RISC-V",
                                        "type": "bool"
                                    }
                                ],
                                "depends_on": "ULP_COPROC_ENABLED && (SOC_ULP_SUPPORTED || SOC_RISCV_COPROC_SUPPORTED || SOC_LP_CORE_SUPPORTED)",
                                "help": "Choose the ULP Coprocessor type: ULP FSM (Finite State Machine) or ULP RISC-V.",
                                "id": "component-config-ultra-low-power-ulp-co-processor-enable-ultra-low-power-ulp-co-processor-ulp-co-processor-type",
                                "name": "ULP_COPROC_TYPE",
                                "title": "ULP Co-processor type",
                                "type": "choice"
                            },
                            {
                                "children": [],
                                "depends_on": "ULP_COPROC_ENABLED && (SOC_ULP_SUPPORTED || SOC_RISCV_COPROC_SUPPORTED || SOC_LP_CORE_SUPPORTED)",
                                "help": "Bytes of memory to reserve for ULP Co-processor firmware & data.\nData is reserved at the beginning of RTC slow memory.",
                                "id": "ULP_COPROC_RESERVE_MEM",
                                "name": "ULP_COPROC_RESERVE_MEM",
                                "range": [
                                    32,
                                    8176
                                ],
                                "title": "RTC slow memory reserved for coprocessor",
                                "type": "int"
                            }
                        ],
                        "depends_on": "SOC_ULP_SUPPORTED || SOC_RISCV_COPROC_SUPPORTED || SOC_LP_CORE_SUPPORTED",
                        "help": "Enable this feature if you plan to use the ULP Co-processor.\nOnce this option is enabled, further ULP co-processor configuration will appear in the menu.",
                        "id": "ULP_COPROC_ENABLED",
                        "name": "ULP_COPROC_ENABLED",
                        "range": null,
                        "title": "Enable Ultra Low Power (ULP) Co-processor",
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "ULP_COPROC_TYPE_RISCV && (SOC_ULP_SUPPORTED || SOC_RISCV_COPROC_SUPPORTED || SOC_LP_CORE_SUPPORTED)",
                                "help": "Turn on this setting to enabled interrupts on the ULP RISC-V core.",
                                "id": "ULP_RISCV_INTERRUPT_ENABLE",
                                "name": "ULP_RISCV_INTERRUPT_ENABLE",
                                "range": null,
                                "title": "Enable ULP RISC-V interrupts",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "ULP_COPROC_TYPE_RISCV && (SOC_ULP_SUPPORTED || SOC_RISCV_COPROC_SUPPORTED || SOC_LP_CORE_SUPPORTED)",
                                "help": "The accuracy of the bitbanged UART driver is limited, it is not\nrecommend to increase the value above 19200.",
                                "id": "ULP_RISCV_UART_BAUDRATE",
                                "name": "ULP_RISCV_UART_BAUDRATE",
                                "range": null,
                                "title": "Baudrate used by the bitbanged ULP RISC-V UART driver",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": "ULP_COPROC_TYPE_RISCV && (SOC_ULP_SUPPORTED || SOC_RISCV_COPROC_SUPPORTED || SOC_LP_CORE_SUPPORTED)",
                                "help": "Set the ULP RISC-V I2C read/write timeout. Set this value to -1\nif the ULP RISC-V I2C read and write APIs should wait forever.\nPlease note that the tick rate of the ULP co-processor would be\ndifferent than the OS tick rate of the main core and therefore\ncan have different timeout value depending on which core the API\nis invoked on.",
                                "id": "ULP_RISCV_I2C_RW_TIMEOUT",
                                "name": "ULP_RISCV_I2C_RW_TIMEOUT",
                                "range": null,
                                "title": "Set timeout for ULP RISC-V I2C transaction timeout in ticks.",
                                "type": "int"
                            }
                        ],
                        "depends_on": "ULP_COPROC_TYPE_RISCV && (SOC_ULP_SUPPORTED || SOC_RISCV_COPROC_SUPPORTED || SOC_LP_CORE_SUPPORTED)",
                        "id": "component-config-ultra-low-power-ulp-co-processor-ulp-risc-v-settings",
                        "title": "ULP RISC-V Settings",
                        "type": "menu"
                    },
                    {
                        "children": [],
                        "depends_on": "ULP_COPROC_TYPE_LP_CORE && (SOC_ULP_SUPPORTED || SOC_RISCV_COPROC_SUPPORTED || SOC_LP_CORE_SUPPORTED)",
                        "help": "Size of the shared memory defined in ulp_lp_core_memory_shared.c.\nSize should be kept in-sync with the size of the struct defined there.",
                        "id": "ULP_SHARED_MEM",
                        "name": "ULP_SHARED_MEM",
                        "range": null,
                        "title": null,
                        "type": "hex"
                    },
                    {
                        "children": [],
                        "depends_on": "ULP_COPROC_TYPE_LP_CORE && ESP_ROM_HAS_LP_ROM && (SOC_ULP_SUPPORTED || SOC_RISCV_COPROC_SUPPORTED || SOC_LP_CORE_SUPPORTED)",
                        "help": "Set this option to enable printf functionality from LP ROM. This option\ncan help reduce the LP core binary size by not linking printf functionality\nfrom RAM code.\nNote: For LP ROM prints to work properly, make sure that the LP core boots\nfrom the LP ROM.",
                        "id": "ULP_ROM_PRINT_ENABLE",
                        "name": "ULP_ROM_PRINT_ENABLE",
                        "range": null,
                        "title": "Enable print utilities from LP ROM",
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "ULP_COPROC_TYPE_LP_CORE && SOC_ULP_LP_UART_SUPPORTED && (SOC_ULP_SUPPORTED || SOC_RISCV_COPROC_SUPPORTED || SOC_LP_CORE_SUPPORTED)",
                                "help": "Set this option to enable panic handler functionality. If this option is\nenabled then the LP Core will output a panic dump over LP UART,\nsimilar to what the main core does. Output depends on LP UART already being\ninitialized and configured.\nDisabling this option will reduce the LP core binary size by not\nlinking in panic handler functionality.",
                                "id": "ULP_PANIC_OUTPUT_ENABLE",
                                "name": "ULP_PANIC_OUTPUT_ENABLE",
                                "range": null,
                                "title": "Enable panic handler which outputs over LP UART",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "ULP_COPROC_TYPE_LP_CORE && (SOC_ULP_SUPPORTED || SOC_RISCV_COPROC_SUPPORTED || SOC_LP_CORE_SUPPORTED)",
                                "help": "Set this option to route lp_core_printf to the console HP-UART.\nThis allows you to easily view print outputs from the LP core, without\nhaving to connect to the LP-UART. This option comes with the following\nlimitations:\n\n1. There is no mutual exclusion between the HP-Core and the LP-Core accessing\nthe HP-UART, which means that if both cores are logging heavily the output\nstrings might get mangled together.\n2. The HP-UART can only work while the HP-Core is running, which means that\nif the HP-Core is in deep sleep, the LP-Core will not be able to print to the\nconsole HP-UART.\n\nDue to these limitations it is only recommended to use this option for easy debugging.\nFor more serious use-cases you should use the LP-UART.",
                                "id": "ULP_HP_UART_CONSOLE_PRINT",
                                "name": "ULP_HP_UART_CONSOLE_PRINT",
                                "range": null,
                                "title": "Route lp_core_printf to the console HP-UART",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "ULP_COPROC_TYPE_LP_CORE && (SOC_ULP_SUPPORTED || SOC_RISCV_COPROC_SUPPORTED || SOC_LP_CORE_SUPPORTED)",
                                "help": "Enable this feature to avoid resetting LP core in sleep mode when debugger is attached,\notherwise configured HW breakpoints and dcsr.ebreak* bits will be missed.\nThis is a workaround until it will be fixed in HW.",
                                "id": "ULP_NORESET_UNDER_DEBUG",
                                "name": "ULP_NORESET_UNDER_DEBUG",
                                "range": null,
                                "title": "Avoid resetting LP core when debugger is attached",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "SOC_ULP_SUPPORTED || SOC_RISCV_COPROC_SUPPORTED || SOC_LP_CORE_SUPPORTED",
                        "id": "component-config-ultra-low-power-ulp-co-processor-ulp-debugging-options",
                        "title": "ULP Debugging Options",
                        "type": "menu"
                    }
                ],
                "depends_on": "SOC_ULP_SUPPORTED || SOC_RISCV_COPROC_SUPPORTED || SOC_LP_CORE_SUPPORTED",
                "id": "component-config-ultra-low-power-ulp-co-processor",
                "title": "Ultra Low Power (ULP) Co-processor",
                "type": "menu"
            }
        ],
        "depends_on": null,
        "id": "component-config",
        "title": "Component config",
        "type": "menu"
    },
    {
        "children": [],
        "depends_on": null,
        "help": "By enabling this option, ESP-IDF experimental feature options will be visible.\n\nNote you should still enable a certain experimental feature option to use it, and you\nshould read the corresponding risk warning and known issue list carefully.\n\nCurrent experimental feature list:\n\n- CONFIG_ESPTOOLPY_FLASHFREQ_120M && CONFIG_ESPTOOLPY_FLASH_SAMPLE_MODE_DTR\n- CONFIG_SPIRAM_SPEED_120M && CONFIG_SPIRAM_MODE_OCT\n- CONFIG_BOOTLOADER_CACHE_32BIT_ADDR_QUAD_FLASH\n- CONFIG_ESP_WIFI_EAP_TLS1_3\n- CONFIG_ESP_WIFI_ENABLE_ROAMING_APP\n- CONFIG_USB_HOST_EXT_PORT_SUPPORT_LS\n- CONFIG_USB_HOST_EXT_PORT_RESET_ATTEMPTS\n- CONFIG_LIBC_PICOLIBC",
        "id": "IDF_EXPERIMENTAL_FEATURES",
        "name": "IDF_EXPERIMENTAL_FEATURES",
        "range": null,
        "title": "Make experimental features visible",
        "type": "bool"
    }
]